### YamlMime:ManagedReference
items:
- uid: Global.AstarPath
  commentId: T:Global.AstarPath
  id: AstarPath
  parent: Global
  children:
  - Global.AstarPath.active
  - Global.AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)
  - Global.AstarPath.AddWorkItem(System.Action)
  - Global.AstarPath.AddWorkItem(System.Action{Pathfinding.IWorkItemContext})
  - Global.AstarPath.astarData
  - Global.AstarPath.Awake
  - Global.AstarPath.batchGraphUpdates
  - Global.AstarPath.BlockUntilCalculated(Pathfinding.Path)
  - Global.AstarPath.BlockUntilPathQueueBlocked
  - Global.AstarPath.Branch
  - Global.AstarPath.CalculateThreadCount(Pathfinding.ThreadCount)
  - Global.AstarPath.colorSettings
  - Global.AstarPath.ConfigureReferencesInternal
  - Global.AstarPath.data
  - Global.AstarPath.debugFloor
  - Global.AstarPath.debugMode
  - Global.AstarPath.debugPathData
  - Global.AstarPath.debugPathID
  - Global.AstarPath.debugRoof
  - Global.AstarPath.Distribution
  - Global.AstarPath.EnsureValidFloodFill
  - Global.AstarPath.euclideanEmbedding
  - Global.AstarPath.FindAstarPath
  - Global.AstarPath.FindTagNames
  - Global.AstarPath.FloodFill
  - Global.AstarPath.FloodFill(Pathfinding.GraphNode,System.UInt32)
  - Global.AstarPath.FloodFill(Pathfinding.GraphNode)
  - Global.AstarPath.FlushGraphUpdates
  - Global.AstarPath.FlushThreadSafeCallbacks
  - Global.AstarPath.FlushWorkItems
  - Global.AstarPath.FlushWorkItems(System.Boolean,System.Boolean)
  - Global.AstarPath.fullGetNearestSearch
  - Global.AstarPath.GetNearest(UnityEngine.Ray)
  - Global.AstarPath.GetNearest(UnityEngine.Vector3,Pathfinding.NNConstraint,Pathfinding.GraphNode)
  - Global.AstarPath.GetNearest(UnityEngine.Vector3,Pathfinding.NNConstraint)
  - Global.AstarPath.GetNearest(UnityEngine.Vector3)
  - Global.AstarPath.GetTagNames
  - Global.AstarPath.graphs
  - Global.AstarPath.graphTypes
  - Global.AstarPath.graphUpdateBatchingInterval
  - Global.AstarPath.heuristic
  - Global.AstarPath.heuristicScale
  - Global.AstarPath.IsAnyGraphUpdateInProgress
  - Global.AstarPath.IsAnyGraphUpdateQueued
  - Global.AstarPath.IsAnyGraphUpdatesQueued
  - Global.AstarPath.IsAnyWorkItemInProgress
  - Global.AstarPath.isScanning
  - Global.AstarPath.IsUsingMultithreading
  - Global.AstarPath.lastScanTime
  - Global.AstarPath.limitGraphUpdates
  - Global.AstarPath.logPathResults
  - Global.AstarPath.manualDebugFloorRoof
  - Global.AstarPath.maxFrameTime
  - Global.AstarPath.maxGraphUpdateFreq
  - Global.AstarPath.maxNearestNodeDistance
  - Global.AstarPath.maxNearestNodeDistanceSqr
  - Global.AstarPath.navmeshUpdates
  - Global.AstarPath.NumParallelThreads
  - Global.AstarPath.On65KOverflow
  - Global.AstarPath.OnAwakeSettings
  - Global.AstarPath.OnGraphPostScan
  - Global.AstarPath.OnGraphPreScan
  - Global.AstarPath.OnGraphsUpdated
  - Global.AstarPath.OnGraphsWillBeUpdated
  - Global.AstarPath.OnGraphsWillBeUpdated2
  - Global.AstarPath.OnLatePostScan
  - Global.AstarPath.OnPathPostSearch
  - Global.AstarPath.OnPathPreSearch
  - Global.AstarPath.OnPostScan
  - Global.AstarPath.OnPreScan
  - Global.AstarPath.PausePathfinding
  - Global.AstarPath.prioritizeGraphs
  - Global.AstarPath.prioritizeGraphsLimit
  - Global.AstarPath.QueueGraphUpdates
  - Global.AstarPath.QueueWorkItemFloodFill
  - Global.AstarPath.RegisterSafeUpdate(System.Action)
  - Global.AstarPath.Scan(Pathfinding.NavGraph)
  - Global.AstarPath.Scan(Pathfinding.NavGraph[])
  - Global.AstarPath.ScanAsync(Pathfinding.NavGraph)
  - Global.AstarPath.ScanAsync(Pathfinding.NavGraph[])
  - Global.AstarPath.scanOnStartup
  - Global.AstarPath.showGraphs
  - Global.AstarPath.showNavGraphs
  - Global.AstarPath.showSearchTree
  - Global.AstarPath.showUnwalkableNodes
  - Global.AstarPath.StartPath(Pathfinding.Path,System.Boolean)
  - Global.AstarPath.tagNames
  - Global.AstarPath.threadCount
  - Global.AstarPath.unwalkableNodeDebugSize
  - Global.AstarPath.UpdateGraphs(Pathfinding.GraphUpdateObject,System.Single)
  - Global.AstarPath.UpdateGraphs(Pathfinding.GraphUpdateObject)
  - Global.AstarPath.UpdateGraphs(UnityEngine.Bounds,System.Single)
  - Global.AstarPath.UpdateGraphs(UnityEngine.Bounds)
  - Global.AstarPath.Version
  - Global.AstarPath.WaitForPath(Pathfinding.Path)
  langs:
  - csharp
  - vb
  name: AstarPath
  nameWithType: AstarPath
  fullName: AstarPath
  type: Class
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: AstarPath
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 14
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  syntax:
    content: >-
      [ExecuteInEditMode]

      [AddComponentMenu("Pathfinding/Pathfinder")]

      [HelpURL("http://arongranberg.com/astar/docs/class_astar_path.php")]

      public class AstarPath : VersionedMonoBehaviour
    content.vb: >-
      <ExecuteInEditMode>

      <AddComponentMenu("Pathfinding/Pathfinder")>

      <HelpURL("http://arongranberg.com/astar/docs/class_astar_path.php")>

      Public Class AstarPath Inherits VersionedMonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - Pathfinding.VersionedMonoBehaviour
  attributes:
  - type: UnityEngine.ExecuteInEditMode
    ctor: UnityEngine.ExecuteInEditMode.#ctor
    arguments: []
  - type: UnityEngine.AddComponentMenu
    ctor: UnityEngine.AddComponentMenu.#ctor(System.String)
    arguments:
    - type: System.String
      value: Pathfinding/Pathfinder
  - type: UnityEngine.HelpURLAttribute
    ctor: UnityEngine.HelpURLAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://arongranberg.com/astar/docs/class_astar_path.php
- uid: Global.AstarPath.Version
  commentId: F:Global.AstarPath.Version
  id: Version
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: AstarPath.Version
  fullName: AstarPath.Version
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: Version
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 28
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: The version number for the A* %Pathfinding Project
  example: []
  syntax:
    content: public static readonly Version Version
    return:
      type: System.Version
    content.vb: Public Shared ReadOnly Version As Version
- uid: Global.AstarPath.Distribution
  commentId: F:Global.AstarPath.Distribution
  id: Distribution
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: Distribution
  nameWithType: AstarPath.Distribution
  fullName: AstarPath.Distribution
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: Distribution
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 34
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Used by the editor to guide the user to the correct place to download updates
  example: []
  syntax:
    content: public static readonly AstarPath.AstarDistribution Distribution
    return:
      type: Global.AstarPath.AstarDistribution
    content.vb: Public Shared ReadOnly Distribution As AstarPath.AstarDistribution
- uid: Global.AstarPath.Branch
  commentId: F:Global.AstarPath.Branch
  id: Branch
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: Branch
  nameWithType: AstarPath.Branch
  fullName: AstarPath.Branch
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: Branch
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 42
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nWhich branch of the A* %Pathfinding Project is this release.\nUsed when checking for updates so that\nusers of the development versions can get notifications of development\nupdates.\n"
  example: []
  syntax:
    content: public static readonly string Branch
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Branch As String
- uid: Global.AstarPath.graphTypes
  commentId: P:Global.AstarPath.graphTypes
  id: graphTypes
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: graphTypes
  nameWithType: AstarPath.graphTypes
  fullName: AstarPath.graphTypes
  type: Property
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: graphTypes
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 48
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nSee Pathfinding.AstarData\nDeprecated:\n"
  example: []
  syntax:
    content: >-
      [Obsolete]

      public Type[] graphTypes { get; }
    parameters: []
    return:
      type: System.Type[]
    content.vb: >-
      <Obsolete>

      Public ReadOnly Property graphTypes As Type()
  overload: Global.AstarPath.graphTypes*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Global.AstarPath.data
  commentId: F:Global.AstarPath.data
  id: data
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: data
  nameWithType: AstarPath.data
  fullName: AstarPath.data
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: data
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 57
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Holds all graph data
  example: []
  syntax:
    content: >-
      [FormerlySerializedAs("astarData")]

      public AstarData data
    return:
      type: Pathfinding.AstarData
    content.vb: >-
      <FormerlySerializedAs("astarData")>

      Public data As AstarData
  attributes:
  - type: UnityEngine.Serialization.FormerlySerializedAsAttribute
    ctor: UnityEngine.Serialization.FormerlySerializedAsAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: astarData
- uid: Global.AstarPath.astarData
  commentId: P:Global.AstarPath.astarData
  id: astarData
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: astarData
  nameWithType: AstarPath.astarData
  fullName: AstarPath.astarData
  type: Property
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: astarData
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 63
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nHolds all graph data.\nDeprecated: The &apos;astarData&apos; field has been renamed to &apos;data&apos;\n"
  example: []
  syntax:
    content: >-
      [Obsolete("The 'astarData' field has been renamed to 'data'")]

      public AstarData astarData { get; }
    parameters: []
    return:
      type: Pathfinding.AstarData
    content.vb: >-
      <Obsolete("The 'astarData' field has been renamed to 'data'")>

      Public ReadOnly Property astarData As AstarData
  overload: Global.AstarPath.astarData*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: The 'astarData' field has been renamed to 'data'
- uid: Global.AstarPath.active
  commentId: F:Global.AstarPath.active
  id: active
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: active
  nameWithType: AstarPath.active
  fullName: AstarPath.active
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: active
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 73
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nReturns the active AstarPath object in the scene.\nNote: This is only set if the AstarPath object has been initialized (which happens in Awake).\n"
  example: []
  syntax:
    content: public static AstarPath active
    return:
      type: Global.AstarPath
    content.vb: Public Shared active As AstarPath
- uid: Global.AstarPath.graphs
  commentId: P:Global.AstarPath.graphs
  id: graphs
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: graphs
  nameWithType: AstarPath.graphs
  fullName: AstarPath.graphs
  type: Property
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: graphs
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 77
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Shortcut to Pathfinding.AstarData.graphs
  example: []
  syntax:
    content: public NavGraph[] graphs { get; }
    parameters: []
    return:
      type: Pathfinding.NavGraph[]
    content.vb: Public ReadOnly Property graphs As NavGraph()
  overload: Global.AstarPath.graphs*
- uid: Global.AstarPath.showNavGraphs
  commentId: F:Global.AstarPath.showNavGraphs
  id: showNavGraphs
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: showNavGraphs
  nameWithType: AstarPath.showNavGraphs
  fullName: AstarPath.showNavGraphs
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: showNavGraphs
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 95
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\n@name Inspector - Debug\n@{\n"
  example: []
  syntax:
    content: public bool showNavGraphs
    return:
      type: System.Boolean
    content.vb: Public showNavGraphs As Boolean
- uid: Global.AstarPath.showUnwalkableNodes
  commentId: F:Global.AstarPath.showUnwalkableNodes
  id: showUnwalkableNodes
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: showUnwalkableNodes
  nameWithType: AstarPath.showUnwalkableNodes
  fullName: AstarPath.showUnwalkableNodes
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: showUnwalkableNodes
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 104
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nToggle to show unwalkable nodes.\n\nNote: Only relevant in the editor\n\nSee: <xref href=\"AstarPath.unwalkableNodeDebugSize\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public bool showUnwalkableNodes
    return:
      type: System.Boolean
    content.vb: Public showUnwalkableNodes As Boolean
- uid: Global.AstarPath.debugMode
  commentId: F:Global.AstarPath.debugMode
  id: debugMode
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: debugMode
  nameWithType: AstarPath.debugMode
  fullName: AstarPath.debugMode
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: debugMode
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 113
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nThe mode to use for drawing nodes in the sceneview.\n\nNote: Only relevant in the editor\n\nSee: Pathfinding.GraphDebugMode\n"
  example: []
  syntax:
    content: public GraphDebugMode debugMode
    return:
      type: Pathfinding.GraphDebugMode
    content.vb: Public debugMode As GraphDebugMode
- uid: Global.AstarPath.debugFloor
  commentId: F:Global.AstarPath.debugFloor
  id: debugFloor
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: debugFloor
  nameWithType: AstarPath.debugFloor
  fullName: AstarPath.debugFloor
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: debugFloor
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 124
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nLow value to use for certain <xref href=\"AstarPath.debugMode\" data-throw-if-not-resolved=\"false\"></xref> modes.\nFor example if <xref href=\"AstarPath.debugMode\" data-throw-if-not-resolved=\"false\"></xref> is set to G, this value will determine when the node will be completely red.\n\nNote: Only relevant in the editor\n\nSee: <xref href=\"AstarPath.debugRoof\" data-throw-if-not-resolved=\"false\"></xref>\nSee: <xref href=\"AstarPath.debugMode\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public float debugFloor
    return:
      type: System.Single
    content.vb: Public debugFloor As Single
- uid: Global.AstarPath.debugRoof
  commentId: F:Global.AstarPath.debugRoof
  id: debugRoof
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: debugRoof
  nameWithType: AstarPath.debugRoof
  fullName: AstarPath.debugRoof
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: debugRoof
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 138
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nHigh value to use for certain <xref href=\"AstarPath.debugMode\" data-throw-if-not-resolved=\"false\"></xref> modes.\nFor example if <xref href=\"AstarPath.debugMode\" data-throw-if-not-resolved=\"false\"></xref> is set to G, this value will determine when the node will be completely green.\n\nFor the penalty debug mode, the nodes will be colored green when they have a penalty less than <xref href=\"AstarPath.debugFloor\" data-throw-if-not-resolved=\"false\"></xref> and red\nwhen their penalty is greater or equal to this value and something between red and green otherwise.\n\nNote: Only relevant in the editor\n\nSee: <xref href=\"AstarPath.debugFloor\" data-throw-if-not-resolved=\"false\"></xref>\nSee: <xref href=\"AstarPath.debugMode\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public float debugRoof
    return:
      type: System.Single
    content.vb: Public debugRoof As Single
- uid: Global.AstarPath.manualDebugFloorRoof
  commentId: F:Global.AstarPath.manualDebugFloorRoof
  id: manualDebugFloorRoof
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: manualDebugFloorRoof
  nameWithType: AstarPath.manualDebugFloorRoof
  fullName: AstarPath.manualDebugFloorRoof
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: manualDebugFloorRoof
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 145
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nIf set, the <xref href=\"AstarPath.debugFloor\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"AstarPath.debugRoof\" data-throw-if-not-resolved=\"false\"></xref> values will not be automatically recalculated.\n\nNote: Only relevant in the editor\n"
  example: []
  syntax:
    content: public bool manualDebugFloorRoof
    return:
      type: System.Boolean
    content.vb: Public manualDebugFloorRoof As Boolean
- uid: Global.AstarPath.showSearchTree
  commentId: F:Global.AstarPath.showSearchTree
  id: showSearchTree
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: showSearchTree
  nameWithType: AstarPath.showSearchTree
  fullName: AstarPath.showSearchTree
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: showSearchTree
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 156
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nIf enabled, nodes will draw a line to their &apos;parent&apos;.\nThis will show the search tree for the latest path.\n\nNote: Only relevant in the editor\n\nTODO: Add a showOnlyLastPath flag to indicate whether to draw every node or only the ones visited by the latest path.\n"
  example: []
  syntax:
    content: public bool showSearchTree
    return:
      type: System.Boolean
    content.vb: Public showSearchTree As Boolean
- uid: Global.AstarPath.unwalkableNodeDebugSize
  commentId: F:Global.AstarPath.unwalkableNodeDebugSize
  id: unwalkableNodeDebugSize
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: unwalkableNodeDebugSize
  nameWithType: AstarPath.unwalkableNodeDebugSize
  fullName: AstarPath.unwalkableNodeDebugSize
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: unwalkableNodeDebugSize
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 164
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nSize of the red cubes shown in place of unwalkable nodes.\n\nNote: Only relevant in the editor. Does not apply to grid graphs.\nSee: <xref href=\"AstarPath.showUnwalkableNodes\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public float unwalkableNodeDebugSize
    return:
      type: System.Single
    content.vb: Public unwalkableNodeDebugSize As Single
- uid: Global.AstarPath.logPathResults
  commentId: F:Global.AstarPath.logPathResults
  id: logPathResults
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: logPathResults
  nameWithType: AstarPath.logPathResults
  fullName: AstarPath.logPathResults
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: logPathResults
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 174
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nThe amount of debugging messages.\nUse less debugging to improve performance (a bit) or just to get rid of the Console spamming.\nUse more debugging (heavy) if you want more information about what the pathfinding scripts are doing.\nThe InGame option will display the latest path log using in-game GUI.\n\n[Open online documentation to see images]\n"
  example: []
  syntax:
    content: public PathLog logPathResults
    return:
      type: Pathfinding.PathLog
    content.vb: Public logPathResults As PathLog
- uid: Global.AstarPath.maxNearestNodeDistance
  commentId: F:Global.AstarPath.maxNearestNodeDistance
  id: maxNearestNodeDistance
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: maxNearestNodeDistance
  nameWithType: AstarPath.maxNearestNodeDistance
  fullName: AstarPath.maxNearestNodeDistance
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: maxNearestNodeDistance
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 197
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\n@name Inspector - Settings\n@{\n"
  example: []
  syntax:
    content: public float maxNearestNodeDistance
    return:
      type: System.Single
    content.vb: Public maxNearestNodeDistance As Single
- uid: Global.AstarPath.maxNearestNodeDistanceSqr
  commentId: P:Global.AstarPath.maxNearestNodeDistanceSqr
  id: maxNearestNodeDistanceSqr
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: maxNearestNodeDistanceSqr
  nameWithType: AstarPath.maxNearestNodeDistanceSqr
  fullName: AstarPath.maxNearestNodeDistanceSqr
  type: Property
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: maxNearestNodeDistanceSqr
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 203
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nMax Nearest Node Distance Squared.\nSee: <xref href=\"AstarPath.maxNearestNodeDistance\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public float maxNearestNodeDistanceSqr { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property maxNearestNodeDistanceSqr As Single
  overload: Global.AstarPath.maxNearestNodeDistanceSqr*
- uid: Global.AstarPath.scanOnStartup
  commentId: F:Global.AstarPath.scanOnStartup
  id: scanOnStartup
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: scanOnStartup
  nameWithType: AstarPath.scanOnStartup
  fullName: AstarPath.scanOnStartup
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: scanOnStartup
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 216
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nIf true, all graphs will be scanned during Awake.\nThis does not include loading from the cache.\nIf you disable this, you will have to call \\link Scan AstarPath.active.Scan() \\endlink yourself to enable pathfinding.\nAlternatively you could load a saved graph from a file.\n\nSee: <xref href=\"AstarPath.Scan(Pathfinding.NavGraph)\" data-throw-if-not-resolved=\"false\"></xref>\nSee: <xref href=\"AstarPath.ScanAsync(Pathfinding.NavGraph)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public bool scanOnStartup
    return:
      type: System.Boolean
    content.vb: Public scanOnStartup As Boolean
- uid: Global.AstarPath.fullGetNearestSearch
  commentId: F:Global.AstarPath.fullGetNearestSearch
  id: fullGetNearestSearch
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: fullGetNearestSearch
  nameWithType: AstarPath.fullGetNearestSearch
  fullName: AstarPath.fullGetNearestSearch
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: fullGetNearestSearch
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 227
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nDo a full GetNearest search for all graphs.\nAdditional searches will normally only be done on the graph which in the first fast search seemed to have the closest node.\nWith this setting on, additional searches will be done on all graphs since the first check is not always completely accurate.\\n\nMore technically: GetNearestForce on all graphs will be called if true, otherwise only on the one graph which&apos;s GetNearest search returned the best node.\\n\nUsually faster when disabled, but higher quality searches when enabled.\nWhen using a a navmesh or recast graph, for best quality, this setting should be combined with the Pathfinding.NavMeshGraph.accurateNearestNode setting set to true.\nNote: For the PointGraph this setting doesn&apos;t matter much as it has only one search mode.\n"
  example: []
  syntax:
    content: public bool fullGetNearestSearch
    return:
      type: System.Boolean
    content.vb: Public fullGetNearestSearch As Boolean
- uid: Global.AstarPath.prioritizeGraphs
  commentId: F:Global.AstarPath.prioritizeGraphs
  id: prioritizeGraphs
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: prioritizeGraphs
  nameWithType: AstarPath.prioritizeGraphs
  fullName: AstarPath.prioritizeGraphs
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: prioritizeGraphs
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 234
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nPrioritize graphs.\nGraphs will be prioritized based on their order in the inspector.\nThe first graph which has a node closer than <xref href=\"AstarPath.prioritizeGraphsLimit\" data-throw-if-not-resolved=\"false\"></xref> will be chosen instead of searching all graphs.\n"
  example: []
  syntax:
    content: public bool prioritizeGraphs
    return:
      type: System.Boolean
    content.vb: Public prioritizeGraphs As Boolean
- uid: Global.AstarPath.prioritizeGraphsLimit
  commentId: F:Global.AstarPath.prioritizeGraphsLimit
  id: prioritizeGraphsLimit
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: prioritizeGraphsLimit
  nameWithType: AstarPath.prioritizeGraphsLimit
  fullName: AstarPath.prioritizeGraphsLimit
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: prioritizeGraphsLimit
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 240
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nDistance limit for <xref href=\"AstarPath.prioritizeGraphs\" data-throw-if-not-resolved=\"false\"></xref>.\nSee: <xref href=\"AstarPath.prioritizeGraphs\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public float prioritizeGraphsLimit
    return:
      type: System.Single
    content.vb: Public prioritizeGraphsLimit As Single
- uid: Global.AstarPath.colorSettings
  commentId: F:Global.AstarPath.colorSettings
  id: colorSettings
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: colorSettings
  nameWithType: AstarPath.colorSettings
  fullName: AstarPath.colorSettings
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: colorSettings
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 246
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nReference to the color settings for this AstarPath object.\nColor settings include for example which color the nodes should be in, in the sceneview.\n"
  example: []
  syntax:
    content: public AstarColor colorSettings
    return:
      type: Pathfinding.AstarColor
    content.vb: Public colorSettings As AstarColor
- uid: Global.AstarPath.tagNames
  commentId: F:Global.AstarPath.tagNames
  id: tagNames
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: tagNames
  nameWithType: AstarPath.tagNames
  fullName: AstarPath.tagNames
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: tagNames
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 254
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nStored tag names.\nSee: AstarPath.FindTagNames\nSee: AstarPath.GetTagNames\n"
  example: []
  syntax:
    content: >-
      [SerializeField]

      protected string[] tagNames
    return:
      type: System.String[]
    content.vb: >-
      <SerializeField>

      Protected tagNames As String()
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.AstarPath.heuristic
  commentId: F:Global.AstarPath.heuristic
  id: heuristic
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: heuristic
  nameWithType: AstarPath.heuristic
  fullName: AstarPath.heuristic
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: heuristic
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 265
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nThe distance function to use as a heuristic.\nThe heuristic, often referred to as just &apos;H&apos; is the estimated cost from a node to the target.\nDifferent heuristics affect how the path picks which one to follow from multiple possible with the same length\nSee: <xref href=\"Pathfinding.Heuristic\" data-throw-if-not-resolved=\"false\"></xref> for more details and descriptions of the different modes.\nSee: <a href=\"https://en.wikipedia.org/wiki/Admissible_heuristic\">Wikipedia: Admissible heuristic</a>\nSee: <a href=\"https://en.wikipedia.org/wiki/A*_search_algorithm\">Wikipedia: A* search algorithm</a>\nSee: <a href=\"https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm\">Wikipedia: Dijkstra&apos;s Algorithm</a>\n"
  example: []
  syntax:
    content: public Heuristic heuristic
    return:
      type: Pathfinding.Heuristic
    content.vb: Public heuristic As Heuristic
- uid: Global.AstarPath.heuristicScale
  commentId: F:Global.AstarPath.heuristicScale
  id: heuristicScale
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: heuristicScale
  nameWithType: AstarPath.heuristicScale
  fullName: AstarPath.heuristicScale
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: heuristicScale
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 279
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nThe scale of the heuristic.\nIf a value lower than 1 is used, the pathfinder will search more nodes (slower).\nIf 0 is used, the pathfinding algorithm will be reduced to dijkstra&apos;s algorithm. This is equivalent to setting <xref href=\"AstarPath.heuristic\" data-throw-if-not-resolved=\"false\"></xref> to None.\nIf a value larger than 1 is used the pathfinding will (usually) be faster because it expands fewer nodes, but the paths may no longer be the optimal (i.e the shortest possible paths).\n\nUsually you should leave this to the default value of 1.\n\nSee: https://en.wikipedia.org/wiki/Admissible_heuristic\nSee: https://en.wikipedia.org/wiki/A*_search_algorithm\nSee: https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm\n"
  example: []
  syntax:
    content: public float heuristicScale
    return:
      type: System.Single
    content.vb: Public heuristicScale As Single
- uid: Global.AstarPath.threadCount
  commentId: F:Global.AstarPath.threadCount
  id: threadCount
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: threadCount
  nameWithType: AstarPath.threadCount
  fullName: AstarPath.threadCount
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: threadCount
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 309
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nNumber of pathfinding threads to use.\nMultithreading puts pathfinding in another thread, this is great for performance on 2+ core computers since the framerate will barely be affected by the pathfinding at all.\n- None indicates that the pathfinding is run in the Unity thread as a coroutine\n- Automatic will try to adjust the number of threads to the number of cores and memory on the computer.\nLess than 512mb of memory or a single core computer will make it revert to using no multithreading.\n\nIt is recommended that you use one of the &quot;Auto&quot; settings that are available.\nThe reason is that even if your computer might be beefy and have 8 cores.\nOther computers might only be quad core or dual core in which case they will not benefit from more than\n1 or 3 threads respectively (you usually want to leave one core for the unity thread).\nIf you use more threads than the number of cores on the computer it is mostly just wasting memory, it will not run any faster.\nThe extra memory usage is not trivially small. Each thread needs to keep a small amount of data for each node in all the graphs.\nIt is not the full graph data but it is proportional to the number of nodes.\nThe automatic settings will inspect the machine it is running on and use that to determine the number of threads so that no memory is wasted.\n\nThe exception is if you only have one (or maybe two characters) active at time. Then you should probably just go with one thread always since it is very unlikely\nthat you will need the extra throughput given by more threads. Keep in mind that more threads primarily increases throughput by calculating different paths on different\nthreads, it will not calculate individual paths any faster.\n\nNote that if you are modifying the pathfinding core scripts or if you are directly modifying graph data without using any of the\nsafe wrappers (like <xref href=\"AstarPath.AddWorkItem(System.Action)\" data-throw-if-not-resolved=\"false\"></xref> multithreading can cause strange errors and pathfinding stopping to work if you are not careful.\nFor basic usage (not modding the pathfinding core) it should be safe.\n\nNote: WebGL does not support threads at all (since javascript is single-threaded) so no threads will be used on that platform.\n\nSee: CalculateThreadCount\n"
  example: []
  syntax:
    content: public ThreadCount threadCount
    return:
      type: Pathfinding.ThreadCount
    content.vb: Public threadCount As ThreadCount
- uid: Global.AstarPath.maxFrameTime
  commentId: F:Global.AstarPath.maxFrameTime
  id: maxFrameTime
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: maxFrameTime
  nameWithType: AstarPath.maxFrameTime
  fullName: AstarPath.maxFrameTime
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: maxFrameTime
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 316
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nMax number of milliseconds to spend each frame for pathfinding.\nAt least 500 nodes will be searched each frame (if there are that many to search).\nWhen using multithreading this value is irrelevant.\n"
  example: []
  syntax:
    content: public float maxFrameTime
    return:
      type: System.Single
    content.vb: Public maxFrameTime As Single
- uid: Global.AstarPath.batchGraphUpdates
  commentId: F:Global.AstarPath.batchGraphUpdates
  id: batchGraphUpdates
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: batchGraphUpdates
  nameWithType: AstarPath.batchGraphUpdates
  fullName: AstarPath.batchGraphUpdates
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: batchGraphUpdates
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 337
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nThrottle graph updates and batch them to improve performance.\nIf toggled, graph updates will batched and executed less often (specified by <xref href=\"AstarPath.graphUpdateBatchingInterval\" data-throw-if-not-resolved=\"false\"></xref>.\n\nThis can have a positive impact on pathfinding throughput since the pathfinding threads do not need\nto be stopped as often, and it reduces the overhead per graph update.\nAll graph updates are still applied however, they are just batched together so that more of them are\napplied at the same time.\n\nHowever do not use this if you want minimal latency between a graph update being requested\nand it being applied.\n\nThis only applies to graph updates requested using the <xref href=\"AstarPath.UpdateGraphs(UnityEngine.Bounds%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref> method. Not those requested\nusing <xref href=\"AstarPath.RegisterSafeUpdate(System.Action)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"AstarPath.AddWorkItem(System.Action)\" data-throw-if-not-resolved=\"false\"></xref>.\n\nIf you want to apply graph updates immediately at some point, you can call <xref href=\"AstarPath.FlushGraphUpdates\" data-throw-if-not-resolved=\"false\"></xref>.\n\nSee: graph-updates (view in online documentation for working links)\n"
  example: []
  syntax:
    content: public bool batchGraphUpdates
    return:
      type: System.Boolean
    content.vb: Public batchGraphUpdates As Boolean
- uid: Global.AstarPath.graphUpdateBatchingInterval
  commentId: F:Global.AstarPath.graphUpdateBatchingInterval
  id: graphUpdateBatchingInterval
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: graphUpdateBatchingInterval
  nameWithType: AstarPath.graphUpdateBatchingInterval
  fullName: AstarPath.graphUpdateBatchingInterval
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: graphUpdateBatchingInterval
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 356
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nMinimum number of seconds between each batch of graph updates.\nIf <xref href=\"AstarPath.batchGraphUpdates\" data-throw-if-not-resolved=\"false\"></xref> is true, this defines the minimum number of seconds between each batch of graph updates.\n\nThis can have a positive impact on pathfinding throughput since the pathfinding threads do not need\nto be stopped as often, and it reduces the overhead per graph update.\nAll graph updates are still applied however, they are just batched together so that more of them are\napplied at the same time.\n\nDo not use this if you want minimal latency between a graph update being requested\nand it being applied.\n\nThis only applies to graph updates requested using the <xref href=\"AstarPath.UpdateGraphs(UnityEngine.Bounds%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref> method. Not those requested\nusing <xref href=\"AstarPath.RegisterSafeUpdate(System.Action)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"AstarPath.AddWorkItem(System.Action)\" data-throw-if-not-resolved=\"false\"></xref>.\n\nSee: graph-updates (view in online documentation for working links)\n"
  example: []
  syntax:
    content: public float graphUpdateBatchingInterval
    return:
      type: System.Single
    content.vb: Public graphUpdateBatchingInterval As Single
- uid: Global.AstarPath.limitGraphUpdates
  commentId: P:Global.AstarPath.limitGraphUpdates
  id: limitGraphUpdates
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: limitGraphUpdates
  nameWithType: AstarPath.limitGraphUpdates
  fullName: AstarPath.limitGraphUpdates
  type: Property
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: limitGraphUpdates
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 362
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nBatch graph updates.\nDeprecated: This field has been renamed to <xref href=\"AstarPath.batchGraphUpdates\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This field has been renamed to 'batchGraphUpdates'")]

      public bool limitGraphUpdates { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete("This field has been renamed to 'batchGraphUpdates'")>

      Public Property limitGraphUpdates As Boolean
  overload: Global.AstarPath.limitGraphUpdates*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This field has been renamed to 'batchGraphUpdates'
- uid: Global.AstarPath.maxGraphUpdateFreq
  commentId: P:Global.AstarPath.maxGraphUpdateFreq
  id: maxGraphUpdateFreq
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: maxGraphUpdateFreq
  nameWithType: AstarPath.maxGraphUpdateFreq
  fullName: AstarPath.maxGraphUpdateFreq
  type: Property
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: maxGraphUpdateFreq
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 369
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nLimit for how often should graphs be updated.\nDeprecated: This field has been renamed to <xref href=\"AstarPath.graphUpdateBatchingInterval\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This field has been renamed to 'graphUpdateBatchingInterval'")]

      public float maxGraphUpdateFreq { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <Obsolete("This field has been renamed to 'graphUpdateBatchingInterval'")>

      Public Property maxGraphUpdateFreq As Single
  overload: Global.AstarPath.maxGraphUpdateFreq*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This field has been renamed to 'graphUpdateBatchingInterval'
- uid: Global.AstarPath.lastScanTime
  commentId: P:Global.AstarPath.lastScanTime
  id: lastScanTime
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: lastScanTime
  nameWithType: AstarPath.lastScanTime
  fullName: AstarPath.lastScanTime
  type: Property
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: lastScanTime
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 396
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nThe time it took for the last call to Scan() to complete.\nUsed to prevent automatically rescanning the graphs too often (editor only)\n"
  example: []
  syntax:
    content: public float lastScanTime { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property lastScanTime As Single
  overload: Global.AstarPath.lastScanTime*
- uid: Global.AstarPath.debugPathData
  commentId: F:Global.AstarPath.debugPathData
  id: debugPathData
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: debugPathData
  nameWithType: AstarPath.debugPathData
  fullName: AstarPath.debugPathData
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: debugPathData
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 404
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nThe path to debug using gizmos.\nThis is the path handler used to calculate the last path.\nIt is used in the editor to draw debug information using gizmos.\n"
  example: []
  syntax:
    content: >-
      [NonSerialized]

      public PathHandler debugPathData
    return:
      type: Pathfinding.PathHandler
    content.vb: >-
      <NonSerialized>

      Public debugPathData As PathHandler
  attributes:
  - type: System.NonSerializedAttribute
    ctor: System.NonSerializedAttribute.#ctor
    arguments: []
- uid: Global.AstarPath.debugPathID
  commentId: F:Global.AstarPath.debugPathID
  id: debugPathID
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: debugPathID
  nameWithType: AstarPath.debugPathID
  fullName: AstarPath.debugPathID
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: debugPathID
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 408
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: The path ID to debug using gizmos
  example: []
  syntax:
    content: >-
      [NonSerialized]

      public ushort debugPathID
    return:
      type: System.UInt16
    content.vb: >-
      <NonSerialized>

      Public debugPathID As UShort
  attributes:
  - type: System.NonSerializedAttribute
    ctor: System.NonSerializedAttribute.#ctor
    arguments: []
- uid: Global.AstarPath.isScanning
  commentId: P:Global.AstarPath.isScanning
  id: isScanning
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: isScanning
  nameWithType: AstarPath.isScanning
  fullName: AstarPath.isScanning
  type: Property
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: isScanning
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 439
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nSet while any graphs are being scanned.\nIt will be true up until the FloodFill is done.\n\nNote: Not to be confused with graph updates.\n\nUsed to better support Graph Update Objects called for example in OnPostScan\n\nSee: IsAnyGraphUpdateQueued\nSee: IsAnyGraphUpdateInProgress\n"
  example: []
  syntax:
    content: public bool isScanning { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isScanning As Boolean
  overload: Global.AstarPath.isScanning*
- uid: Global.AstarPath.NumParallelThreads
  commentId: P:Global.AstarPath.NumParallelThreads
  id: NumParallelThreads
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: NumParallelThreads
  nameWithType: AstarPath.NumParallelThreads
  fullName: AstarPath.NumParallelThreads
  type: Property
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: NumParallelThreads
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 447
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nNumber of parallel pathfinders.\nReturns the number of concurrent processes which can calculate paths at once.\nWhen using multithreading, this will be the number of threads, if not using multithreading it is always 1 (since only 1 coroutine is used).\nSee: IsUsingMultithreading\n"
  example: []
  syntax:
    content: public int NumParallelThreads { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NumParallelThreads As Integer
  overload: Global.AstarPath.NumParallelThreads*
- uid: Global.AstarPath.IsUsingMultithreading
  commentId: P:Global.AstarPath.IsUsingMultithreading
  id: IsUsingMultithreading
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: IsUsingMultithreading
  nameWithType: AstarPath.IsUsingMultithreading
  fullName: AstarPath.IsUsingMultithreading
  type: Property
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: IsUsingMultithreading
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 459
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nReturns whether or not multithreading is used.\n\\exception System.Exception Is thrown when it could not be decided if multithreading was used or not.\nThis should not happen if pathfinding is set up correctly.\nNote: This uses info about if threads are running right now, it does not use info from the settings on the A* object.\n"
  example: []
  syntax:
    content: public bool IsUsingMultithreading { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUsingMultithreading As Boolean
  overload: Global.AstarPath.IsUsingMultithreading*
- uid: Global.AstarPath.IsAnyGraphUpdatesQueued
  commentId: P:Global.AstarPath.IsAnyGraphUpdatesQueued
  id: IsAnyGraphUpdatesQueued
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: IsAnyGraphUpdatesQueued
  nameWithType: AstarPath.IsAnyGraphUpdatesQueued
  fullName: AstarPath.IsAnyGraphUpdatesQueued
  type: Property
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: IsAnyGraphUpdatesQueued
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 469
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nReturns if any graph updates are waiting to be applied.\nDeprecated: Use IsAnyGraphUpdateQueued instead\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Fixed grammar, use IsAnyGraphUpdateQueued instead")]

      public bool IsAnyGraphUpdatesQueued { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete("Fixed grammar, use IsAnyGraphUpdateQueued instead")>

      Public ReadOnly Property IsAnyGraphUpdatesQueued As Boolean
  overload: Global.AstarPath.IsAnyGraphUpdatesQueued*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Fixed grammar, use IsAnyGraphUpdateQueued instead
- uid: Global.AstarPath.IsAnyGraphUpdateQueued
  commentId: P:Global.AstarPath.IsAnyGraphUpdateQueued
  id: IsAnyGraphUpdateQueued
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: IsAnyGraphUpdateQueued
  nameWithType: AstarPath.IsAnyGraphUpdateQueued
  fullName: AstarPath.IsAnyGraphUpdateQueued
  type: Property
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: IsAnyGraphUpdateQueued
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 477
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nReturns if any graph updates are waiting to be applied.\nNote: This is false while the updates are being performed.\nNote: This does *not* includes other types of work items such as navmesh cutting or anything added by <xref href=\"AstarPath.RegisterSafeUpdate(System.Action)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"AstarPath.AddWorkItem(System.Action)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool IsAnyGraphUpdateQueued { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAnyGraphUpdateQueued As Boolean
  overload: Global.AstarPath.IsAnyGraphUpdateQueued*
- uid: Global.AstarPath.IsAnyGraphUpdateInProgress
  commentId: P:Global.AstarPath.IsAnyGraphUpdateInProgress
  id: IsAnyGraphUpdateInProgress
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: IsAnyGraphUpdateInProgress
  nameWithType: AstarPath.IsAnyGraphUpdateInProgress
  fullName: AstarPath.IsAnyGraphUpdateInProgress
  type: Property
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: IsAnyGraphUpdateInProgress
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 485
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nReturns if any graph updates are being calculated right now.\nNote: This does *not* includes other types of work items such as navmesh cutting or anything added by <xref href=\"AstarPath.RegisterSafeUpdate(System.Action)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"AstarPath.AddWorkItem(System.Action)\" data-throw-if-not-resolved=\"false\"></xref>.\n\nSee: IsAnyWorkItemInProgress\n"
  example: []
  syntax:
    content: public bool IsAnyGraphUpdateInProgress { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAnyGraphUpdateInProgress As Boolean
  overload: Global.AstarPath.IsAnyGraphUpdateInProgress*
- uid: Global.AstarPath.IsAnyWorkItemInProgress
  commentId: P:Global.AstarPath.IsAnyWorkItemInProgress
  id: IsAnyWorkItemInProgress
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: IsAnyWorkItemInProgress
  nameWithType: AstarPath.IsAnyWorkItemInProgress
  fullName: AstarPath.IsAnyWorkItemInProgress
  type: Property
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: IsAnyWorkItemInProgress
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 492
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nReturns if any work items are in progress right now.\nNote: This includes pretty much all types of graph updates.\nSuch as normal graph updates, navmesh cutting and anything added by <xref href=\"AstarPath.RegisterSafeUpdate(System.Action)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"AstarPath.AddWorkItem(System.Action)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool IsAnyWorkItemInProgress { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAnyWorkItemInProgress As Boolean
  overload: Global.AstarPath.IsAnyWorkItemInProgress*
- uid: Global.AstarPath.OnAwakeSettings
  commentId: F:Global.AstarPath.OnAwakeSettings
  id: OnAwakeSettings
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnAwakeSettings
  nameWithType: AstarPath.OnAwakeSettings
  fullName: AstarPath.OnAwakeSettings
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: OnAwakeSettings
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 536
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  syntax:
    content: public static Action OnAwakeSettings
    return:
      type: System.Action
    content.vb: Public Shared OnAwakeSettings As Action
- uid: Global.AstarPath.OnGraphPreScan
  commentId: F:Global.AstarPath.OnGraphPreScan
  id: OnGraphPreScan
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnGraphPreScan
  nameWithType: AstarPath.OnGraphPreScan
  fullName: AstarPath.OnGraphPreScan
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: OnGraphPreScan
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 539
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Called for each graph before they are scanned
  example: []
  syntax:
    content: public static OnGraphDelegate OnGraphPreScan
    return:
      type: Pathfinding.OnGraphDelegate
    content.vb: Public Shared OnGraphPreScan As OnGraphDelegate
- uid: Global.AstarPath.OnGraphPostScan
  commentId: F:Global.AstarPath.OnGraphPostScan
  id: OnGraphPostScan
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnGraphPostScan
  nameWithType: AstarPath.OnGraphPostScan
  fullName: AstarPath.OnGraphPostScan
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: OnGraphPostScan
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 542
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Called for each graph after they have been scanned. All other graphs might not have been scanned yet.
  example: []
  syntax:
    content: public static OnGraphDelegate OnGraphPostScan
    return:
      type: Pathfinding.OnGraphDelegate
    content.vb: Public Shared OnGraphPostScan As OnGraphDelegate
- uid: Global.AstarPath.OnPathPreSearch
  commentId: F:Global.AstarPath.OnPathPreSearch
  id: OnPathPreSearch
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnPathPreSearch
  nameWithType: AstarPath.OnPathPreSearch
  fullName: AstarPath.OnPathPreSearch
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: OnPathPreSearch
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 545
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Called for each path before searching. Be careful when using multithreading since this will be called from a different thread.
  example: []
  syntax:
    content: public static OnPathDelegate OnPathPreSearch
    return:
      type: Pathfinding.OnPathDelegate
    content.vb: Public Shared OnPathPreSearch As OnPathDelegate
- uid: Global.AstarPath.OnPathPostSearch
  commentId: F:Global.AstarPath.OnPathPostSearch
  id: OnPathPostSearch
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnPathPostSearch
  nameWithType: AstarPath.OnPathPostSearch
  fullName: AstarPath.OnPathPostSearch
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: OnPathPostSearch
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 548
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Called for each path after searching. Be careful when using multithreading since this will be called from a different thread.
  example: []
  syntax:
    content: public static OnPathDelegate OnPathPostSearch
    return:
      type: Pathfinding.OnPathDelegate
    content.vb: Public Shared OnPathPostSearch As OnPathDelegate
- uid: Global.AstarPath.OnPreScan
  commentId: F:Global.AstarPath.OnPreScan
  id: OnPreScan
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnPreScan
  nameWithType: AstarPath.OnPreScan
  fullName: AstarPath.OnPreScan
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: OnPreScan
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 551
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Called before starting the scanning
  example: []
  syntax:
    content: public static OnScanDelegate OnPreScan
    return:
      type: Pathfinding.OnScanDelegate
    content.vb: Public Shared OnPreScan As OnScanDelegate
- uid: Global.AstarPath.OnPostScan
  commentId: F:Global.AstarPath.OnPostScan
  id: OnPostScan
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnPostScan
  nameWithType: AstarPath.OnPostScan
  fullName: AstarPath.OnPostScan
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: OnPostScan
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 554
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Called after scanning. This is called before applying links, flood-filling the graphs and other post processing.
  example: []
  syntax:
    content: public static OnScanDelegate OnPostScan
    return:
      type: Pathfinding.OnScanDelegate
    content.vb: Public Shared OnPostScan As OnScanDelegate
- uid: Global.AstarPath.OnLatePostScan
  commentId: F:Global.AstarPath.OnLatePostScan
  id: OnLatePostScan
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnLatePostScan
  nameWithType: AstarPath.OnLatePostScan
  fullName: AstarPath.OnLatePostScan
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: OnLatePostScan
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 557
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Called after scanning has completed fully. This is called as the last thing in the Scan function.
  example: []
  syntax:
    content: public static OnScanDelegate OnLatePostScan
    return:
      type: Pathfinding.OnScanDelegate
    content.vb: Public Shared OnLatePostScan As OnScanDelegate
- uid: Global.AstarPath.OnGraphsUpdated
  commentId: F:Global.AstarPath.OnGraphsUpdated
  id: OnGraphsUpdated
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnGraphsUpdated
  nameWithType: AstarPath.OnGraphsUpdated
  fullName: AstarPath.OnGraphsUpdated
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: OnGraphsUpdated
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 560
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Called when any graphs are updated. Register to for example recalculate the path whenever a graph changes.
  example: []
  syntax:
    content: public static OnScanDelegate OnGraphsUpdated
    return:
      type: Pathfinding.OnScanDelegate
    content.vb: Public Shared OnGraphsUpdated As OnScanDelegate
- uid: Global.AstarPath.On65KOverflow
  commentId: F:Global.AstarPath.On65KOverflow
  id: On65KOverflow
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: On65KOverflow
  nameWithType: AstarPath.On65KOverflow
  fullName: AstarPath.On65KOverflow
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: On65KOverflow
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 566
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nCalled when pathID overflows 65536 and resets back to zero.\nNote: This callback will be cleared every time it is called, so if you want to register to it repeatedly, register to it directly on receiving the callback as well.\n"
  example: []
  syntax:
    content: public static Action On65KOverflow
    return:
      type: System.Action
    content.vb: Public Shared On65KOverflow As Action
- uid: Global.AstarPath.OnGraphsWillBeUpdated
  commentId: F:Global.AstarPath.OnGraphsWillBeUpdated
  id: OnGraphsWillBeUpdated
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnGraphsWillBeUpdated
  nameWithType: AstarPath.OnGraphsWillBeUpdated
  fullName: AstarPath.OnGraphsWillBeUpdated
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: OnGraphsWillBeUpdated
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 570
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: 'Deprecated:'
  example: []
  syntax:
    content: >-
      [Obsolete]

      public Action OnGraphsWillBeUpdated
    return:
      type: System.Action
    content.vb: >-
      <Obsolete>

      Public OnGraphsWillBeUpdated As Action
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Global.AstarPath.OnGraphsWillBeUpdated2
  commentId: F:Global.AstarPath.OnGraphsWillBeUpdated2
  id: OnGraphsWillBeUpdated2
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnGraphsWillBeUpdated2
  nameWithType: AstarPath.OnGraphsWillBeUpdated2
  fullName: AstarPath.OnGraphsWillBeUpdated2
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: OnGraphsWillBeUpdated2
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 574
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: 'Deprecated:'
  example: []
  syntax:
    content: >-
      [Obsolete]

      public Action OnGraphsWillBeUpdated2
    return:
      type: System.Action
    content.vb: >-
      <Obsolete>

      Public OnGraphsWillBeUpdated2 As Action
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Global.AstarPath.navmeshUpdates
  commentId: F:Global.AstarPath.navmeshUpdates
  id: navmeshUpdates
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: navmeshUpdates
  nameWithType: AstarPath.navmeshUpdates
  fullName: AstarPath.navmeshUpdates
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: navmeshUpdates
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 591
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nHandles navmesh cuts.\nSee: <see cref=\"!:Pathfinding.NavmeshCut\"></see>\n"
  example: []
  syntax:
    content: public readonly NavmeshUpdates navmeshUpdates
    return:
      type: Pathfinding.NavmeshUpdates
    content.vb: Public ReadOnly navmeshUpdates As NavmeshUpdates
- uid: Global.AstarPath.euclideanEmbedding
  commentId: F:Global.AstarPath.euclideanEmbedding
  id: euclideanEmbedding
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: euclideanEmbedding
  nameWithType: AstarPath.euclideanEmbedding
  fullName: AstarPath.euclideanEmbedding
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: euclideanEmbedding
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 620
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nHolds settings for heuristic optimization.\nSee: heuristic-opt (view in online documentation for working links)\n"
  example: []
  syntax:
    content: public EuclideanEmbedding euclideanEmbedding
    return:
      type: Pathfinding.EuclideanEmbedding
    content.vb: Public euclideanEmbedding As EuclideanEmbedding
- uid: Global.AstarPath.showGraphs
  commentId: F:Global.AstarPath.showGraphs
  id: showGraphs
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: showGraphs
  nameWithType: AstarPath.showGraphs
  fullName: AstarPath.showGraphs
  type: Field
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: showGraphs
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 628
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nShows or hides graph inspectors.\nUsed internally by the editor\n"
  example: []
  syntax:
    content: public bool showGraphs
    return:
      type: System.Boolean
    content.vb: Public showGraphs As Boolean
- uid: Global.AstarPath.GetTagNames
  commentId: M:Global.AstarPath.GetTagNames
  id: GetTagNames
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: GetTagNames()
  nameWithType: AstarPath.GetTagNames()
  fullName: AstarPath.GetTagNames()
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: GetTagNames
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 659
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nReturns tag names.\nMakes sure that the tag names array is not null and of length 32.\nIf it is null or not of length 32, it creates a new array and fills it with 0,1,2,3,4 etc...\nSee: AstarPath.FindTagNames\n"
  example: []
  syntax:
    content: public string[] GetTagNames()
    return:
      type: System.String[]
    content.vb: Public Function GetTagNames() As String()
  overload: Global.AstarPath.GetTagNames*
- uid: Global.AstarPath.FindAstarPath
  commentId: M:Global.AstarPath.FindAstarPath
  id: FindAstarPath
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: FindAstarPath()
  nameWithType: AstarPath.FindAstarPath()
  fullName: AstarPath.FindAstarPath()
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: FindAstarPath
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 677
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nUsed outside of play mode to initialize the AstarPath object even if it has not been selected in the inspector yet.\nThis will set the <xref href=\"AstarPath.active\" data-throw-if-not-resolved=\"false\"></xref> property and deserialize all graphs.\n\nThis is useful if you want to do changes to the graphs in the editor outside of play mode, but cannot be sure that the graphs have been deserialized yet.\nIn play mode this method does nothing.\n"
  example: []
  syntax:
    content: public static void FindAstarPath()
    content.vb: Public Shared Sub FindAstarPath()
  overload: Global.AstarPath.FindAstarPath*
- uid: Global.AstarPath.FindTagNames
  commentId: M:Global.AstarPath.FindTagNames
  id: FindTagNames
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: FindTagNames()
  nameWithType: AstarPath.FindTagNames()
  fullName: AstarPath.FindTagNames()
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: FindTagNames
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 688
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nTries to find an AstarPath object and return tag names.\nIf an AstarPath object cannot be found, it returns an array of length 1 with an error message.\nSee: AstarPath.GetTagNames\n"
  example: []
  syntax:
    content: public static string[] FindTagNames()
    return:
      type: System.String[]
    content.vb: Public Shared Function FindTagNames() As String()
  overload: Global.AstarPath.FindTagNames*
- uid: Global.AstarPath.QueueWorkItemFloodFill
  commentId: M:Global.AstarPath.QueueWorkItemFloodFill
  id: QueueWorkItemFloodFill
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: QueueWorkItemFloodFill()
  nameWithType: AstarPath.QueueWorkItemFloodFill()
  fullName: AstarPath.QueueWorkItemFloodFill()
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: QueueWorkItemFloodFill
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 890
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nCall during work items to queue a flood fill.\nDeprecated: This method has been moved. Use the method on the context object that can be sent with work item delegates instead\n<pre><code>AstarPath.active.AddWorkItem(new AstarWorkItem(() => {\n    // Safe to update graphs here\n    var node = AstarPath.active.GetNearest(transform.position).node;\n    node.Walkable = false;\n}));</code></pre>\n\nSee: <xref href=\"Pathfinding.IWorkItemContext\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This method has been moved. Use the method on the context object that can be sent with work item delegates instead")]

      public void QueueWorkItemFloodFill()
    content.vb: >-
      <Obsolete("This method has been moved. Use the method on the context object that can be sent with work item delegates instead")>

      Public Sub QueueWorkItemFloodFill()
  overload: Global.AstarPath.QueueWorkItemFloodFill*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method has been moved. Use the method on the context object that can be sent with work item delegates instead
- uid: Global.AstarPath.EnsureValidFloodFill
  commentId: M:Global.AstarPath.EnsureValidFloodFill
  id: EnsureValidFloodFill
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: EnsureValidFloodFill()
  nameWithType: AstarPath.EnsureValidFloodFill()
  fullName: AstarPath.EnsureValidFloodFill()
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: EnsureValidFloodFill
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 908
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nIf a WorkItem needs to have a valid flood fill during execution, call this method to ensure there are no pending flood fills.\nDeprecated: This method has been moved. Use the method on the context object that can be sent with work item delegates instead\n<pre><code>AstarPath.active.AddWorkItem(new AstarWorkItem(() => {\n    // Safe to update graphs here\n    var node = AstarPath.active.GetNearest(transform.position).node;\n    node.Walkable = false;\n}));</code></pre>\n\nSee: <xref href=\"Pathfinding.IWorkItemContext\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This method has been moved. Use the method on the context object that can be sent with work item delegates instead")]

      public void EnsureValidFloodFill()
    content.vb: >-
      <Obsolete("This method has been moved. Use the method on the context object that can be sent with work item delegates instead")>

      Public Sub EnsureValidFloodFill()
  overload: Global.AstarPath.EnsureValidFloodFill*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method has been moved. Use the method on the context object that can be sent with work item delegates instead
- uid: Global.AstarPath.AddWorkItem(System.Action)
  commentId: M:Global.AstarPath.AddWorkItem(System.Action)
  id: AddWorkItem(System.Action)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: AddWorkItem(Action)
  nameWithType: AstarPath.AddWorkItem(Action)
  fullName: AstarPath.AddWorkItem(System.Action)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: AddWorkItem
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 922
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nAdd a work item to be processed when pathfinding is paused.\nConvenience method that is equivalent to\n<pre><code>AddWorkItem(new AstarWorkItem(callback));</code></pre>\n\nSee: <xref href=\"AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public void AddWorkItem(Action callback)
    parameters:
    - id: callback
      type: System.Action
    content.vb: Public Sub AddWorkItem(callback As Action)
  overload: Global.AstarPath.AddWorkItem*
- uid: Global.AstarPath.AddWorkItem(System.Action{Pathfinding.IWorkItemContext})
  commentId: M:Global.AstarPath.AddWorkItem(System.Action{Pathfinding.IWorkItemContext})
  id: AddWorkItem(System.Action{Pathfinding.IWorkItemContext})
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: AddWorkItem(Action<IWorkItemContext>)
  nameWithType: AstarPath.AddWorkItem(Action<IWorkItemContext>)
  fullName: AstarPath.AddWorkItem(System.Action<Pathfinding.IWorkItemContext>)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: AddWorkItem
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 935
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nAdd a work item to be processed when pathfinding is paused.\nConvenience method that is equivalent to\n<pre><code>AddWorkItem(new AstarWorkItem(callback));</code></pre>\n\nSee: <xref href=\"AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public void AddWorkItem(Action<IWorkItemContext> callback)
    parameters:
    - id: callback
      type: System.Action{Pathfinding.IWorkItemContext}
    content.vb: Public Sub AddWorkItem(callback As Action(Of IWorkItemContext))
  overload: Global.AstarPath.AddWorkItem*
  nameWithType.vb: AstarPath.AddWorkItem(Action(Of IWorkItemContext))
  fullName.vb: AstarPath.AddWorkItem(System.Action(Of Pathfinding.IWorkItemContext))
  name.vb: AddWorkItem(Action(Of IWorkItemContext))
- uid: Global.AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)
  commentId: M:Global.AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)
  id: AddWorkItem(Pathfinding.AstarWorkItem)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: AddWorkItem(AstarWorkItem)
  nameWithType: AstarPath.AddWorkItem(AstarWorkItem)
  fullName: AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: AddWorkItem
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 967
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nAdd a work item to be processed when pathfinding is paused.\n\nThe work item will be executed when it is safe to update nodes. This is defined as between the path searches.\nWhen using more threads than one, calling this often might decrease pathfinding performance due to a lot of idling in the threads.\nNot performance as in it will use much CPU power, but performance as in the number of paths per second will probably go down\n(though your framerate might actually increase a tiny bit).\n\nYou should only call this function from the main unity thread (i.e normal game code).\n\n<pre><code>AstarPath.active.AddWorkItem(new AstarWorkItem(() => {\n    // Safe to update graphs here\n    var node = AstarPath.active.GetNearest(transform.position).node;\n    node.Walkable = false;\n}));</code></pre>\n\n<pre><code>AstarPath.active.AddWorkItem(() => {\n    // Safe to update graphs here\n    var node = AstarPath.active.GetNearest(transform.position).node;\n    node.position = (Int3)transform.position;\n});</code></pre>\n\nSee: <xref href=\"AstarPath.FlushWorkItems\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public void AddWorkItem(AstarWorkItem item)
    parameters:
    - id: item
      type: Pathfinding.AstarWorkItem
    content.vb: Public Sub AddWorkItem(item As AstarWorkItem)
  overload: Global.AstarPath.AddWorkItem*
- uid: Global.AstarPath.QueueGraphUpdates
  commentId: M:Global.AstarPath.QueueGraphUpdates
  id: QueueGraphUpdates
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: QueueGraphUpdates()
  nameWithType: AstarPath.QueueGraphUpdates()
  fullName: AstarPath.QueueGraphUpdates()
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: QueueGraphUpdates
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 993
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nWill apply queued graph updates as soon as possible, regardless of <xref href=\"AstarPath.batchGraphUpdates\" data-throw-if-not-resolved=\"false\"></xref>.\nCalling this multiple times will not create multiple callbacks.\nThis function is useful if you are limiting graph updates, but you want a specific graph update to be applied as soon as possible regardless of the time limit.\nNote that this does not block until the updates are done, it merely bypasses the <xref href=\"AstarPath.batchGraphUpdates\" data-throw-if-not-resolved=\"false\"></xref> time limit.\n\nSee: <xref href=\"AstarPath.FlushGraphUpdates\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public void QueueGraphUpdates()
    content.vb: Public Sub QueueGraphUpdates()
  overload: Global.AstarPath.QueueGraphUpdates*
- uid: Global.AstarPath.UpdateGraphs(UnityEngine.Bounds,System.Single)
  commentId: M:Global.AstarPath.UpdateGraphs(UnityEngine.Bounds,System.Single)
  id: UpdateGraphs(UnityEngine.Bounds,System.Single)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: UpdateGraphs(Bounds, float)
  nameWithType: AstarPath.UpdateGraphs(Bounds, float)
  fullName: AstarPath.UpdateGraphs(UnityEngine.Bounds, float)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: UpdateGraphs
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1030
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nUpdate all graphs within bounds after delay seconds.\nThe graphs will be updated as soon as possible.\n\nSee: FlushGraphUpdates\nSee: batchGraphUpdates\nSee: graph-updates (view in online documentation for working links)\n"
  example: []
  syntax:
    content: public void UpdateGraphs(Bounds bounds, float delay)
    parameters:
    - id: bounds
      type: UnityEngine.Bounds
    - id: delay
      type: System.Single
    content.vb: Public Sub UpdateGraphs(bounds As Bounds, delay As Single)
  overload: Global.AstarPath.UpdateGraphs*
  nameWithType.vb: AstarPath.UpdateGraphs(Bounds, Single)
  fullName.vb: AstarPath.UpdateGraphs(UnityEngine.Bounds, Single)
  name.vb: UpdateGraphs(Bounds, Single)
- uid: Global.AstarPath.UpdateGraphs(Pathfinding.GraphUpdateObject,System.Single)
  commentId: M:Global.AstarPath.UpdateGraphs(Pathfinding.GraphUpdateObject,System.Single)
  id: UpdateGraphs(Pathfinding.GraphUpdateObject,System.Single)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: UpdateGraphs(GraphUpdateObject, float)
  nameWithType: AstarPath.UpdateGraphs(GraphUpdateObject, float)
  fullName: AstarPath.UpdateGraphs(Pathfinding.GraphUpdateObject, float)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: UpdateGraphs
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1042
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nUpdate all graphs using the GraphUpdateObject after delay seconds.\nThis can be used to, e.g make all nodes in a region unwalkable, or set them to a higher penalty.\n\nSee: FlushGraphUpdates\nSee: batchGraphUpdates\nSee: graph-updates (view in online documentation for working links)\n"
  example: []
  syntax:
    content: public void UpdateGraphs(GraphUpdateObject ob, float delay)
    parameters:
    - id: ob
      type: Pathfinding.GraphUpdateObject
    - id: delay
      type: System.Single
    content.vb: Public Sub UpdateGraphs(ob As GraphUpdateObject, delay As Single)
  overload: Global.AstarPath.UpdateGraphs*
  nameWithType.vb: AstarPath.UpdateGraphs(GraphUpdateObject, Single)
  fullName.vb: AstarPath.UpdateGraphs(Pathfinding.GraphUpdateObject, Single)
  name.vb: UpdateGraphs(GraphUpdateObject, Single)
- uid: Global.AstarPath.UpdateGraphs(UnityEngine.Bounds)
  commentId: M:Global.AstarPath.UpdateGraphs(UnityEngine.Bounds)
  id: UpdateGraphs(UnityEngine.Bounds)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: UpdateGraphs(Bounds)
  nameWithType: AstarPath.UpdateGraphs(Bounds)
  fullName: AstarPath.UpdateGraphs(UnityEngine.Bounds)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: UpdateGraphs
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1065
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nUpdate all graphs within bounds.\nThe graphs will be updated as soon as possible.\n\nThis is equivalent to\n<pre><code>UpdateGraphs(new GraphUpdateObject(bounds));</code></pre>\n\nSee: FlushGraphUpdates\nSee: batchGraphUpdates\nSee: graph-updates (view in online documentation for working links)\n"
  example: []
  syntax:
    content: public void UpdateGraphs(Bounds bounds)
    parameters:
    - id: bounds
      type: UnityEngine.Bounds
    content.vb: Public Sub UpdateGraphs(bounds As Bounds)
  overload: Global.AstarPath.UpdateGraphs*
- uid: Global.AstarPath.UpdateGraphs(Pathfinding.GraphUpdateObject)
  commentId: M:Global.AstarPath.UpdateGraphs(Pathfinding.GraphUpdateObject)
  id: UpdateGraphs(Pathfinding.GraphUpdateObject)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: UpdateGraphs(GraphUpdateObject)
  nameWithType: AstarPath.UpdateGraphs(GraphUpdateObject)
  fullName: AstarPath.UpdateGraphs(Pathfinding.GraphUpdateObject)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: UpdateGraphs
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1078
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nUpdate all graphs using the GraphUpdateObject.\nThis can be used to, e.g make all nodes in a region unwalkable, or set them to a higher penalty.\nThe graphs will be updated as soon as possible (with respect to <xref href=\"AstarPath.batchGraphUpdates\" data-throw-if-not-resolved=\"false\"></xref>\n\nSee: FlushGraphUpdates\nSee: batchGraphUpdates\nSee: graph-updates (view in online documentation for working links)\n"
  example: []
  syntax:
    content: public void UpdateGraphs(GraphUpdateObject ob)
    parameters:
    - id: ob
      type: Pathfinding.GraphUpdateObject
    content.vb: Public Sub UpdateGraphs(ob As GraphUpdateObject)
  overload: Global.AstarPath.UpdateGraphs*
- uid: Global.AstarPath.FlushGraphUpdates
  commentId: M:Global.AstarPath.FlushGraphUpdates
  id: FlushGraphUpdates
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: FlushGraphUpdates()
  nameWithType: AstarPath.FlushGraphUpdates()
  fullName: AstarPath.FlushGraphUpdates()
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: FlushGraphUpdates
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1106
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nForces graph updates to complete in a single frame.\nThis will force the pathfinding threads to finish calculating the path they are currently calculating (if any) and then pause.\nWhen all threads have paused, graph updates will be performed.\nWarning: Using this very often (many times per second) can reduce your fps due to a lot of threads waiting for one another.\nBut you probably wont have to worry about that.\n\nNote: This is almost identical to <xref href=\"AstarPath.FlushWorkItems\" data-throw-if-not-resolved=\"false\"></xref>, but added for more descriptive name.\nThis function will also override any time limit delays for graph updates.\nThis is because graph updates are implemented using work items.\nSo calling this function will also execute any other work items (if any are queued).\n\nWill not do anything if there are no graph updates queued (not even execute other work items).\n"
  example: []
  syntax:
    content: public void FlushGraphUpdates()
    content.vb: Public Sub FlushGraphUpdates()
  overload: Global.AstarPath.FlushGraphUpdates*
- uid: Global.AstarPath.FlushWorkItems
  commentId: M:Global.AstarPath.FlushWorkItems
  id: FlushWorkItems
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: FlushWorkItems()
  nameWithType: AstarPath.FlushWorkItems()
  fullName: AstarPath.FlushWorkItems()
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: FlushWorkItems
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1128
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nForces work items to complete in a single frame.\nThis will force all work items to run immidiately.\nThis will force the pathfinding threads to finish calculating the path they are currently calculating (if any) and then pause.\nWhen all threads have paused, work items will be executed (which can be e.g graph updates).\n\nWarning: Using this very often (many times per second) can reduce your fps due to a lot of threads waiting for one another.\nBut you probably wont have to worry about that\n\nNote: This is almost (note almost) identical to <xref href=\"AstarPath.FlushGraphUpdates\" data-throw-if-not-resolved=\"false\"></xref>, but added for more descriptive name.\n\nWill not do anything if there are no queued work items waiting to run.\n"
  example: []
  syntax:
    content: public void FlushWorkItems()
    content.vb: Public Sub FlushWorkItems()
  overload: Global.AstarPath.FlushWorkItems*
- uid: Global.AstarPath.FlushWorkItems(System.Boolean,System.Boolean)
  commentId: M:Global.AstarPath.FlushWorkItems(System.Boolean,System.Boolean)
  id: FlushWorkItems(System.Boolean,System.Boolean)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: FlushWorkItems(bool, bool)
  nameWithType: AstarPath.FlushWorkItems(bool, bool)
  fullName: AstarPath.FlushWorkItems(bool, bool)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: FlushWorkItems
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1146
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nMake sure work items are executed.\n\nSee: AddWorkItem\n\nDeprecated: Use <xref href=\"AstarPath.FlushWorkItems\" data-throw-if-not-resolved=\"false\"></xref> instead.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use FlushWorkItems() instead")]

      public void FlushWorkItems(bool unblockOnComplete, bool block)
    parameters:
    - id: unblockOnComplete
      type: System.Boolean
      description: If true, pathfinding will be allowed to start running immediately after completing all work items.
    - id: block
      type: System.Boolean
      description: >-
        If true, work items that usually take more than one frame to complete will be forced to complete during this call.
                     If false, then after this call there might still be work left to do.
    content.vb: >-
      <Obsolete("Use FlushWorkItems() instead")>

      Public Sub FlushWorkItems(unblockOnComplete As Boolean, block As Boolean)
  overload: Global.AstarPath.FlushWorkItems*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use FlushWorkItems() instead
  nameWithType.vb: AstarPath.FlushWorkItems(Boolean, Boolean)
  fullName.vb: AstarPath.FlushWorkItems(Boolean, Boolean)
  name.vb: FlushWorkItems(Boolean, Boolean)
- uid: Global.AstarPath.FlushThreadSafeCallbacks
  commentId: M:Global.AstarPath.FlushThreadSafeCallbacks
  id: FlushThreadSafeCallbacks
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: FlushThreadSafeCallbacks()
  nameWithType: AstarPath.FlushThreadSafeCallbacks()
  fullName: AstarPath.FlushThreadSafeCallbacks()
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: FlushThreadSafeCallbacks
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1159
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nForces thread safe callbacks to run.\nDeprecated: Use <xref href=\"AstarPath.FlushWorkItems\" data-throw-if-not-resolved=\"false\"></xref> instead\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use FlushWorkItems instead")]

      public void FlushThreadSafeCallbacks()
    content.vb: >-
      <Obsolete("Use FlushWorkItems instead")>

      Public Sub FlushThreadSafeCallbacks()
  overload: Global.AstarPath.FlushThreadSafeCallbacks*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use FlushWorkItems instead
- uid: Global.AstarPath.CalculateThreadCount(Pathfinding.ThreadCount)
  commentId: M:Global.AstarPath.CalculateThreadCount(Pathfinding.ThreadCount)
  id: CalculateThreadCount(Pathfinding.ThreadCount)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: CalculateThreadCount(ThreadCount)
  nameWithType: AstarPath.CalculateThreadCount(ThreadCount)
  fullName: AstarPath.CalculateThreadCount(Pathfinding.ThreadCount)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: CalculateThreadCount
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1175
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  syntax:
    content: public static int CalculateThreadCount(ThreadCount count)
    parameters:
    - id: count
      type: Pathfinding.ThreadCount
    return:
      type: System.Int32
    content.vb: Public Shared Function CalculateThreadCount(count As ThreadCount) As Integer
  overload: Global.AstarPath.CalculateThreadCount*
- uid: Global.AstarPath.Awake
  commentId: M:Global.AstarPath.Awake
  id: Awake
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: Awake()
  nameWithType: AstarPath.Awake()
  fullName: AstarPath.Awake()
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: Awake
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1204
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nSets up all needed variables and scans the graphs.\nCalls Initialize, starts the ReturnPaths coroutine and scans all graphs.\nAlso starts threads if using multithreading\nSee: <xref href=\"AstarPath.OnAwakeSettings\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: protected override void Awake()
    content.vb: Protected Overrides Sub Awake()
  overridden: Pathfinding.VersionedMonoBehaviour.Awake
  overload: Global.AstarPath.Awake*
- uid: Global.AstarPath.ConfigureReferencesInternal
  commentId: M:Global.AstarPath.ConfigureReferencesInternal
  id: ConfigureReferencesInternal
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: ConfigureReferencesInternal()
  nameWithType: AstarPath.ConfigureReferencesInternal()
  fullName: AstarPath.ConfigureReferencesInternal()
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: ConfigureReferencesInternal
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1310
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: '\cond internal'
  example: []
  syntax:
    content: public void ConfigureReferencesInternal()
    content.vb: Public Sub ConfigureReferencesInternal()
  overload: Global.AstarPath.ConfigureReferencesInternal*
- uid: Global.AstarPath.FloodFill(Pathfinding.GraphNode)
  commentId: M:Global.AstarPath.FloodFill(Pathfinding.GraphNode)
  id: FloodFill(Pathfinding.GraphNode)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: FloodFill(GraphNode)
  nameWithType: AstarPath.FloodFill(GraphNode)
  fullName: AstarPath.FloodFill(Pathfinding.GraphNode)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: FloodFill
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1433
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nFloodfills starting from the specified node.\n\nDeprecated: Deprecated: Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes")]

      public void FloodFill(GraphNode seed)
    parameters:
    - id: seed
      type: Pathfinding.GraphNode
    content.vb: >-
      <Obsolete("Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes")>

      Public Sub FloodFill(seed As GraphNode)
  overload: Global.AstarPath.FloodFill*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes
- uid: Global.AstarPath.FloodFill(Pathfinding.GraphNode,System.UInt32)
  commentId: M:Global.AstarPath.FloodFill(Pathfinding.GraphNode,System.UInt32)
  id: FloodFill(Pathfinding.GraphNode,System.UInt32)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: FloodFill(GraphNode, uint)
  nameWithType: AstarPath.FloodFill(GraphNode, uint)
  fullName: AstarPath.FloodFill(Pathfinding.GraphNode, uint)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: FloodFill
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1442
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nFloodfills starting from &apos;seed&apos; using the specified area.\n\nDeprecated: Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes")]

      public void FloodFill(GraphNode seed, uint area)
    parameters:
    - id: seed
      type: Pathfinding.GraphNode
    - id: area
      type: System.UInt32
    content.vb: >-
      <Obsolete("Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes")>

      Public Sub FloodFill(seed As GraphNode, area As UInteger)
  overload: Global.AstarPath.FloodFill*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes
  nameWithType.vb: AstarPath.FloodFill(GraphNode, UInteger)
  fullName.vb: AstarPath.FloodFill(Pathfinding.GraphNode, UInteger)
  name.vb: FloodFill(GraphNode, UInteger)
- uid: Global.AstarPath.FloodFill
  commentId: M:Global.AstarPath.FloodFill
  id: FloodFill
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: FloodFill()
  nameWithType: AstarPath.FloodFill()
  fullName: AstarPath.FloodFill()
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: FloodFill
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1454
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nFloodfills all graphs and updates areas for every node.\nThe different colored areas that you see in the scene view when looking at graphs\nare called just &apos;areas&apos;, this method calculates which nodes are in what areas.\nSee: Pathfinding.Node.area\n\nDeprecated: Avoid using. This will force a full recalculation of the connected components. In most cases the HierarchicalGraph class takes care of things automatically behind the scenes now.\n"
  example: []
  syntax:
    content: >-
      [ContextMenu("Flood Fill Graphs")]

      [Obsolete("Avoid using. This will force a full recalculation of the connected components. In most cases the HierarchicalGraph class takes care of things automatically behind the scenes now.")]

      public void FloodFill()
    content.vb: >-
      <ContextMenu("Flood Fill Graphs")>

      <Obsolete("Avoid using. This will force a full recalculation of the connected components. In most cases the HierarchicalGraph class takes care of things automatically behind the scenes now.")>

      Public Sub FloodFill()
  overload: Global.AstarPath.FloodFill*
  attributes:
  - type: UnityEngine.ContextMenu
    ctor: UnityEngine.ContextMenu.#ctor(System.String)
    arguments:
    - type: System.String
      value: Flood Fill Graphs
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Avoid using. This will force a full recalculation of the connected components. In most cases the HierarchicalGraph class takes care of things automatically behind the scenes now.
- uid: Global.AstarPath.BlockUntilPathQueueBlocked
  commentId: M:Global.AstarPath.BlockUntilPathQueueBlocked
  id: BlockUntilPathQueueBlocked
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: BlockUntilPathQueueBlocked()
  nameWithType: AstarPath.BlockUntilPathQueueBlocked()
  fullName: AstarPath.BlockUntilPathQueueBlocked()
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: BlockUntilPathQueueBlocked
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1492
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nBlocks until all pathfinding threads are paused and blocked.\nDeprecated: Use <xref href=\"AstarPath.PausePathfinding\" data-throw-if-not-resolved=\"false\"></xref> instead. Make sure to call Release on the returned lock.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use PausePathfinding instead. Make sure to call Release on the returned lock.", true)]

      public void BlockUntilPathQueueBlocked()
    content.vb: >-
      <Obsolete("Use PausePathfinding instead. Make sure to call Release on the returned lock.", True)>

      Public Sub BlockUntilPathQueueBlocked()
  overload: Global.AstarPath.BlockUntilPathQueueBlocked*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Use PausePathfinding instead. Make sure to call Release on the returned lock.
    - type: System.Boolean
      value: true
- uid: Global.AstarPath.PausePathfinding
  commentId: M:Global.AstarPath.PausePathfinding
  id: PausePathfinding
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: PausePathfinding()
  nameWithType: AstarPath.PausePathfinding()
  fullName: AstarPath.PausePathfinding()
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: PausePathfinding
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1513
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nBlocks until all pathfinding threads are paused and blocked.\n\n<pre><code>var graphLock = AstarPath.active.PausePathfinding();\n// Here we can modify the graphs safely. For example by adding a new node to a point graph\nvar node = AstarPath.active.data.pointGraph.AddNode((Int3) new Vector3(3, 1, 4));\n\n// Allow pathfinding to resume\ngraphLock.Release();</code></pre>\n\nReturns: A lock object. You need to call <xref href=\"Pathfinding.PathProcessor.GraphUpdateLock.Release\" data-throw-if-not-resolved=\"false\"></xref> on that object to allow pathfinding to resume.\nNote: In most cases this should not be called from user code. Use the <xref href=\"AstarPath.AddWorkItem(System.Action)\" data-throw-if-not-resolved=\"false\"></xref> method instead.\n\nSee: <xref href=\"AstarPath.AddWorkItem(System.Action)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public PathProcessor.GraphUpdateLock PausePathfinding()
    return:
      type: Pathfinding.PathProcessor.GraphUpdateLock
    content.vb: Public Function PausePathfinding() As PathProcessor.GraphUpdateLock
  overload: Global.AstarPath.PausePathfinding*
- uid: Global.AstarPath.Scan(Pathfinding.NavGraph)
  commentId: M:Global.AstarPath.Scan(Pathfinding.NavGraph)
  id: Scan(Pathfinding.NavGraph)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: Scan(NavGraph)
  nameWithType: AstarPath.Scan(NavGraph)
  fullName: AstarPath.Scan(Pathfinding.NavGraph)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: Scan
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1544
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nScans a particular graph.\nCalling this method will recalculate the specified graph.\nThis method is pretty slow (depending on graph type and graph complexity of course), so it is advisable to use\nsmaller graph updates whenever possible.\n\n<pre><code>// Recalculate all graphs\nAstarPath.active.Scan();\n\n// Recalculate only the first grid graph\nvar graphToScan = AstarPath.active.data.gridGraph;\nAstarPath.active.Scan(graphToScan);\n\n// Recalculate only the first and third graphs\nvar graphsToScan = new [] { AstarPath.active.data.graphs[0], AstarPath.active.data.graphs[2] };\nAstarPath.active.Scan(graphsToScan);</code></pre>\n\nSee: graph-updates (view in online documentation for working links)\nSee: ScanAsync\n"
  example: []
  syntax:
    content: public void Scan(NavGraph graphToScan)
    parameters:
    - id: graphToScan
      type: Pathfinding.NavGraph
    content.vb: Public Sub Scan(graphToScan As NavGraph)
  overload: Global.AstarPath.Scan*
- uid: Global.AstarPath.Scan(Pathfinding.NavGraph[])
  commentId: M:Global.AstarPath.Scan(Pathfinding.NavGraph[])
  id: Scan(Pathfinding.NavGraph[])
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: Scan(NavGraph[])
  nameWithType: AstarPath.Scan(NavGraph[])
  fullName: AstarPath.Scan(Pathfinding.NavGraph[])
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: Scan
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1573
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nScans all specified graphs.\n\nCalling this method will recalculate all specified graphs or all graphs if the graphsToScan parameter is null.\nThis method is pretty slow (depending on graph type and graph complexity of course), so it is advisable to use\nsmaller graph updates whenever possible.\n\n<pre><code>// Recalculate all graphs\nAstarPath.active.Scan();\n\n// Recalculate only the first grid graph\nvar graphToScan = AstarPath.active.data.gridGraph;\nAstarPath.active.Scan(graphToScan);\n\n// Recalculate only the first and third graphs\nvar graphsToScan = new [] { AstarPath.active.data.graphs[0], AstarPath.active.data.graphs[2] };\nAstarPath.active.Scan(graphsToScan);</code></pre>\n\nSee: graph-updates (view in online documentation for working links)\nSee: ScanAsync\n"
  example: []
  syntax:
    content: public void Scan(NavGraph[] graphsToScan = null)
    parameters:
    - id: graphsToScan
      type: Pathfinding.NavGraph[]
      description: The graphs to scan. If this parameter is null then all graphs will be scanned
    content.vb: Public Sub Scan(graphsToScan As NavGraph() = Nothing)
  overload: Global.AstarPath.Scan*
  nameWithType.vb: AstarPath.Scan(NavGraph())
  fullName.vb: AstarPath.Scan(Pathfinding.NavGraph())
  name.vb: Scan(NavGraph())
- uid: Global.AstarPath.ScanAsync(Pathfinding.NavGraph)
  commentId: M:Global.AstarPath.ScanAsync(Pathfinding.NavGraph)
  id: ScanAsync(Pathfinding.NavGraph)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: ScanAsync(NavGraph)
  nameWithType: AstarPath.ScanAsync(NavGraph)
  fullName: AstarPath.ScanAsync(Pathfinding.NavGraph)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: ScanAsync
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1614
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nScans a particular graph asynchronously. This is a IEnumerable, you can loop through it to get the progress\n<pre><code>foreach (Progress progress in AstarPath.active.ScanAsync()) {\n    Debug.Log(&quot;Scanning... &quot; + progress.description + &quot; - &quot; + (progress.progress*100).ToString(&quot;0&quot;) + &quot;%&quot;);\n}</code></pre>\nYou can scan graphs asyncronously by yielding when you loop through the progress.\nNote that this does not guarantee a good framerate, but it will allow you\nto at least show a progress bar during scanning.\n<pre><code>IEnumerator Start () {\n    foreach (Progress progress in AstarPath.active.ScanAsync()) {\n        Debug.Log(&quot;Scanning... &quot; + progress.description + &quot; - &quot; + (progress.progress*100).ToString(&quot;0&quot;) + &quot;%&quot;);\n        yield return null;\n    }\n}</code></pre>\n\nSee: Scan\n"
  example: []
  syntax:
    content: public IEnumerable<Progress> ScanAsync(NavGraph graphToScan)
    parameters:
    - id: graphToScan
      type: Pathfinding.NavGraph
    return:
      type: System.Collections.Generic.IEnumerable{Pathfinding.Progress}
    content.vb: Public Function ScanAsync(graphToScan As NavGraph) As IEnumerable(Of Progress)
  overload: Global.AstarPath.ScanAsync*
- uid: Global.AstarPath.ScanAsync(Pathfinding.NavGraph[])
  commentId: M:Global.AstarPath.ScanAsync(Pathfinding.NavGraph[])
  id: ScanAsync(Pathfinding.NavGraph[])
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: ScanAsync(NavGraph[])
  nameWithType: AstarPath.ScanAsync(NavGraph[])
  fullName: AstarPath.ScanAsync(Pathfinding.NavGraph[])
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: ScanAsync
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1642
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nScans all specified graphs asynchronously. This is a IEnumerable, you can loop through it to get the progress\n\n<pre><code>foreach (Progress progress in AstarPath.active.ScanAsync()) {\n    Debug.Log(&quot;Scanning... &quot; + progress.description + &quot; - &quot; + (progress.progress*100).ToString(&quot;0&quot;) + &quot;%&quot;);\n}</code></pre>\nYou can scan graphs asyncronously by yielding when you loop through the progress.\nNote that this does not guarantee a good framerate, but it will allow you\nto at least show a progress bar during scanning.\n<pre><code>IEnumerator Start () {\n    foreach (Progress progress in AstarPath.active.ScanAsync()) {\n        Debug.Log(&quot;Scanning... &quot; + progress.description + &quot; - &quot; + (progress.progress*100).ToString(&quot;0&quot;) + &quot;%&quot;);\n        yield return null;\n    }\n}</code></pre>\n\nSee: Scan\n"
  example: []
  syntax:
    content: public IEnumerable<Progress> ScanAsync(NavGraph[] graphsToScan = null)
    parameters:
    - id: graphsToScan
      type: Pathfinding.NavGraph[]
      description: The graphs to scan. If this parameter is null then all graphs will be scanned
    return:
      type: System.Collections.Generic.IEnumerable{Pathfinding.Progress}
    content.vb: Public Function ScanAsync(graphsToScan As NavGraph() = Nothing) As IEnumerable(Of Progress)
  overload: Global.AstarPath.ScanAsync*
  nameWithType.vb: AstarPath.ScanAsync(NavGraph())
  fullName.vb: AstarPath.ScanAsync(Pathfinding.NavGraph())
  name.vb: ScanAsync(NavGraph())
- uid: Global.AstarPath.WaitForPath(Pathfinding.Path)
  commentId: M:Global.AstarPath.WaitForPath(Pathfinding.Path)
  id: WaitForPath(Pathfinding.Path)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: WaitForPath(Path)
  nameWithType: AstarPath.WaitForPath(Path)
  fullName: AstarPath.WaitForPath(Pathfinding.Path)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: WaitForPath
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1804
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nWait for the specified path to be calculated.\nNormally it takes a few frames for a path to get calculated and returned.\n\nDeprecated: This method has been renamed to <xref href=\"AstarPath.BlockUntilCalculated(Pathfinding.Path)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This method has been renamed to BlockUntilCalculated")]

      public static void WaitForPath(Path path)
    parameters:
    - id: path
      type: Pathfinding.Path
    content.vb: >-
      <Obsolete("This method has been renamed to BlockUntilCalculated")>

      Public Shared Sub WaitForPath(path As Path)
  overload: Global.AstarPath.WaitForPath*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method has been renamed to BlockUntilCalculated
- uid: Global.AstarPath.BlockUntilCalculated(Pathfinding.Path)
  commentId: M:Global.AstarPath.BlockUntilCalculated(Pathfinding.Path)
  id: BlockUntilCalculated(Pathfinding.Path)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: BlockUntilCalculated(Path)
  nameWithType: AstarPath.BlockUntilCalculated(Path)
  fullName: AstarPath.BlockUntilCalculated(Pathfinding.Path)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: BlockUntilCalculated
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1837
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nBlocks until the path has been calculated.\n\nNormally it takes a few frames for a path to be calculated and returned.\nThis function will ensure that the path will be calculated when this function returns\nand that the callback for that path has been called.\n\nIf requesting a lot of paths in one go and waiting for the last one to complete,\nit will calculate most of the paths in the queue (only most if using multithreading, all if not using multithreading).\n\nUse this function only if you really need to.\nThere is a point to spreading path calculations out over several frames.\nIt smoothes out the framerate and makes sure requesting a large\nnumber of paths at the same time does not cause lag.\n\nNote: Graph updates and other callbacks might get called during the execution of this function.\n\nWhen the pathfinder is shutting down. I.e in OnDestroy, this function will not do anything.\n\n\\throws Exception if pathfinding is not initialized properly for this scene (most likely no AstarPath object exists)\nor if the path has not been started yet.\nAlso throws an exception if critical errors occur such as when the pathfinding threads have crashed (which should not happen in normal cases).\nThis prevents an infinite loop while waiting for the path.\n\nSee: Pathfinding.Path.WaitForPath\nSee: Pathfinding.Path.BlockUntilCalculated\n"
  example: []
  syntax:
    content: public static void BlockUntilCalculated(Path path)
    parameters:
    - id: path
      type: Pathfinding.Path
      description: The path to wait for. The path must be started, otherwise an exception will be thrown.
    content.vb: Public Shared Sub BlockUntilCalculated(path As Path)
  overload: Global.AstarPath.BlockUntilCalculated*
- uid: Global.AstarPath.RegisterSafeUpdate(System.Action)
  commentId: M:Global.AstarPath.RegisterSafeUpdate(System.Action)
  id: RegisterSafeUpdate(System.Action)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: RegisterSafeUpdate(Action)
  nameWithType: AstarPath.RegisterSafeUpdate(Action)
  fullName: AstarPath.RegisterSafeUpdate(System.Action)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: RegisterSafeUpdate
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1901
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nWill send a callback when it is safe to update nodes. This is defined as between the path searches.\nThis callback will only be sent once and is nulled directly after the callback has been sent.\nWhen using more threads than one, calling this often might decrease pathfinding performance due to a lot of idling in the threads.\nNot performance as in it will use much CPU power,\nbut performance as in the number of paths per second will probably go down (though your framerate might actually increase a tiny bit)\n\nYou should only call this function from the main unity thread (i.e normal game code).\n\nVersion: Since version 4.0 this is equivalent to AddWorkItem(new AstarWorkItem(callback)). Previously the\ncallbacks added using this method would not be ordered with respect to other work items, so they could be\nexecuted before other work items or after them.\n\nDeprecated: Use <xref href=\"AstarPath.AddWorkItem(System.Action)\" data-throw-if-not-resolved=\"false\"></xref> instead. Note the slight change in behavior (mentioned above).\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use AddWorkItem(System.Action) instead. Note the slight change in behavior (mentioned in the documentation).")]

      public static void RegisterSafeUpdate(Action callback)
    parameters:
    - id: callback
      type: System.Action
    content.vb: >-
      <Obsolete("Use AddWorkItem(System.Action) instead. Note the slight change in behavior (mentioned in the documentation).")>

      Public Shared Sub RegisterSafeUpdate(callback As Action)
  overload: Global.AstarPath.RegisterSafeUpdate*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use AddWorkItem(System.Action) instead. Note the slight change in behavior (mentioned in the documentation).
- uid: Global.AstarPath.StartPath(Pathfinding.Path,System.Boolean)
  commentId: M:Global.AstarPath.StartPath(Pathfinding.Path,System.Boolean)
  id: StartPath(Pathfinding.Path,System.Boolean)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: StartPath(Path, bool)
  nameWithType: AstarPath.StartPath(Path, bool)
  fullName: AstarPath.StartPath(Pathfinding.Path, bool)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: StartPath
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1915
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nAdds the path to a queue so that it will be calculated as soon as possible.\nThe callback specified when constructing the path will be called when the path has been calculated.\nUsually you should use the Seeker component instead of calling this function directly.\n"
  example: []
  syntax:
    content: public static void StartPath(Path path, bool pushToFront = false)
    parameters:
    - id: path
      type: Pathfinding.Path
      description: The path that should be enqueued.
    - id: pushToFront
      type: System.Boolean
      description: >-
        If true, the path will be pushed to the front of the queue, bypassing all waiting paths and making it the next path to be calculated.

        This can be useful if you have a path which you want to prioritize over all others. Be careful to not overuse it though.

        If too many paths are put in the front of the queue often, this can lead to normal paths having to wait a very long time before being calculated.
    content.vb: Public Shared Sub StartPath(path As Path, pushToFront As Boolean = False)
  overload: Global.AstarPath.StartPath*
  nameWithType.vb: AstarPath.StartPath(Path, Boolean)
  fullName.vb: AstarPath.StartPath(Pathfinding.Path, Boolean)
  name.vb: StartPath(Path, Boolean)
- uid: Global.AstarPath.GetNearest(UnityEngine.Vector3)
  commentId: M:Global.AstarPath.GetNearest(UnityEngine.Vector3)
  id: GetNearest(UnityEngine.Vector3)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: GetNearest(Vector3)
  nameWithType: AstarPath.GetNearest(Vector3)
  fullName: AstarPath.GetNearest(UnityEngine.Vector3)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: GetNearest
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1979
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nReturns the nearest node to a position using the specified NNConstraint.\nSearches through all graphs for their nearest nodes to the specified position and picks the closest one.\\n\nUsing the NNConstraint.None constraint.\n\n<pre><code>// Find the closest node to this GameObject&apos;s position\nGraphNode node = AstarPath.active.GetNearest(transform.position).node;\n\nif (node.Walkable) {\n    // Yay, the node is walkable, we can place a tower here or something\n}</code></pre>\n\nSee: Pathfinding.NNConstraint\n"
  example: []
  syntax:
    content: public NNInfo GetNearest(Vector3 position)
    parameters:
    - id: position
      type: UnityEngine.Vector3
    return:
      type: Pathfinding.NNInfo
    content.vb: Public Function GetNearest(position As Vector3) As NNInfo
  overload: Global.AstarPath.GetNearest*
- uid: Global.AstarPath.GetNearest(UnityEngine.Vector3,Pathfinding.NNConstraint)
  commentId: M:Global.AstarPath.GetNearest(UnityEngine.Vector3,Pathfinding.NNConstraint)
  id: GetNearest(UnityEngine.Vector3,Pathfinding.NNConstraint)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: GetNearest(Vector3, NNConstraint)
  nameWithType: AstarPath.GetNearest(Vector3, NNConstraint)
  fullName: AstarPath.GetNearest(UnityEngine.Vector3, Pathfinding.NNConstraint)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: GetNearest
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 2011
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  syntax:
    content: public NNInfo GetNearest(Vector3 position, NNConstraint constraint)
    parameters:
    - id: position
      type: UnityEngine.Vector3
    - id: constraint
      type: Pathfinding.NNConstraint
    return:
      type: Pathfinding.NNInfo
    content.vb: Public Function GetNearest(position As Vector3, constraint As NNConstraint) As NNInfo
  overload: Global.AstarPath.GetNearest*
- uid: Global.AstarPath.GetNearest(UnityEngine.Vector3,Pathfinding.NNConstraint,Pathfinding.GraphNode)
  commentId: M:Global.AstarPath.GetNearest(UnityEngine.Vector3,Pathfinding.NNConstraint,Pathfinding.GraphNode)
  id: GetNearest(UnityEngine.Vector3,Pathfinding.NNConstraint,Pathfinding.GraphNode)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: GetNearest(Vector3, NNConstraint, GraphNode)
  nameWithType: AstarPath.GetNearest(Vector3, NNConstraint, GraphNode)
  fullName: AstarPath.GetNearest(UnityEngine.Vector3, Pathfinding.NNConstraint, Pathfinding.GraphNode)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: GetNearest
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 2021
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nReturns the nearest node to a position using the specified NNConstraint.\nSearches through all graphs for their nearest nodes to the specified position and picks the closest one.\nThe NNConstraint can be used to specify constraints on which nodes can be chosen such as only picking walkable nodes.\nSee: Pathfinding.NNConstraint\n"
  example: []
  syntax:
    content: public NNInfo GetNearest(Vector3 position, NNConstraint constraint, GraphNode hint)
    parameters:
    - id: position
      type: UnityEngine.Vector3
    - id: constraint
      type: Pathfinding.NNConstraint
    - id: hint
      type: Pathfinding.GraphNode
    return:
      type: Pathfinding.NNInfo
    content.vb: Public Function GetNearest(position As Vector3, constraint As NNConstraint, hint As GraphNode) As NNInfo
  overload: Global.AstarPath.GetNearest*
- uid: Global.AstarPath.GetNearest(UnityEngine.Ray)
  commentId: M:Global.AstarPath.GetNearest(UnityEngine.Ray)
  id: GetNearest(UnityEngine.Ray)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: GetNearest(Ray)
  nameWithType: AstarPath.GetNearest(Ray)
  fullName: AstarPath.GetNearest(UnityEngine.Ray)
  type: Method
  source:
    remote:
      path: Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: GetNearest
    path: ../Assets/Plugins/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 2109
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: "\nReturns the node closest to the ray (slow).\nWarning: This function is brute-force and very slow, use with caution\n"
  example: []
  syntax:
    content: public GraphNode GetNearest(Ray ray)
    parameters:
    - id: ray
      type: UnityEngine.Ray
    return:
      type: Pathfinding.GraphNode
    content.vb: Public Function GetNearest(ray As Ray) As GraphNode
  overload: Global.AstarPath.GetNearest*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Pathfinding.VersionedMonoBehaviour
  commentId: T:Pathfinding.VersionedMonoBehaviour
  parent: Pathfinding
  name: VersionedMonoBehaviour
  nameWithType: VersionedMonoBehaviour
  fullName: Pathfinding.VersionedMonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Pathfinding
  commentId: N:Pathfinding
  name: Pathfinding
  nameWithType: Pathfinding
  fullName: Pathfinding
- uid: System.Version
  commentId: T:System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: Global.AstarPath.AstarDistribution
  commentId: T:Global.AstarPath.AstarDistribution
  name: AstarPath.AstarDistribution
  nameWithType: AstarPath.AstarDistribution
  fullName: AstarPath.AstarDistribution
  spec.csharp:
  - uid: Global.AstarPath
    name: AstarPath
  - name: .
  - uid: Global.AstarPath.AstarDistribution
    name: AstarDistribution
  spec.vb:
  - uid: Global.AstarPath
    name: AstarPath
  - name: .
  - uid: Global.AstarPath.AstarDistribution
    name: AstarDistribution
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.AstarPath.graphTypes*
  commentId: Overload:Global.AstarPath.graphTypes
  name: graphTypes
  nameWithType: AstarPath.graphTypes
  fullName: AstarPath.graphTypes
- uid: System.Type[]
  isExternal: true
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Type
    name: Type
    isExternal: true
  - name: (
  - name: )
- uid: Pathfinding.AstarData
  commentId: T:Pathfinding.AstarData
  parent: Pathfinding
  name: AstarData
  nameWithType: AstarData
  fullName: Pathfinding.AstarData
- uid: Global.AstarPath.astarData*
  commentId: Overload:Global.AstarPath.astarData
  name: astarData
  nameWithType: AstarPath.astarData
  fullName: AstarPath.astarData
- uid: Global.AstarPath
  commentId: T:Global.AstarPath
  name: AstarPath
  nameWithType: AstarPath
  fullName: AstarPath
- uid: Global.AstarPath.graphs*
  commentId: Overload:Global.AstarPath.graphs
  name: graphs
  nameWithType: AstarPath.graphs
  fullName: AstarPath.graphs
- uid: Pathfinding.NavGraph[]
  isExternal: true
  name: NavGraph[]
  nameWithType: NavGraph[]
  fullName: Pathfinding.NavGraph[]
  nameWithType.vb: NavGraph()
  fullName.vb: Pathfinding.NavGraph()
  name.vb: NavGraph()
  spec.csharp:
  - uid: Pathfinding.NavGraph
    name: NavGraph
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Pathfinding.NavGraph
    name: NavGraph
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AstarPath.unwalkableNodeDebugSize
  commentId: F:AstarPath.unwalkableNodeDebugSize
  isExternal: true
- uid: Pathfinding.GraphDebugMode
  commentId: T:Pathfinding.GraphDebugMode
  parent: Pathfinding
  name: GraphDebugMode
  nameWithType: GraphDebugMode
  fullName: Pathfinding.GraphDebugMode
- uid: AstarPath.debugMode
  commentId: F:AstarPath.debugMode
  isExternal: true
- uid: AstarPath.debugRoof
  commentId: F:AstarPath.debugRoof
  isExternal: true
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: AstarPath.debugFloor
  commentId: F:AstarPath.debugFloor
  isExternal: true
- uid: AstarPath.showUnwalkableNodes
  commentId: F:AstarPath.showUnwalkableNodes
  isExternal: true
- uid: Pathfinding.PathLog
  commentId: T:Pathfinding.PathLog
  parent: Pathfinding
  name: PathLog
  nameWithType: PathLog
  fullName: Pathfinding.PathLog
- uid: AstarPath.maxNearestNodeDistance
  commentId: F:AstarPath.maxNearestNodeDistance
  isExternal: true
- uid: Global.AstarPath.maxNearestNodeDistanceSqr*
  commentId: Overload:Global.AstarPath.maxNearestNodeDistanceSqr
  name: maxNearestNodeDistanceSqr
  nameWithType: AstarPath.maxNearestNodeDistanceSqr
  fullName: AstarPath.maxNearestNodeDistanceSqr
- uid: AstarPath.Scan(Pathfinding.NavGraph)
  commentId: M:AstarPath.Scan(Pathfinding.NavGraph)
  isExternal: true
- uid: AstarPath.ScanAsync(Pathfinding.NavGraph)
  commentId: M:AstarPath.ScanAsync(Pathfinding.NavGraph)
  isExternal: true
- uid: AstarPath.prioritizeGraphsLimit
  commentId: F:AstarPath.prioritizeGraphsLimit
  isExternal: true
- uid: AstarPath.prioritizeGraphs
  commentId: F:AstarPath.prioritizeGraphs
  isExternal: true
- uid: Pathfinding.AstarColor
  commentId: T:Pathfinding.AstarColor
  parent: Pathfinding
  name: AstarColor
  nameWithType: AstarColor
  fullName: Pathfinding.AstarColor
- uid: System.String[]
  isExternal: true
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
  - name: (
  - name: )
- uid: Pathfinding.Heuristic
  commentId: T:Pathfinding.Heuristic
  parent: Pathfinding
  name: Heuristic
  nameWithType: Heuristic
  fullName: Pathfinding.Heuristic
- uid: AstarPath.heuristic
  commentId: F:AstarPath.heuristic
  isExternal: true
- uid: AstarPath.AddWorkItem(System.Action)
  commentId: M:AstarPath.AddWorkItem(System.Action)
  isExternal: true
- uid: Pathfinding.ThreadCount
  commentId: T:Pathfinding.ThreadCount
  parent: Pathfinding
  name: ThreadCount
  nameWithType: ThreadCount
  fullName: Pathfinding.ThreadCount
- uid: AstarPath.graphUpdateBatchingInterval
  commentId: F:AstarPath.graphUpdateBatchingInterval
  isExternal: true
- uid: AstarPath.UpdateGraphs(UnityEngine.Bounds,System.Single)
  commentId: M:AstarPath.UpdateGraphs(UnityEngine.Bounds,System.Single)
  isExternal: true
- uid: AstarPath.RegisterSafeUpdate(System.Action)
  commentId: M:AstarPath.RegisterSafeUpdate(System.Action)
  isExternal: true
- uid: AstarPath.FlushGraphUpdates
  commentId: M:AstarPath.FlushGraphUpdates
  isExternal: true
- uid: AstarPath.batchGraphUpdates
  commentId: F:AstarPath.batchGraphUpdates
  isExternal: true
- uid: Global.AstarPath.limitGraphUpdates*
  commentId: Overload:Global.AstarPath.limitGraphUpdates
  name: limitGraphUpdates
  nameWithType: AstarPath.limitGraphUpdates
  fullName: AstarPath.limitGraphUpdates
- uid: Global.AstarPath.maxGraphUpdateFreq*
  commentId: Overload:Global.AstarPath.maxGraphUpdateFreq
  name: maxGraphUpdateFreq
  nameWithType: AstarPath.maxGraphUpdateFreq
  fullName: AstarPath.maxGraphUpdateFreq
- uid: Global.AstarPath.lastScanTime*
  commentId: Overload:Global.AstarPath.lastScanTime
  name: lastScanTime
  nameWithType: AstarPath.lastScanTime
  fullName: AstarPath.lastScanTime
- uid: Pathfinding.PathHandler
  commentId: T:Pathfinding.PathHandler
  parent: Pathfinding
  name: PathHandler
  nameWithType: PathHandler
  fullName: Pathfinding.PathHandler
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: Global.AstarPath.isScanning*
  commentId: Overload:Global.AstarPath.isScanning
  name: isScanning
  nameWithType: AstarPath.isScanning
  fullName: AstarPath.isScanning
- uid: Global.AstarPath.NumParallelThreads*
  commentId: Overload:Global.AstarPath.NumParallelThreads
  name: NumParallelThreads
  nameWithType: AstarPath.NumParallelThreads
  fullName: AstarPath.NumParallelThreads
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.AstarPath.IsUsingMultithreading*
  commentId: Overload:Global.AstarPath.IsUsingMultithreading
  name: IsUsingMultithreading
  nameWithType: AstarPath.IsUsingMultithreading
  fullName: AstarPath.IsUsingMultithreading
- uid: Global.AstarPath.IsAnyGraphUpdatesQueued*
  commentId: Overload:Global.AstarPath.IsAnyGraphUpdatesQueued
  name: IsAnyGraphUpdatesQueued
  nameWithType: AstarPath.IsAnyGraphUpdatesQueued
  fullName: AstarPath.IsAnyGraphUpdatesQueued
- uid: Global.AstarPath.IsAnyGraphUpdateQueued*
  commentId: Overload:Global.AstarPath.IsAnyGraphUpdateQueued
  name: IsAnyGraphUpdateQueued
  nameWithType: AstarPath.IsAnyGraphUpdateQueued
  fullName: AstarPath.IsAnyGraphUpdateQueued
- uid: Global.AstarPath.IsAnyGraphUpdateInProgress*
  commentId: Overload:Global.AstarPath.IsAnyGraphUpdateInProgress
  name: IsAnyGraphUpdateInProgress
  nameWithType: AstarPath.IsAnyGraphUpdateInProgress
  fullName: AstarPath.IsAnyGraphUpdateInProgress
- uid: Global.AstarPath.IsAnyWorkItemInProgress*
  commentId: Overload:Global.AstarPath.IsAnyWorkItemInProgress
  name: IsAnyWorkItemInProgress
  nameWithType: AstarPath.IsAnyWorkItemInProgress
  fullName: AstarPath.IsAnyWorkItemInProgress
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Pathfinding.OnGraphDelegate
  commentId: T:Pathfinding.OnGraphDelegate
  parent: Pathfinding
  name: OnGraphDelegate
  nameWithType: OnGraphDelegate
  fullName: Pathfinding.OnGraphDelegate
- uid: Pathfinding.OnPathDelegate
  commentId: T:Pathfinding.OnPathDelegate
  parent: Pathfinding
  name: OnPathDelegate
  nameWithType: OnPathDelegate
  fullName: Pathfinding.OnPathDelegate
- uid: Pathfinding.OnScanDelegate
  commentId: T:Pathfinding.OnScanDelegate
  parent: Pathfinding
  name: OnScanDelegate
  nameWithType: OnScanDelegate
  fullName: Pathfinding.OnScanDelegate
- uid: Pathfinding.NavmeshUpdates
  commentId: T:Pathfinding.NavmeshUpdates
  parent: Pathfinding
  name: NavmeshUpdates
  nameWithType: NavmeshUpdates
  fullName: Pathfinding.NavmeshUpdates
- uid: Pathfinding.EuclideanEmbedding
  commentId: T:Pathfinding.EuclideanEmbedding
  parent: Pathfinding
  name: EuclideanEmbedding
  nameWithType: EuclideanEmbedding
  fullName: Pathfinding.EuclideanEmbedding
- uid: Global.AstarPath.GetTagNames*
  commentId: Overload:Global.AstarPath.GetTagNames
  name: GetTagNames
  nameWithType: AstarPath.GetTagNames
  fullName: AstarPath.GetTagNames
- uid: AstarPath.active
  commentId: F:AstarPath.active
  isExternal: true
- uid: Global.AstarPath.FindAstarPath*
  commentId: Overload:Global.AstarPath.FindAstarPath
  name: FindAstarPath
  nameWithType: AstarPath.FindAstarPath
  fullName: AstarPath.FindAstarPath
- uid: Global.AstarPath.FindTagNames*
  commentId: Overload:Global.AstarPath.FindTagNames
  name: FindTagNames
  nameWithType: AstarPath.FindTagNames
  fullName: AstarPath.FindTagNames
- uid: Pathfinding.IWorkItemContext
  commentId: T:Pathfinding.IWorkItemContext
  isExternal: true
- uid: Global.AstarPath.QueueWorkItemFloodFill*
  commentId: Overload:Global.AstarPath.QueueWorkItemFloodFill
  name: QueueWorkItemFloodFill
  nameWithType: AstarPath.QueueWorkItemFloodFill
  fullName: AstarPath.QueueWorkItemFloodFill
- uid: Global.AstarPath.EnsureValidFloodFill*
  commentId: Overload:Global.AstarPath.EnsureValidFloodFill
  name: EnsureValidFloodFill
  nameWithType: AstarPath.EnsureValidFloodFill
  fullName: AstarPath.EnsureValidFloodFill
- uid: AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)
  commentId: M:AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)
  isExternal: true
- uid: Global.AstarPath.AddWorkItem*
  commentId: Overload:Global.AstarPath.AddWorkItem
  name: AddWorkItem
  nameWithType: AstarPath.AddWorkItem
  fullName: AstarPath.AddWorkItem
- uid: System.Action{Pathfinding.IWorkItemContext}
  commentId: T:System.Action{Pathfinding.IWorkItemContext}
  parent: System
  definition: System.Action`1
  name: Action<IWorkItemContext>
  nameWithType: Action<IWorkItemContext>
  fullName: System.Action<Pathfinding.IWorkItemContext>
  nameWithType.vb: Action(Of IWorkItemContext)
  fullName.vb: System.Action(Of Pathfinding.IWorkItemContext)
  name.vb: Action(Of IWorkItemContext)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: <
  - uid: Pathfinding.IWorkItemContext
    name: IWorkItemContext
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Pathfinding.IWorkItemContext
    name: IWorkItemContext
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AstarPath.FlushWorkItems
  commentId: M:AstarPath.FlushWorkItems
  isExternal: true
- uid: Pathfinding.AstarWorkItem
  commentId: T:Pathfinding.AstarWorkItem
  parent: Pathfinding
  name: AstarWorkItem
  nameWithType: AstarWorkItem
  fullName: Pathfinding.AstarWorkItem
- uid: Global.AstarPath.QueueGraphUpdates*
  commentId: Overload:Global.AstarPath.QueueGraphUpdates
  name: QueueGraphUpdates
  nameWithType: AstarPath.QueueGraphUpdates
  fullName: AstarPath.QueueGraphUpdates
- uid: Global.AstarPath.UpdateGraphs*
  commentId: Overload:Global.AstarPath.UpdateGraphs
  name: UpdateGraphs
  nameWithType: AstarPath.UpdateGraphs
  fullName: AstarPath.UpdateGraphs
- uid: UnityEngine.Bounds
  commentId: T:UnityEngine.Bounds
  parent: UnityEngine
  isExternal: true
  name: Bounds
  nameWithType: Bounds
  fullName: UnityEngine.Bounds
- uid: Pathfinding.GraphUpdateObject
  commentId: T:Pathfinding.GraphUpdateObject
  parent: Pathfinding
  name: GraphUpdateObject
  nameWithType: GraphUpdateObject
  fullName: Pathfinding.GraphUpdateObject
- uid: Global.AstarPath.FlushGraphUpdates*
  commentId: Overload:Global.AstarPath.FlushGraphUpdates
  name: FlushGraphUpdates
  nameWithType: AstarPath.FlushGraphUpdates
  fullName: AstarPath.FlushGraphUpdates
- uid: Global.AstarPath.FlushWorkItems*
  commentId: Overload:Global.AstarPath.FlushWorkItems
  name: FlushWorkItems
  nameWithType: AstarPath.FlushWorkItems
  fullName: AstarPath.FlushWorkItems
- uid: Global.AstarPath.FlushThreadSafeCallbacks*
  commentId: Overload:Global.AstarPath.FlushThreadSafeCallbacks
  name: FlushThreadSafeCallbacks
  nameWithType: AstarPath.FlushThreadSafeCallbacks
  fullName: AstarPath.FlushThreadSafeCallbacks
- uid: Global.AstarPath.CalculateThreadCount*
  commentId: Overload:Global.AstarPath.CalculateThreadCount
  name: CalculateThreadCount
  nameWithType: AstarPath.CalculateThreadCount
  fullName: AstarPath.CalculateThreadCount
- uid: AstarPath.OnAwakeSettings
  commentId: F:AstarPath.OnAwakeSettings
  isExternal: true
- uid: Pathfinding.VersionedMonoBehaviour.Awake
  commentId: M:Pathfinding.VersionedMonoBehaviour.Awake
  parent: Pathfinding.VersionedMonoBehaviour
  name: Awake()
  nameWithType: VersionedMonoBehaviour.Awake()
  fullName: Pathfinding.VersionedMonoBehaviour.Awake()
  spec.csharp:
  - uid: Pathfinding.VersionedMonoBehaviour.Awake
    name: Awake
  - name: (
  - name: )
  spec.vb:
  - uid: Pathfinding.VersionedMonoBehaviour.Awake
    name: Awake
  - name: (
  - name: )
- uid: Global.AstarPath.Awake*
  commentId: Overload:Global.AstarPath.Awake
  name: Awake
  nameWithType: AstarPath.Awake
  fullName: AstarPath.Awake
- uid: AstarPath.data
  commentId: F:AstarPath.data
  isExternal: true
- uid: AstarPath.colorSettings
  commentId: F:AstarPath.colorSettings
  isExternal: true
- uid: Global.AstarPath.ConfigureReferencesInternal*
  commentId: Overload:Global.AstarPath.ConfigureReferencesInternal
  name: ConfigureReferencesInternal
  nameWithType: AstarPath.ConfigureReferencesInternal
  fullName: AstarPath.ConfigureReferencesInternal
- uid: Global.AstarPath.FloodFill*
  commentId: Overload:Global.AstarPath.FloodFill
  name: FloodFill
  nameWithType: AstarPath.FloodFill
  fullName: AstarPath.FloodFill
- uid: Pathfinding.GraphNode
  commentId: T:Pathfinding.GraphNode
  parent: Pathfinding
  name: GraphNode
  nameWithType: GraphNode
  fullName: Pathfinding.GraphNode
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: AstarPath.PausePathfinding
  commentId: M:AstarPath.PausePathfinding
  isExternal: true
- uid: Global.AstarPath.BlockUntilPathQueueBlocked*
  commentId: Overload:Global.AstarPath.BlockUntilPathQueueBlocked
  name: BlockUntilPathQueueBlocked
  nameWithType: AstarPath.BlockUntilPathQueueBlocked
  fullName: AstarPath.BlockUntilPathQueueBlocked
- uid: Pathfinding.PathProcessor.GraphUpdateLock.Release
  commentId: M:Pathfinding.PathProcessor.GraphUpdateLock.Release
  isExternal: true
- uid: Global.AstarPath.PausePathfinding*
  commentId: Overload:Global.AstarPath.PausePathfinding
  name: PausePathfinding
  nameWithType: AstarPath.PausePathfinding
  fullName: AstarPath.PausePathfinding
- uid: Pathfinding.PathProcessor.GraphUpdateLock
  commentId: T:Pathfinding.PathProcessor.GraphUpdateLock
  parent: Pathfinding
  name: PathProcessor.GraphUpdateLock
  nameWithType: PathProcessor.GraphUpdateLock
  fullName: Pathfinding.PathProcessor.GraphUpdateLock
  spec.csharp:
  - uid: Pathfinding.PathProcessor
    name: PathProcessor
  - name: .
  - uid: Pathfinding.PathProcessor.GraphUpdateLock
    name: GraphUpdateLock
  spec.vb:
  - uid: Pathfinding.PathProcessor
    name: PathProcessor
  - name: .
  - uid: Pathfinding.PathProcessor.GraphUpdateLock
    name: GraphUpdateLock
- uid: Global.AstarPath.Scan*
  commentId: Overload:Global.AstarPath.Scan
  name: Scan
  nameWithType: AstarPath.Scan
  fullName: AstarPath.Scan
- uid: Pathfinding.NavGraph
  commentId: T:Pathfinding.NavGraph
  parent: Pathfinding
  name: NavGraph
  nameWithType: NavGraph
  fullName: Pathfinding.NavGraph
- uid: Global.AstarPath.ScanAsync*
  commentId: Overload:Global.AstarPath.ScanAsync
  name: ScanAsync
  nameWithType: AstarPath.ScanAsync
  fullName: AstarPath.ScanAsync
- uid: System.Collections.Generic.IEnumerable{Pathfinding.Progress}
  commentId: T:System.Collections.Generic.IEnumerable{Pathfinding.Progress}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Progress>
  nameWithType: IEnumerable<Progress>
  fullName: System.Collections.Generic.IEnumerable<Pathfinding.Progress>
  nameWithType.vb: IEnumerable(Of Progress)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Pathfinding.Progress)
  name.vb: IEnumerable(Of Progress)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - uid: Pathfinding.Progress
    name: Progress
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Pathfinding.Progress
    name: Progress
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: AstarPath.BlockUntilCalculated(Pathfinding.Path)
  commentId: M:AstarPath.BlockUntilCalculated(Pathfinding.Path)
  isExternal: true
- uid: Global.AstarPath.WaitForPath*
  commentId: Overload:Global.AstarPath.WaitForPath
  name: WaitForPath
  nameWithType: AstarPath.WaitForPath
  fullName: AstarPath.WaitForPath
- uid: Pathfinding.Path
  commentId: T:Pathfinding.Path
  parent: Pathfinding
  name: Path
  nameWithType: Path
  fullName: Pathfinding.Path
- uid: Global.AstarPath.BlockUntilCalculated*
  commentId: Overload:Global.AstarPath.BlockUntilCalculated
  name: BlockUntilCalculated
  nameWithType: AstarPath.BlockUntilCalculated
  fullName: AstarPath.BlockUntilCalculated
- uid: Global.AstarPath.RegisterSafeUpdate*
  commentId: Overload:Global.AstarPath.RegisterSafeUpdate
  name: RegisterSafeUpdate
  nameWithType: AstarPath.RegisterSafeUpdate
  fullName: AstarPath.RegisterSafeUpdate
- uid: Global.AstarPath.StartPath*
  commentId: Overload:Global.AstarPath.StartPath
  name: StartPath
  nameWithType: AstarPath.StartPath
  fullName: AstarPath.StartPath
- uid: Global.AstarPath.GetNearest*
  commentId: Overload:Global.AstarPath.GetNearest
  name: GetNearest
  nameWithType: AstarPath.GetNearest
  fullName: AstarPath.GetNearest
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: Pathfinding.NNInfo
  commentId: T:Pathfinding.NNInfo
  parent: Pathfinding
  name: NNInfo
  nameWithType: NNInfo
  fullName: Pathfinding.NNInfo
- uid: Pathfinding.NNConstraint
  commentId: T:Pathfinding.NNConstraint
  parent: Pathfinding
  name: NNConstraint
  nameWithType: NNConstraint
  fullName: Pathfinding.NNConstraint
- uid: UnityEngine.Ray
  commentId: T:UnityEngine.Ray
  parent: UnityEngine
  isExternal: true
  name: Ray
  nameWithType: Ray
  fullName: UnityEngine.Ray
