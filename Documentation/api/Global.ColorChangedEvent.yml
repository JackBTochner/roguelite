### YamlMime:ManagedReference
items:
- uid: Global.ColorChangedEvent
  commentId: T:Global.ColorChangedEvent
  id: ColorChangedEvent
  parent: Global
  children: []
  langs:
  - csharp
  - vb
  name: ColorChangedEvent
  nameWithType: ColorChangedEvent
  fullName: ColorChangedEvent
  type: Class
  source:
    remote:
      path: Assets/Plugins/UI/Controls/ColorPicker/Events/ColorChangedEvent.cs
      branch: main
      repo: https://pmuenjohn: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@github.com/pmuenjohn/roguelite.git
    id: ColorChangedEvent
    path: ../Assets/Plugins/UI/Controls/ColorPicker/Events/ColorChangedEvent.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class ColorChangedEvent : UnityEvent<Color>
    content.vb: >-
      <Serializable>

      Public Class ColorChangedEvent Inherits UnityEvent(Of Color)
  inheritance:
  - System.Object
  - UnityEngine.Events.UnityEventBase
  - UnityEngine.Events.UnityEvent{UnityEngine.Color}
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Events.UnityEventBase
  commentId: T:UnityEngine.Events.UnityEventBase
  parent: UnityEngine.Events
  isExternal: true
  name: UnityEventBase
  nameWithType: UnityEventBase
  fullName: UnityEngine.Events.UnityEventBase
- uid: UnityEngine.Events.UnityEvent{UnityEngine.Color}
  commentId: T:UnityEngine.Events.UnityEvent{UnityEngine.Color}
  parent: UnityEngine.Events
  definition: UnityEngine.Events.UnityEvent`1
  name: UnityEvent<Color>
  nameWithType: UnityEvent<Color>
  fullName: UnityEngine.Events.UnityEvent<UnityEngine.Color>
  nameWithType.vb: UnityEvent(Of Color)
  fullName.vb: UnityEngine.Events.UnityEvent(Of UnityEngine.Color)
  name.vb: UnityEvent(Of Color)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: <
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Events
  commentId: N:UnityEngine.Events
  isExternal: true
  name: UnityEngine.Events
  nameWithType: UnityEngine.Events
  fullName: UnityEngine.Events
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Events
    name: Events
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Events
    name: Events
    isExternal: true
- uid: UnityEngine.Events.UnityEvent`1
  commentId: T:UnityEngine.Events.UnityEvent`1
  isExternal: true
  name: UnityEvent<T0>
  nameWithType: UnityEvent<T0>
  fullName: UnityEngine.Events.UnityEvent<T0>
  nameWithType.vb: UnityEvent(Of T0)
  fullName.vb: UnityEngine.Events.UnityEvent(Of T0)
  name.vb: UnityEvent(Of T0)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: <
  - name: T0
  - name: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: )
