{
  "api/Global.Actor.html": {
    "href": "api/Global.Actor.html",
    "title": "Class Actor | Roguelite documentation",
    "keywords": "Class Actor Inheritance object Object Component Behaviour MonoBehaviour Actor Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class Actor : MonoBehaviour Fields | Improve this Doc View Source Instance Declaration public static Actor Instance Field Value Type Description Actor | Improve this Doc View Source staticUnique Declaration public bool staticUnique Field Value Type Description bool"
  },
  "api/Global.AstarPath.AstarDistribution.html": {
    "href": "api/Global.AstarPath.AstarDistribution.html",
    "title": "Enum AstarPath.AstarDistribution | Roguelite documentation",
    "keywords": "Enum AstarPath.AstarDistribution Information about where the package was downloaded Namespace : Global Assembly : AstarPathfindingProject.dll Syntax public enum AstarPath.AstarDistribution Fields Name Description AssetStore PackageManager WebsiteDownload"
  },
  "api/Global.AstarPath.html": {
    "href": "api/Global.AstarPath.html",
    "title": "Class AstarPath | Roguelite documentation",
    "keywords": "Class AstarPath Inheritance object Object Component Behaviour MonoBehaviour Pathfinding.VersionedMonoBehaviour AstarPath Namespace : Global Assembly : AstarPathfindingProject.dll Syntax [ExecuteInEditMode] [AddComponentMenu(\"Pathfinding/Pathfinder\")] [HelpURL(\"http://arongranberg.com/astar/docs/class_astar_path.php\")] public class AstarPath : VersionedMonoBehaviour Fields | Improve this Doc View Source active Returns the active AstarPath object in the scene. Note: This is only set if the AstarPath object has been initialized (which happens in Awake). Declaration public static AstarPath active Field Value Type Description AstarPath | Improve this Doc View Source batchGraphUpdates Throttle graph updates and batch them to improve performance. If toggled, graph updates will batched and executed less often (specified by AstarPath.graphUpdateBatchingInterval . This can have a positive impact on pathfinding throughput since the pathfinding threads do not need to be stopped as often, and it reduces the overhead per graph update. All graph updates are still applied however, they are just batched together so that more of them are applied at the same time. However do not use this if you want minimal latency between a graph update being requested and it being applied. This only applies to graph updates requested using the AstarPath.UpdateGraphs(UnityEngine.Bounds,System.Single) method. Not those requested using AstarPath.RegisterSafeUpdate(System.Action) or AstarPath.AddWorkItem(System.Action) . If you want to apply graph updates immediately at some point, you can call AstarPath.FlushGraphUpdates . See: graph-updates (view in online documentation for working links) Declaration public bool batchGraphUpdates Field Value Type Description bool | Improve this Doc View Source Branch Which branch of the A* %Pathfinding Project is this release. Used when checking for updates so that users of the development versions can get notifications of development updates. Declaration public static readonly string Branch Field Value Type Description string | Improve this Doc View Source colorSettings Reference to the color settings for this AstarPath object. Color settings include for example which color the nodes should be in, in the sceneview. Declaration public AstarColor colorSettings Field Value Type Description Pathfinding.AstarColor | Improve this Doc View Source data Holds all graph data Declaration [FormerlySerializedAs(\"astarData\")] public AstarData data Field Value Type Description Pathfinding.AstarData | Improve this Doc View Source debugFloor Low value to use for certain AstarPath.debugMode modes. For example if AstarPath.debugMode is set to G, this value will determine when the node will be completely red. Note: Only relevant in the editor See: AstarPath.debugRoof See: AstarPath.debugMode Declaration public float debugFloor Field Value Type Description float | Improve this Doc View Source debugMode The mode to use for drawing nodes in the sceneview. Note: Only relevant in the editor See: Pathfinding.GraphDebugMode Declaration public GraphDebugMode debugMode Field Value Type Description Pathfinding.GraphDebugMode | Improve this Doc View Source debugPathData The path to debug using gizmos. This is the path handler used to calculate the last path. It is used in the editor to draw debug information using gizmos. Declaration [NonSerialized] public PathHandler debugPathData Field Value Type Description Pathfinding.PathHandler | Improve this Doc View Source debugPathID The path ID to debug using gizmos Declaration [NonSerialized] public ushort debugPathID Field Value Type Description ushort | Improve this Doc View Source debugRoof High value to use for certain AstarPath.debugMode modes. For example if AstarPath.debugMode is set to G, this value will determine when the node will be completely green. For the penalty debug mode, the nodes will be colored green when they have a penalty less than AstarPath.debugFloor and red when their penalty is greater or equal to this value and something between red and green otherwise. Note: Only relevant in the editor See: AstarPath.debugFloor See: AstarPath.debugMode Declaration public float debugRoof Field Value Type Description float | Improve this Doc View Source Distribution Used by the editor to guide the user to the correct place to download updates Declaration public static readonly AstarPath.AstarDistribution Distribution Field Value Type Description AstarPath AstarDistribution | Improve this Doc View Source euclideanEmbedding Holds settings for heuristic optimization. See: heuristic-opt (view in online documentation for working links) Declaration public EuclideanEmbedding euclideanEmbedding Field Value Type Description Pathfinding.EuclideanEmbedding | Improve this Doc View Source fullGetNearestSearch Do a full GetNearest search for all graphs. Additional searches will normally only be done on the graph which in the first fast search seemed to have the closest node. With this setting on, additional searches will be done on all graphs since the first check is not always completely accurate.\\n More technically: GetNearestForce on all graphs will be called if true, otherwise only on the one graph which's GetNearest search returned the best node.\\n Usually faster when disabled, but higher quality searches when enabled. When using a a navmesh or recast graph, for best quality, this setting should be combined with the Pathfinding.NavMeshGraph.accurateNearestNode setting set to true. Note: For the PointGraph this setting doesn't matter much as it has only one search mode. Declaration public bool fullGetNearestSearch Field Value Type Description bool | Improve this Doc View Source graphUpdateBatchingInterval Minimum number of seconds between each batch of graph updates. If AstarPath.batchGraphUpdates is true, this defines the minimum number of seconds between each batch of graph updates. This can have a positive impact on pathfinding throughput since the pathfinding threads do not need to be stopped as often, and it reduces the overhead per graph update. All graph updates are still applied however, they are just batched together so that more of them are applied at the same time. Do not use this if you want minimal latency between a graph update being requested and it being applied. This only applies to graph updates requested using the AstarPath.UpdateGraphs(UnityEngine.Bounds,System.Single) method. Not those requested using AstarPath.RegisterSafeUpdate(System.Action) or AstarPath.AddWorkItem(System.Action) . See: graph-updates (view in online documentation for working links) Declaration public float graphUpdateBatchingInterval Field Value Type Description float | Improve this Doc View Source heuristic The distance function to use as a heuristic. The heuristic, often referred to as just 'H' is the estimated cost from a node to the target. Different heuristics affect how the path picks which one to follow from multiple possible with the same length See: Pathfinding.Heuristic for more details and descriptions of the different modes. See: Wikipedia: Admissible heuristic See: Wikipedia: A* search algorithm See: Wikipedia: Dijkstra's Algorithm Declaration public Heuristic heuristic Field Value Type Description Pathfinding.Heuristic | Improve this Doc View Source heuristicScale The scale of the heuristic. If a value lower than 1 is used, the pathfinder will search more nodes (slower). If 0 is used, the pathfinding algorithm will be reduced to dijkstra's algorithm. This is equivalent to setting AstarPath.heuristic to None. If a value larger than 1 is used the pathfinding will (usually) be faster because it expands fewer nodes, but the paths may no longer be the optimal (i.e the shortest possible paths). Usually you should leave this to the default value of 1. See: https://en.wikipedia.org/wiki/Admissible_heuristic See: https://en.wikipedia.org/wiki/A*_search_algorithm See: https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm Declaration public float heuristicScale Field Value Type Description float | Improve this Doc View Source logPathResults The amount of debugging messages. Use less debugging to improve performance (a bit) or just to get rid of the Console spamming. Use more debugging (heavy) if you want more information about what the pathfinding scripts are doing. The InGame option will display the latest path log using in-game GUI. [Open online documentation to see images] Declaration public PathLog logPathResults Field Value Type Description Pathfinding.PathLog | Improve this Doc View Source manualDebugFloorRoof If set, the AstarPath.debugFloor and AstarPath.debugRoof values will not be automatically recalculated. Note: Only relevant in the editor Declaration public bool manualDebugFloorRoof Field Value Type Description bool | Improve this Doc View Source maxFrameTime Max number of milliseconds to spend each frame for pathfinding. At least 500 nodes will be searched each frame (if there are that many to search). When using multithreading this value is irrelevant. Declaration public float maxFrameTime Field Value Type Description float | Improve this Doc View Source maxNearestNodeDistance @name Inspector - Settings @{ Declaration public float maxNearestNodeDistance Field Value Type Description float | Improve this Doc View Source navmeshUpdates Handles navmesh cuts. See: Declaration public readonly NavmeshUpdates navmeshUpdates Field Value Type Description Pathfinding.NavmeshUpdates | Improve this Doc View Source On65KOverflow Called when pathID overflows 65536 and resets back to zero. Note: This callback will be cleared every time it is called, so if you want to register to it repeatedly, register to it directly on receiving the callback as well. Declaration public static Action On65KOverflow Field Value Type Description Action | Improve this Doc View Source OnAwakeSettings Declaration public static Action OnAwakeSettings Field Value Type Description Action | Improve this Doc View Source OnGraphPostScan Called for each graph after they have been scanned. All other graphs might not have been scanned yet. Declaration public static OnGraphDelegate OnGraphPostScan Field Value Type Description Pathfinding.OnGraphDelegate | Improve this Doc View Source OnGraphPreScan Called for each graph before they are scanned Declaration public static OnGraphDelegate OnGraphPreScan Field Value Type Description Pathfinding.OnGraphDelegate | Improve this Doc View Source OnGraphsUpdated Called when any graphs are updated. Register to for example recalculate the path whenever a graph changes. Declaration public static OnScanDelegate OnGraphsUpdated Field Value Type Description Pathfinding.OnScanDelegate | Improve this Doc View Source OnGraphsWillBeUpdated Deprecated: Declaration [Obsolete] public Action OnGraphsWillBeUpdated Field Value Type Description Action | Improve this Doc View Source OnGraphsWillBeUpdated2 Deprecated: Declaration [Obsolete] public Action OnGraphsWillBeUpdated2 Field Value Type Description Action | Improve this Doc View Source OnLatePostScan Called after scanning has completed fully. This is called as the last thing in the Scan function. Declaration public static OnScanDelegate OnLatePostScan Field Value Type Description Pathfinding.OnScanDelegate | Improve this Doc View Source OnPathPostSearch Called for each path after searching. Be careful when using multithreading since this will be called from a different thread. Declaration public static OnPathDelegate OnPathPostSearch Field Value Type Description Pathfinding.OnPathDelegate | Improve this Doc View Source OnPathPreSearch Called for each path before searching. Be careful when using multithreading since this will be called from a different thread. Declaration public static OnPathDelegate OnPathPreSearch Field Value Type Description Pathfinding.OnPathDelegate | Improve this Doc View Source OnPostScan Called after scanning. This is called before applying links, flood-filling the graphs and other post processing. Declaration public static OnScanDelegate OnPostScan Field Value Type Description Pathfinding.OnScanDelegate | Improve this Doc View Source OnPreScan Called before starting the scanning Declaration public static OnScanDelegate OnPreScan Field Value Type Description Pathfinding.OnScanDelegate | Improve this Doc View Source prioritizeGraphs Prioritize graphs. Graphs will be prioritized based on their order in the inspector. The first graph which has a node closer than AstarPath.prioritizeGraphsLimit will be chosen instead of searching all graphs. Declaration public bool prioritizeGraphs Field Value Type Description bool | Improve this Doc View Source prioritizeGraphsLimit Distance limit for AstarPath.prioritizeGraphs . See: AstarPath.prioritizeGraphs Declaration public float prioritizeGraphsLimit Field Value Type Description float | Improve this Doc View Source scanOnStartup If true, all graphs will be scanned during Awake. This does not include loading from the cache. If you disable this, you will have to call \\link Scan AstarPath.active.Scan() \\endlink yourself to enable pathfinding. Alternatively you could load a saved graph from a file. See: AstarPath.Scan(Pathfinding.NavGraph) See: AstarPath.ScanAsync(Pathfinding.NavGraph) Declaration public bool scanOnStartup Field Value Type Description bool | Improve this Doc View Source showGraphs Shows or hides graph inspectors. Used internally by the editor Declaration public bool showGraphs Field Value Type Description bool | Improve this Doc View Source showNavGraphs @name Inspector - Debug @{ Declaration public bool showNavGraphs Field Value Type Description bool | Improve this Doc View Source showSearchTree If enabled, nodes will draw a line to their 'parent'. This will show the search tree for the latest path. Note: Only relevant in the editor TODO: Add a showOnlyLastPath flag to indicate whether to draw every node or only the ones visited by the latest path. Declaration public bool showSearchTree Field Value Type Description bool | Improve this Doc View Source showUnwalkableNodes Toggle to show unwalkable nodes. Note: Only relevant in the editor See: AstarPath.unwalkableNodeDebugSize Declaration public bool showUnwalkableNodes Field Value Type Description bool | Improve this Doc View Source tagNames Stored tag names. See: AstarPath.FindTagNames See: AstarPath.GetTagNames Declaration [SerializeField] protected string[] tagNames Field Value Type Description string | Improve this Doc View Source threadCount Number of pathfinding threads to use. Multithreading puts pathfinding in another thread, this is great for performance on 2+ core computers since the framerate will barely be affected by the pathfinding at all. None indicates that the pathfinding is run in the Unity thread as a coroutine Automatic will try to adjust the number of threads to the number of cores and memory on the computer. Less than 512mb of memory or a single core computer will make it revert to using no multithreading. It is recommended that you use one of the \"Auto\" settings that are available. The reason is that even if your computer might be beefy and have 8 cores. Other computers might only be quad core or dual core in which case they will not benefit from more than 1 or 3 threads respectively (you usually want to leave one core for the unity thread). If you use more threads than the number of cores on the computer it is mostly just wasting memory, it will not run any faster. The extra memory usage is not trivially small. Each thread needs to keep a small amount of data for each node in all the graphs. It is not the full graph data but it is proportional to the number of nodes. The automatic settings will inspect the machine it is running on and use that to determine the number of threads so that no memory is wasted. The exception is if you only have one (or maybe two characters) active at time. Then you should probably just go with one thread always since it is very unlikely that you will need the extra throughput given by more threads. Keep in mind that more threads primarily increases throughput by calculating different paths on different threads, it will not calculate individual paths any faster. Note that if you are modifying the pathfinding core scripts or if you are directly modifying graph data without using any of the safe wrappers (like AstarPath.AddWorkItem(System.Action) multithreading can cause strange errors and pathfinding stopping to work if you are not careful. For basic usage (not modding the pathfinding core) it should be safe. Note: WebGL does not support threads at all (since javascript is single-threaded) so no threads will be used on that platform. See: CalculateThreadCount Declaration public ThreadCount threadCount Field Value Type Description Pathfinding.ThreadCount | Improve this Doc View Source unwalkableNodeDebugSize Size of the red cubes shown in place of unwalkable nodes. Note: Only relevant in the editor. Does not apply to grid graphs. See: AstarPath.showUnwalkableNodes Declaration public float unwalkableNodeDebugSize Field Value Type Description float | Improve this Doc View Source Version The version number for the A* %Pathfinding Project Declaration public static readonly Version Version Field Value Type Description Version Properties | Improve this Doc View Source astarData Holds all graph data. Deprecated: The 'astarData' field has been renamed to 'data' Declaration [Obsolete(\"The 'astarData' field has been renamed to 'data'\")] public AstarData astarData { get; } Property Value Type Description Pathfinding.AstarData | Improve this Doc View Source graphs Shortcut to Pathfinding.AstarData.graphs Declaration public NavGraph[] graphs { get; } Property Value Type Description Pathfinding.NavGraph | Improve this Doc View Source graphTypes See Pathfinding.AstarData Deprecated: Declaration [Obsolete] public Type[] graphTypes { get; } Property Value Type Description Type | Improve this Doc View Source IsAnyGraphUpdateInProgress Returns if any graph updates are being calculated right now. Note: This does not includes other types of work items such as navmesh cutting or anything added by AstarPath.RegisterSafeUpdate(System.Action) or AstarPath.AddWorkItem(System.Action) . See: IsAnyWorkItemInProgress Declaration public bool IsAnyGraphUpdateInProgress { get; } Property Value Type Description bool | Improve this Doc View Source IsAnyGraphUpdateQueued Returns if any graph updates are waiting to be applied. Note: This is false while the updates are being performed. Note: This does not includes other types of work items such as navmesh cutting or anything added by AstarPath.RegisterSafeUpdate(System.Action) or AstarPath.AddWorkItem(System.Action) . Declaration public bool IsAnyGraphUpdateQueued { get; } Property Value Type Description bool | Improve this Doc View Source IsAnyGraphUpdatesQueued Returns if any graph updates are waiting to be applied. Deprecated: Use IsAnyGraphUpdateQueued instead Declaration [Obsolete(\"Fixed grammar, use IsAnyGraphUpdateQueued instead\")] public bool IsAnyGraphUpdatesQueued { get; } Property Value Type Description bool | Improve this Doc View Source IsAnyWorkItemInProgress Returns if any work items are in progress right now. Note: This includes pretty much all types of graph updates. Such as normal graph updates, navmesh cutting and anything added by AstarPath.RegisterSafeUpdate(System.Action) or AstarPath.AddWorkItem(System.Action) . Declaration public bool IsAnyWorkItemInProgress { get; } Property Value Type Description bool | Improve this Doc View Source isScanning Set while any graphs are being scanned. It will be true up until the FloodFill is done. Note: Not to be confused with graph updates. Used to better support Graph Update Objects called for example in OnPostScan See: IsAnyGraphUpdateQueued See: IsAnyGraphUpdateInProgress Declaration public bool isScanning { get; } Property Value Type Description bool | Improve this Doc View Source IsUsingMultithreading Returns whether or not multithreading is used. \\exception System.Exception Is thrown when it could not be decided if multithreading was used or not. This should not happen if pathfinding is set up correctly. Note: This uses info about if threads are running right now, it does not use info from the settings on the A* object. Declaration public bool IsUsingMultithreading { get; } Property Value Type Description bool | Improve this Doc View Source lastScanTime The time it took for the last call to Scan() to complete. Used to prevent automatically rescanning the graphs too often (editor only) Declaration public float lastScanTime { get; } Property Value Type Description float | Improve this Doc View Source limitGraphUpdates Batch graph updates. Deprecated: This field has been renamed to AstarPath.batchGraphUpdates . Declaration [Obsolete(\"This field has been renamed to 'batchGraphUpdates'\")] public bool limitGraphUpdates { get; set; } Property Value Type Description bool | Improve this Doc View Source maxGraphUpdateFreq Limit for how often should graphs be updated. Deprecated: This field has been renamed to AstarPath.graphUpdateBatchingInterval . Declaration [Obsolete(\"This field has been renamed to 'graphUpdateBatchingInterval'\")] public float maxGraphUpdateFreq { get; set; } Property Value Type Description float | Improve this Doc View Source maxNearestNodeDistanceSqr Max Nearest Node Distance Squared. See: AstarPath.maxNearestNodeDistance Declaration public float maxNearestNodeDistanceSqr { get; } Property Value Type Description float | Improve this Doc View Source NumParallelThreads Number of parallel pathfinders. Returns the number of concurrent processes which can calculate paths at once. When using multithreading, this will be the number of threads, if not using multithreading it is always 1 (since only 1 coroutine is used). See: IsUsingMultithreading Declaration public int NumParallelThreads { get; } Property Value Type Description int Methods | Improve this Doc View Source AddWorkItem(AstarWorkItem) Add a work item to be processed when pathfinding is paused. The work item will be executed when it is safe to update nodes. This is defined as between the path searches. When using more threads than one, calling this often might decrease pathfinding performance due to a lot of idling in the threads. Not performance as in it will use much CPU power, but performance as in the number of paths per second will probably go down (though your framerate might actually increase a tiny bit). You should only call this function from the main unity thread (i.e normal game code). AstarPath.active.AddWorkItem(new AstarWorkItem(() => { // Safe to update graphs here var node = AstarPath.active.GetNearest(transform.position).node; node.Walkable = false; })); AstarPath.active.AddWorkItem(() => { // Safe to update graphs here var node = AstarPath.active.GetNearest(transform.position).node; node.position = (Int3)transform.position; }); See: AstarPath.FlushWorkItems Declaration public void AddWorkItem(AstarWorkItem item) Parameters Type Name Description Pathfinding.AstarWorkItem item | Improve this Doc View Source AddWorkItem(Action) Add a work item to be processed when pathfinding is paused. Convenience method that is equivalent to AddWorkItem(new AstarWorkItem(callback)); See: AstarPath.AddWorkItem(Pathfinding.AstarWorkItem) Declaration public void AddWorkItem(Action callback) Parameters Type Name Description Action callback | Improve this Doc View Source AddWorkItem(Action<IWorkItemContext>) Add a work item to be processed when pathfinding is paused. Convenience method that is equivalent to AddWorkItem(new AstarWorkItem(callback)); See: AstarPath.AddWorkItem(Pathfinding.AstarWorkItem) Declaration public void AddWorkItem(Action<IWorkItemContext> callback) Parameters Type Name Description Action Pathfinding.IWorkItemContext callback | Improve this Doc View Source Awake() Sets up all needed variables and scans the graphs. Calls Initialize, starts the ReturnPaths coroutine and scans all graphs. Also starts threads if using multithreading See: AstarPath.OnAwakeSettings Declaration protected override void Awake() Overrides Pathfinding.VersionedMonoBehaviour.Awake() | Improve this Doc View Source BlockUntilCalculated(Path) Blocks until the path has been calculated. Normally it takes a few frames for a path to be calculated and returned. This function will ensure that the path will be calculated when this function returns and that the callback for that path has been called. If requesting a lot of paths in one go and waiting for the last one to complete, it will calculate most of the paths in the queue (only most if using multithreading, all if not using multithreading). Use this function only if you really need to. There is a point to spreading path calculations out over several frames. It smoothes out the framerate and makes sure requesting a large number of paths at the same time does not cause lag. Note: Graph updates and other callbacks might get called during the execution of this function. When the pathfinder is shutting down. I.e in OnDestroy, this function will not do anything. \\throws Exception if pathfinding is not initialized properly for this scene (most likely no AstarPath object exists) or if the path has not been started yet. Also throws an exception if critical errors occur such as when the pathfinding threads have crashed (which should not happen in normal cases). This prevents an infinite loop while waiting for the path. See: Pathfinding.Path.WaitForPath See: Pathfinding.Path.BlockUntilCalculated Declaration public static void BlockUntilCalculated(Path path) Parameters Type Name Description Pathfinding.Path path The path to wait for. The path must be started, otherwise an exception will be thrown. | Improve this Doc View Source BlockUntilPathQueueBlocked() Blocks until all pathfinding threads are paused and blocked. Deprecated: Use AstarPath.PausePathfinding instead. Make sure to call Release on the returned lock. Declaration [Obsolete(\"Use PausePathfinding instead. Make sure to call Release on the returned lock.\", true)] public void BlockUntilPathQueueBlocked() | Improve this Doc View Source CalculateThreadCount(ThreadCount) Declaration public static int CalculateThreadCount(ThreadCount count) Parameters Type Name Description Pathfinding.ThreadCount count Returns Type Description int | Improve this Doc View Source ConfigureReferencesInternal() \\cond internal Declaration public void ConfigureReferencesInternal() | Improve this Doc View Source EnsureValidFloodFill() If a WorkItem needs to have a valid flood fill during execution, call this method to ensure there are no pending flood fills. Deprecated: This method has been moved. Use the method on the context object that can be sent with work item delegates instead AstarPath.active.AddWorkItem(new AstarWorkItem(() => { // Safe to update graphs here var node = AstarPath.active.GetNearest(transform.position).node; node.Walkable = false; })); See: Pathfinding.IWorkItemContext Declaration [Obsolete(\"This method has been moved. Use the method on the context object that can be sent with work item delegates instead\")] public void EnsureValidFloodFill() | Improve this Doc View Source FindAstarPath() Used outside of play mode to initialize the AstarPath object even if it has not been selected in the inspector yet. This will set the AstarPath.active property and deserialize all graphs. This is useful if you want to do changes to the graphs in the editor outside of play mode, but cannot be sure that the graphs have been deserialized yet. In play mode this method does nothing. Declaration public static void FindAstarPath() | Improve this Doc View Source FindTagNames() Tries to find an AstarPath object and return tag names. If an AstarPath object cannot be found, it returns an array of length 1 with an error message. See: AstarPath.GetTagNames Declaration public static string[] FindTagNames() Returns Type Description string | Improve this Doc View Source FloodFill() Floodfills all graphs and updates areas for every node. The different colored areas that you see in the scene view when looking at graphs are called just 'areas', this method calculates which nodes are in what areas. See: Pathfinding.Node.area Deprecated: Avoid using. This will force a full recalculation of the connected components. In most cases the HierarchicalGraph class takes care of things automatically behind the scenes now. Declaration [ContextMenu(\"Flood Fill Graphs\")] [Obsolete(\"Avoid using. This will force a full recalculation of the connected components. In most cases the HierarchicalGraph class takes care of things automatically behind the scenes now.\")] public void FloodFill() | Improve this Doc View Source FloodFill(GraphNode, uint) Floodfills starting from 'seed' using the specified area. Deprecated: Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes Declaration [Obsolete(\"Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes\")] public void FloodFill(GraphNode seed, uint area) Parameters Type Name Description Pathfinding.GraphNode seed uint area | Improve this Doc View Source FloodFill(GraphNode) Floodfills starting from the specified node. Deprecated: Deprecated: Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes Declaration [Obsolete(\"Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes\")] public void FloodFill(GraphNode seed) Parameters Type Name Description Pathfinding.GraphNode seed | Improve this Doc View Source FlushGraphUpdates() Forces graph updates to complete in a single frame. This will force the pathfinding threads to finish calculating the path they are currently calculating (if any) and then pause. When all threads have paused, graph updates will be performed. Warning: Using this very often (many times per second) can reduce your fps due to a lot of threads waiting for one another. But you probably wont have to worry about that. Note: This is almost identical to AstarPath.FlushWorkItems , but added for more descriptive name. This function will also override any time limit delays for graph updates. This is because graph updates are implemented using work items. So calling this function will also execute any other work items (if any are queued). Will not do anything if there are no graph updates queued (not even execute other work items). Declaration public void FlushGraphUpdates() | Improve this Doc View Source FlushThreadSafeCallbacks() Forces thread safe callbacks to run. Deprecated: Use AstarPath.FlushWorkItems instead Declaration [Obsolete(\"Use FlushWorkItems instead\")] public void FlushThreadSafeCallbacks() | Improve this Doc View Source FlushWorkItems() Forces work items to complete in a single frame. This will force all work items to run immidiately. This will force the pathfinding threads to finish calculating the path they are currently calculating (if any) and then pause. When all threads have paused, work items will be executed (which can be e.g graph updates). Warning: Using this very often (many times per second) can reduce your fps due to a lot of threads waiting for one another. But you probably wont have to worry about that Note: This is almost (note almost) identical to AstarPath.FlushGraphUpdates , but added for more descriptive name. Will not do anything if there are no queued work items waiting to run. Declaration public void FlushWorkItems() | Improve this Doc View Source FlushWorkItems(bool, bool) Make sure work items are executed. See: AddWorkItem Deprecated: Use AstarPath.FlushWorkItems instead. Declaration [Obsolete(\"Use FlushWorkItems() instead\")] public void FlushWorkItems(bool unblockOnComplete, bool block) Parameters Type Name Description bool unblockOnComplete If true, pathfinding will be allowed to start running immediately after completing all work items. bool block If true, work items that usually take more than one frame to complete will be forced to complete during this call. If false, then after this call there might still be work left to do. | Improve this Doc View Source GetNearest(Ray) Returns the node closest to the ray (slow). Warning: This function is brute-force and very slow, use with caution Declaration public GraphNode GetNearest(Ray ray) Parameters Type Name Description Ray ray Returns Type Description Pathfinding.GraphNode | Improve this Doc View Source GetNearest(Vector3, NNConstraint, GraphNode) Returns the nearest node to a position using the specified NNConstraint. Searches through all graphs for their nearest nodes to the specified position and picks the closest one. The NNConstraint can be used to specify constraints on which nodes can be chosen such as only picking walkable nodes. See: Pathfinding.NNConstraint Declaration public NNInfo GetNearest(Vector3 position, NNConstraint constraint, GraphNode hint) Parameters Type Name Description Vector3 position Pathfinding.NNConstraint constraint Pathfinding.GraphNode hint Returns Type Description Pathfinding.NNInfo | Improve this Doc View Source GetNearest(Vector3, NNConstraint) Declaration public NNInfo GetNearest(Vector3 position, NNConstraint constraint) Parameters Type Name Description Vector3 position Pathfinding.NNConstraint constraint Returns Type Description Pathfinding.NNInfo | Improve this Doc View Source GetNearest(Vector3) Returns the nearest node to a position using the specified NNConstraint. Searches through all graphs for their nearest nodes to the specified position and picks the closest one.\\n Using the NNConstraint.None constraint. // Find the closest node to this GameObject's position GraphNode node = AstarPath.active.GetNearest(transform.position).node; if (node.Walkable) { // Yay, the node is walkable, we can place a tower here or something } See: Pathfinding.NNConstraint Declaration public NNInfo GetNearest(Vector3 position) Parameters Type Name Description Vector3 position Returns Type Description Pathfinding.NNInfo | Improve this Doc View Source GetTagNames() Returns tag names. Makes sure that the tag names array is not null and of length 32. If it is null or not of length 32, it creates a new array and fills it with 0,1,2,3,4 etc... See: AstarPath.FindTagNames Declaration public string[] GetTagNames() Returns Type Description string | Improve this Doc View Source PausePathfinding() Blocks until all pathfinding threads are paused and blocked. var graphLock = AstarPath.active.PausePathfinding(); // Here we can modify the graphs safely. For example by adding a new node to a point graph var node = AstarPath.active.data.pointGraph.AddNode((Int3) new Vector3(3, 1, 4)); // Allow pathfinding to resume graphLock.Release(); Returns: A lock object. You need to call Pathfinding.PathProcessor.GraphUpdateLock.Release on that object to allow pathfinding to resume. Note: In most cases this should not be called from user code. Use the AstarPath.AddWorkItem(System.Action) method instead. See: AstarPath.AddWorkItem(System.Action) Declaration public PathProcessor.GraphUpdateLock PausePathfinding() Returns Type Description Pathfinding.PathProcessor Pathfinding.PathProcessor.GraphUpdateLock | Improve this Doc View Source QueueGraphUpdates() Will apply queued graph updates as soon as possible, regardless of AstarPath.batchGraphUpdates . Calling this multiple times will not create multiple callbacks. This function is useful if you are limiting graph updates, but you want a specific graph update to be applied as soon as possible regardless of the time limit. Note that this does not block until the updates are done, it merely bypasses the AstarPath.batchGraphUpdates time limit. See: AstarPath.FlushGraphUpdates Declaration public void QueueGraphUpdates() | Improve this Doc View Source QueueWorkItemFloodFill() Call during work items to queue a flood fill. Deprecated: This method has been moved. Use the method on the context object that can be sent with work item delegates instead AstarPath.active.AddWorkItem(new AstarWorkItem(() => { // Safe to update graphs here var node = AstarPath.active.GetNearest(transform.position).node; node.Walkable = false; })); See: Pathfinding.IWorkItemContext Declaration [Obsolete(\"This method has been moved. Use the method on the context object that can be sent with work item delegates instead\")] public void QueueWorkItemFloodFill() | Improve this Doc View Source RegisterSafeUpdate(Action) Will send a callback when it is safe to update nodes. This is defined as between the path searches. This callback will only be sent once and is nulled directly after the callback has been sent. When using more threads than one, calling this often might decrease pathfinding performance due to a lot of idling in the threads. Not performance as in it will use much CPU power, but performance as in the number of paths per second will probably go down (though your framerate might actually increase a tiny bit) You should only call this function from the main unity thread (i.e normal game code). Version: Since version 4.0 this is equivalent to AddWorkItem(new AstarWorkItem(callback)). Previously the callbacks added using this method would not be ordered with respect to other work items, so they could be executed before other work items or after them. Deprecated: Use AstarPath.AddWorkItem(System.Action) instead. Note the slight change in behavior (mentioned above). Declaration [Obsolete(\"Use AddWorkItem(System.Action) instead. Note the slight change in behavior (mentioned in the documentation).\")] public static void RegisterSafeUpdate(Action callback) Parameters Type Name Description Action callback | Improve this Doc View Source Scan(NavGraph) Scans a particular graph. Calling this method will recalculate the specified graph. This method is pretty slow (depending on graph type and graph complexity of course), so it is advisable to use smaller graph updates whenever possible. // Recalculate all graphs AstarPath.active.Scan(); // Recalculate only the first grid graph var graphToScan = AstarPath.active.data.gridGraph; AstarPath.active.Scan(graphToScan); // Recalculate only the first and third graphs var graphsToScan = new [] { AstarPath.active.data.graphs[0], AstarPath.active.data.graphs[2] }; AstarPath.active.Scan(graphsToScan); See: graph-updates (view in online documentation for working links) See: ScanAsync Declaration public void Scan(NavGraph graphToScan) Parameters Type Name Description Pathfinding.NavGraph graphToScan | Improve this Doc View Source Scan(NavGraph[]) Scans all specified graphs. Calling this method will recalculate all specified graphs or all graphs if the graphsToScan parameter is null. This method is pretty slow (depending on graph type and graph complexity of course), so it is advisable to use smaller graph updates whenever possible. // Recalculate all graphs AstarPath.active.Scan(); // Recalculate only the first grid graph var graphToScan = AstarPath.active.data.gridGraph; AstarPath.active.Scan(graphToScan); // Recalculate only the first and third graphs var graphsToScan = new [] { AstarPath.active.data.graphs[0], AstarPath.active.data.graphs[2] }; AstarPath.active.Scan(graphsToScan); See: graph-updates (view in online documentation for working links) See: ScanAsync Declaration public void Scan(NavGraph[] graphsToScan = null) Parameters Type Name Description Pathfinding.NavGraph graphsToScan The graphs to scan. If this parameter is null then all graphs will be scanned | Improve this Doc View Source ScanAsync(NavGraph) Scans a particular graph asynchronously. This is a IEnumerable, you can loop through it to get the progress foreach (Progress progress in AstarPath.active.ScanAsync()) { Debug.Log(\"Scanning... \" + progress.description + \" - \" + (progress.progress*100).ToString(\"0\") + \"%\"); } You can scan graphs asyncronously by yielding when you loop through the progress. Note that this does not guarantee a good framerate, but it will allow you to at least show a progress bar during scanning. IEnumerator Start () { foreach (Progress progress in AstarPath.active.ScanAsync()) { Debug.Log(\"Scanning... \" + progress.description + \" - \" + (progress.progress*100).ToString(\"0\") + \"%\"); yield return null; } } See: Scan Declaration public IEnumerable<Progress> ScanAsync(NavGraph graphToScan) Parameters Type Name Description Pathfinding.NavGraph graphToScan Returns Type Description IEnumerable Pathfinding.Progress | Improve this Doc View Source ScanAsync(NavGraph[]) Scans all specified graphs asynchronously. This is a IEnumerable, you can loop through it to get the progress foreach (Progress progress in AstarPath.active.ScanAsync()) { Debug.Log(\"Scanning... \" + progress.description + \" - \" + (progress.progress*100).ToString(\"0\") + \"%\"); } You can scan graphs asyncronously by yielding when you loop through the progress. Note that this does not guarantee a good framerate, but it will allow you to at least show a progress bar during scanning. IEnumerator Start () { foreach (Progress progress in AstarPath.active.ScanAsync()) { Debug.Log(\"Scanning... \" + progress.description + \" - \" + (progress.progress*100).ToString(\"0\") + \"%\"); yield return null; } } See: Scan Declaration public IEnumerable<Progress> ScanAsync(NavGraph[] graphsToScan = null) Parameters Type Name Description Pathfinding.NavGraph graphsToScan The graphs to scan. If this parameter is null then all graphs will be scanned Returns Type Description IEnumerable Pathfinding.Progress | Improve this Doc View Source StartPath(Path, bool) Adds the path to a queue so that it will be calculated as soon as possible. The callback specified when constructing the path will be called when the path has been calculated. Usually you should use the Seeker component instead of calling this function directly. Declaration public static void StartPath(Path path, bool pushToFront = false) Parameters Type Name Description Pathfinding.Path path The path that should be enqueued. bool pushToFront If true, the path will be pushed to the front of the queue, bypassing all waiting paths and making it the next path to be calculated. This can be useful if you have a path which you want to prioritize over all others. Be careful to not overuse it though. If too many paths are put in the front of the queue often, this can lead to normal paths having to wait a very long time before being calculated. | Improve this Doc View Source UpdateGraphs(GraphUpdateObject, float) Update all graphs using the GraphUpdateObject after delay seconds. This can be used to, e.g make all nodes in a region unwalkable, or set them to a higher penalty. See: FlushGraphUpdates See: batchGraphUpdates See: graph-updates (view in online documentation for working links) Declaration public void UpdateGraphs(GraphUpdateObject ob, float delay) Parameters Type Name Description Pathfinding.GraphUpdateObject ob float delay | Improve this Doc View Source UpdateGraphs(GraphUpdateObject) Update all graphs using the GraphUpdateObject. This can be used to, e.g make all nodes in a region unwalkable, or set them to a higher penalty. The graphs will be updated as soon as possible (with respect to AstarPath.batchGraphUpdates See: FlushGraphUpdates See: batchGraphUpdates See: graph-updates (view in online documentation for working links) Declaration public void UpdateGraphs(GraphUpdateObject ob) Parameters Type Name Description Pathfinding.GraphUpdateObject ob | Improve this Doc View Source UpdateGraphs(Bounds, float) Update all graphs within bounds after delay seconds. The graphs will be updated as soon as possible. See: FlushGraphUpdates See: batchGraphUpdates See: graph-updates (view in online documentation for working links) Declaration public void UpdateGraphs(Bounds bounds, float delay) Parameters Type Name Description Bounds bounds float delay | Improve this Doc View Source UpdateGraphs(Bounds) Update all graphs within bounds. The graphs will be updated as soon as possible. This is equivalent to UpdateGraphs(new GraphUpdateObject(bounds)); See: FlushGraphUpdates See: batchGraphUpdates See: graph-updates (view in online documentation for working links) Declaration public void UpdateGraphs(Bounds bounds) Parameters Type Name Description Bounds bounds | Improve this Doc View Source WaitForPath(Path) Wait for the specified path to be calculated. Normally it takes a few frames for a path to get calculated and returned. Deprecated: This method has been renamed to AstarPath.BlockUntilCalculated(Pathfinding.Path) . Declaration [Obsolete(\"This method has been renamed to BlockUntilCalculated\")] public static void WaitForPath(Path path) Parameters Type Name Description Pathfinding.Path path"
  },
  "api/Global.AttackObject.html": {
    "href": "api/Global.AttackObject.html",
    "title": "Class AttackObject | Roguelite documentation",
    "keywords": "Class AttackObject Inheritance object Object Component Behaviour MonoBehaviour AttackObject Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class AttackObject : MonoBehaviour Fields | Improve this Doc View Source critChance Declaration public float critChance Field Value Type Description float | Improve this Doc View Source critMarker Declaration public GameObject critMarker Field Value Type Description GameObject | Improve this Doc View Source critMultiplier Declaration public float critMultiplier Field Value Type Description float | Improve this Doc View Source damage Declaration public float damage Field Value Type Description float | Improve this Doc View Source hitMarker Declaration public GameObject hitMarker Field Value Type Description GameObject | Improve this Doc View Source hittable Declaration public Hittable hittable Field Value Type Description Hittable | Improve this Doc View Source ignoreCrit Declaration public bool ignoreCrit Field Value Type Description bool | Improve this Doc View Source knockback Declaration public float knockback Field Value Type Description float | Improve this Doc View Source objectPooler Declaration public ObjectPooler objectPooler Field Value Type Description ObjectPooler | Improve this Doc View Source onlyHitEachObjOnce Declaration public bool onlyHitEachObjOnce Field Value Type Description bool | Improve this Doc View Source playerChar Declaration public PlayerCharacter playerChar Field Value Type Description Player.PlayerCharacter Methods | Improve this Doc View Source Hit(GameObject) Declaration public void Hit(GameObject otherG) Parameters Type Name Description GameObject otherG"
  },
  "api/Global.AttackTemplate.html": {
    "href": "api/Global.AttackTemplate.html",
    "title": "Class AttackTemplate | Roguelite documentation",
    "keywords": "Class AttackTemplate Inheritance object Object Component Behaviour MonoBehaviour AttackTemplate Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class AttackTemplate : MonoBehaviour Fields | Improve this Doc View Source playerAnim Declaration public Animator playerAnim Field Value Type Description Animator"
  },
  "api/Global.BasicEnemy.html": {
    "href": "api/Global.BasicEnemy.html",
    "title": "Class BasicEnemy | Roguelite documentation",
    "keywords": "Class BasicEnemy Inheritance object Object Component Behaviour MonoBehaviour Hittable BasicEnemy Inherited Members Hittable.health Hittable.duration Hittable.intensity Hittable.camShake Hittable.objectPooler Hittable.poisonDamage Hittable.OnHit Hittable.Start() Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class BasicEnemy : Hittable Fields | Improve this Doc View Source AI Declaration public AIDestinationSetter AI Field Value Type Description Pathfinding.AIDestinationSetter | Improve this Doc View Source anim Declaration public Animator anim Field Value Type Description Animator | Improve this Doc View Source detected Declaration public bool detected Field Value Type Description bool | Improve this Doc View Source detectionObstacles Declaration public LayerMask detectionObstacles Field Value Type Description LayerMask | Improve this Doc View Source detectionRange Declaration public float detectionRange Field Value Type Description float | Improve this Doc View Source hitParticle Declaration public GameObject hitParticle Field Value Type Description GameObject | Improve this Doc View Source itemDrops Declaration public GameObject[] itemDrops Field Value Type Description GameObject | Improve this Doc View Source lookAt Declaration public Transform lookAt Field Value Type Description Transform | Improve this Doc View Source OnEnemyDied Declaration public UnityEvent<BasicEnemy> OnEnemyDied Field Value Type Description UnityEvent BasicEnemy | Improve this Doc View Source playerTransformAnchor Declaration public TransformAnchor playerTransformAnchor Field Value Type Description TransformAnchor | Improve this Doc View Source rb Declaration public Rigidbody rb Field Value Type Description Rigidbody Methods | Improve this Doc View Source Die() Declaration public void Die() | Improve this Doc View Source Hit(float, Vector3) Declaration public override void Hit(float knockback, Vector3 direction) Parameters Type Name Description float knockback Vector3 direction Overrides Hittable.Hit(float, Vector3)"
  },
  "api/Global.BoolEventChannelSO.html": {
    "href": "api/Global.BoolEventChannelSO.html",
    "title": "Class BoolEventChannelSO | Roguelite documentation",
    "keywords": "Class BoolEventChannelSO This class is used for Events that have a bool argument. Example: An event to toggle a UI interface Inheritance object Object ScriptableObject SerializableScriptableObject DescriptionBaseSO BoolEventChannelSO Inherited Members DescriptionBaseSO.description SerializableScriptableObject.Guid Namespace : Global Assembly : Assembly-CSharp.dll Syntax [CreateAssetMenu(menuName = \"Events/Bool Event Channel\")] public class BoolEventChannelSO : DescriptionBaseSO Methods | Improve this Doc View Source RaiseEvent(bool) Declaration public void RaiseEvent(bool value) Parameters Type Name Description bool value Events | Improve this Doc View Source OnEventRaised Declaration public event UnityAction<bool> OnEventRaised Event Type Type Description UnityAction bool"
  },
  "api/Global.CameraAnchor.html": {
    "href": "api/Global.CameraAnchor.html",
    "title": "Class CameraAnchor | Roguelite documentation",
    "keywords": "Class CameraAnchor Inheritance object Object ScriptableObject SerializableScriptableObject DescriptionBaseSO RuntimeAnchorBase Camera CameraAnchor Inherited Members RuntimeAnchorBase<Camera>.OnAnchorProvided RuntimeAnchorBase<Camera>.isSet RuntimeAnchorBase<Camera>.Value RuntimeAnchorBase<Camera>.Provide(Camera) RuntimeAnchorBase<Camera>.Unset() DescriptionBaseSO.description SerializableScriptableObject.Guid Namespace : Global Assembly : Assembly-CSharp.dll Syntax [CreateAssetMenu(menuName = \"Runtime Anchors/Camera\")] public class CameraAnchor : RuntimeAnchorBase<Camera>"
  },
  "api/Global.CameraFollow.html": {
    "href": "api/Global.CameraFollow.html",
    "title": "Class CameraFollow | Roguelite documentation",
    "keywords": "Class CameraFollow Inheritance object Object Component Behaviour MonoBehaviour CameraFollow Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class CameraFollow : MonoBehaviour Fields | Improve this Doc View Source accel Declaration public float accel Field Value Type Description float | Improve this Doc View Source player Declaration public Transform player Field Value Type Description Transform"
  },
  "api/Global.CameraManager.html": {
    "href": "api/Global.CameraManager.html",
    "title": "Class CameraManager | Roguelite documentation",
    "keywords": "Class CameraManager Inheritance object Object Component Behaviour MonoBehaviour CameraManager Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class CameraManager : MonoBehaviour Fields | Improve this Doc View Source inputReader Declaration public InputReader inputReader Field Value Type Description InputReader | Improve this Doc View Source mainCamera Declaration public Camera mainCamera Field Value Type Description Camera Methods | Improve this Doc View Source SetupProtagonistVirtualCamera() Provides Cinemachine with its target, taken from the TransformAnchor SO containing a reference to the player's Transform component. This method is called every time the player is reinstantiated. Declaration public void SetupProtagonistVirtualCamera()"
  },
  "api/Global.CameraShake.html": {
    "href": "api/Global.CameraShake.html",
    "title": "Class CameraShake | Roguelite documentation",
    "keywords": "Class CameraShake Inheritance object Object Component Behaviour MonoBehaviour CameraShake Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class CameraShake : MonoBehaviour Fields | Improve this Doc View Source duration Declaration public float duration Field Value Type Description float | Improve this Doc View Source intensity Declaration public float intensity Field Value Type Description float"
  },
  "api/Global.ChatController.html": {
    "href": "api/Global.ChatController.html",
    "title": "Class ChatController | Roguelite documentation",
    "keywords": "Class ChatController Inheritance object Object Component Behaviour MonoBehaviour ChatController Namespace : Global Assembly : Assembly-CSharp-firstpass.dll Syntax public class ChatController : MonoBehaviour Fields | Improve this Doc View Source ChatDisplayOutput Declaration public TMP_Text ChatDisplayOutput Field Value Type Description TMPro.TMP_Text | Improve this Doc View Source ChatInputField Declaration public TMP_InputField ChatInputField Field Value Type Description TMPro.TMP_InputField | Improve this Doc View Source ChatScrollbar Declaration public Scrollbar ChatScrollbar Field Value Type Description UnityEngine.UI.Scrollbar"
  },
  "api/Global.ColorChangedEvent.html": {
    "href": "api/Global.ColorChangedEvent.html",
    "title": "Class ColorChangedEvent | Roguelite documentation",
    "keywords": "Class ColorChangedEvent Inheritance object UnityEventBase UnityEvent Color ColorChangedEvent Namespace : Global Assembly : Assembly-CSharp-firstpass.dll Syntax [Serializable] public class ColorChangedEvent : UnityEvent<Color>"
  },
  "api/Global.Controls.html": {
    "href": "api/Global.Controls.html",
    "title": "Class Controls | Roguelite documentation",
    "keywords": "Class Controls Inheritance object Controls Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class Controls Constructors | Improve this Doc View Source Controls() Declaration public Controls() Properties | Improve this Doc View Source asset Declaration public InputActionAsset asset { get; } Property Value Type Description UnityEngine.InputSystem.InputActionAsset | Improve this Doc View Source bindingMask Declaration public InputBinding? bindingMask { get; set; } Property Value Type Description UnityEngine.InputSystem.InputBinding | Improve this Doc View Source bindings Declaration public IEnumerable<InputBinding> bindings { get; } Property Value Type Description IEnumerable UnityEngine.InputSystem.InputBinding | Improve this Doc View Source controlSchemes Declaration public ReadOnlyArray<InputControlScheme> controlSchemes { get; } Property Value Type Description UnityEngine.InputSystem.Utilities.ReadOnlyArray<TValue> UnityEngine.InputSystem.InputControlScheme | Improve this Doc View Source devices Declaration public ReadOnlyArray<InputDevice>? devices { get; set; } Property Value Type Description UnityEngine.InputSystem.Utilities.ReadOnlyArray<TValue> UnityEngine.InputSystem.InputDevice | Improve this Doc View Source GamepadScheme Declaration public InputControlScheme GamepadScheme { get; } Property Value Type Description UnityEngine.InputSystem.InputControlScheme | Improve this Doc View Source KeyboardandMouseScheme Declaration public InputControlScheme KeyboardandMouseScheme { get; } Property Value Type Description UnityEngine.InputSystem.InputControlScheme | Improve this Doc View Source Player Declaration public Controls.PlayerActions Player { get; } Property Value Type Description Controls PlayerActions | Improve this Doc View Source UI Declaration public Controls.UIActions UI { get; } Property Value Type Description Controls UIActions Methods | Improve this Doc View Source Contains(InputAction) Declaration public bool Contains(InputAction action) Parameters Type Name Description UnityEngine.InputSystem.InputAction action Returns Type Description bool | Improve this Doc View Source Disable() Declaration public void Disable() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Enable() Declaration public void Enable() | Improve this Doc View Source FindAction(string, bool) Declaration public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false) Parameters Type Name Description string actionNameOrId bool throwIfNotFound Returns Type Description UnityEngine.InputSystem.InputAction | Improve this Doc View Source FindBinding(InputBinding, out InputAction) Declaration public int FindBinding(InputBinding bindingMask, out InputAction action) Parameters Type Name Description UnityEngine.InputSystem.InputBinding bindingMask UnityEngine.InputSystem.InputAction action Returns Type Description int | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<InputAction> GetEnumerator() Returns Type Description IEnumerator UnityEngine.InputSystem.InputAction"
  },
  "api/Global.Controls.IPlayerActions.html": {
    "href": "api/Global.Controls.IPlayerActions.html",
    "title": "Interface Controls.IPlayerActions | Roguelite documentation",
    "keywords": "Interface Controls.IPlayerActions Namespace : Global Assembly : Assembly-CSharp.dll Syntax public interface Controls.IPlayerActions Methods | Improve this Doc View Source OnAttack1(CallbackContext) Declaration void OnAttack1(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnAttack2(CallbackContext) Declaration void OnAttack2(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnDash(CallbackContext) Declaration void OnDash(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnDig(CallbackContext) Declaration void OnDig(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnJump(CallbackContext) Declaration void OnJump(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnLook(CallbackContext) Declaration void OnLook(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnMousePosition(CallbackContext) Declaration void OnMousePosition(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnMove(CallbackContext) Declaration void OnMove(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnRestart(CallbackContext) Declaration void OnRestart(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context"
  },
  "api/Global.Controls.IUIActions.html": {
    "href": "api/Global.Controls.IUIActions.html",
    "title": "Interface Controls.IUIActions | Roguelite documentation",
    "keywords": "Interface Controls.IUIActions Namespace : Global Assembly : Assembly-CSharp.dll Syntax public interface Controls.IUIActions Methods | Improve this Doc View Source OnCancel(CallbackContext) Declaration void OnCancel(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnClick(CallbackContext) Declaration void OnClick(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnMiddleClick(CallbackContext) Declaration void OnMiddleClick(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnNavigate(CallbackContext) Declaration void OnNavigate(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnPoint(CallbackContext) Declaration void OnPoint(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnRightClick(CallbackContext) Declaration void OnRightClick(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnScrollWheel(CallbackContext) Declaration void OnScrollWheel(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnSubmit(CallbackContext) Declaration void OnSubmit(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnTrackedDeviceOrientation(CallbackContext) Declaration void OnTrackedDeviceOrientation(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnTrackedDevicePosition(CallbackContext) Declaration void OnTrackedDevicePosition(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context"
  },
  "api/Global.Controls.PlayerActions.html": {
    "href": "api/Global.Controls.PlayerActions.html",
    "title": "Struct Controls.PlayerActions | Roguelite documentation",
    "keywords": "Struct Controls.PlayerActions Namespace : Global Assembly : Assembly-CSharp.dll Syntax public struct Controls.PlayerActions Constructors | Improve this Doc View Source PlayerActions(Controls) Declaration public PlayerActions(Controls wrapper) Parameters Type Name Description Controls wrapper Properties | Improve this Doc View Source Attack1 Declaration public InputAction Attack1 { get; } Property Value Type Description UnityEngine.InputSystem.InputAction | Improve this Doc View Source Attack2 Declaration public InputAction Attack2 { get; } Property Value Type Description UnityEngine.InputSystem.InputAction | Improve this Doc View Source Dash Declaration public InputAction Dash { get; } Property Value Type Description UnityEngine.InputSystem.InputAction | Improve this Doc View Source Dig Declaration public InputAction Dig { get; } Property Value Type Description UnityEngine.InputSystem.InputAction | Improve this Doc View Source enabled Declaration public bool enabled { get; } Property Value Type Description bool | Improve this Doc View Source Jump Declaration public InputAction Jump { get; } Property Value Type Description UnityEngine.InputSystem.InputAction | Improve this Doc View Source Look Declaration public InputAction Look { get; } Property Value Type Description UnityEngine.InputSystem.InputAction | Improve this Doc View Source MousePosition Declaration public InputAction MousePosition { get; } Property Value Type Description UnityEngine.InputSystem.InputAction | Improve this Doc View Source Move Declaration public InputAction Move { get; } Property Value Type Description UnityEngine.InputSystem.InputAction | Improve this Doc View Source Restart Declaration public InputAction Restart { get; } Property Value Type Description UnityEngine.InputSystem.InputAction Methods | Improve this Doc View Source Disable() Declaration public void Disable() | Improve this Doc View Source Enable() Declaration public void Enable() | Improve this Doc View Source Get() Declaration public InputActionMap Get() Returns Type Description UnityEngine.InputSystem.InputActionMap | Improve this Doc View Source SetCallbacks(IPlayerActions) Declaration public void SetCallbacks(Controls.IPlayerActions instance) Parameters Type Name Description Controls IPlayerActions instance Operators | Improve this Doc View Source implicit operator InputActionMap(PlayerActions) Declaration public static implicit operator InputActionMap(Controls.PlayerActions set) Parameters Type Name Description Controls PlayerActions set Returns Type Description UnityEngine.InputSystem.InputActionMap"
  },
  "api/Global.Controls.UIActions.html": {
    "href": "api/Global.Controls.UIActions.html",
    "title": "Struct Controls.UIActions | Roguelite documentation",
    "keywords": "Struct Controls.UIActions Namespace : Global Assembly : Assembly-CSharp.dll Syntax public struct Controls.UIActions Constructors | Improve this Doc View Source UIActions(Controls) Declaration public UIActions(Controls wrapper) Parameters Type Name Description Controls wrapper Properties | Improve this Doc View Source Cancel Declaration public InputAction Cancel { get; } Property Value Type Description UnityEngine.InputSystem.InputAction | Improve this Doc View Source Click Declaration public InputAction Click { get; } Property Value Type Description UnityEngine.InputSystem.InputAction | Improve this Doc View Source enabled Declaration public bool enabled { get; } Property Value Type Description bool | Improve this Doc View Source MiddleClick Declaration public InputAction MiddleClick { get; } Property Value Type Description UnityEngine.InputSystem.InputAction | Improve this Doc View Source Navigate Declaration public InputAction Navigate { get; } Property Value Type Description UnityEngine.InputSystem.InputAction | Improve this Doc View Source Point Declaration public InputAction Point { get; } Property Value Type Description UnityEngine.InputSystem.InputAction | Improve this Doc View Source RightClick Declaration public InputAction RightClick { get; } Property Value Type Description UnityEngine.InputSystem.InputAction | Improve this Doc View Source ScrollWheel Declaration public InputAction ScrollWheel { get; } Property Value Type Description UnityEngine.InputSystem.InputAction | Improve this Doc View Source Submit Declaration public InputAction Submit { get; } Property Value Type Description UnityEngine.InputSystem.InputAction | Improve this Doc View Source TrackedDeviceOrientation Declaration public InputAction TrackedDeviceOrientation { get; } Property Value Type Description UnityEngine.InputSystem.InputAction | Improve this Doc View Source TrackedDevicePosition Declaration public InputAction TrackedDevicePosition { get; } Property Value Type Description UnityEngine.InputSystem.InputAction Methods | Improve this Doc View Source Disable() Declaration public void Disable() | Improve this Doc View Source Enable() Declaration public void Enable() | Improve this Doc View Source Get() Declaration public InputActionMap Get() Returns Type Description UnityEngine.InputSystem.InputActionMap | Improve this Doc View Source SetCallbacks(IUIActions) Declaration public void SetCallbacks(Controls.IUIActions instance) Parameters Type Name Description Controls IUIActions instance Operators | Improve this Doc View Source implicit operator InputActionMap(UIActions) Declaration public static implicit operator InputActionMap(Controls.UIActions set) Parameters Type Name Description Controls UIActions set Returns Type Description UnityEngine.InputSystem.InputActionMap"
  },
  "api/Global.ConversationFields.html": {
    "href": "api/Global.ConversationFields.html",
    "title": "Struct ConversationFields | Roguelite documentation",
    "keywords": "Struct ConversationFields Namespace : Global Assembly : Assembly-CSharp.dll Syntax public struct ConversationFields Constructors | Improve this Doc View Source ConversationFields(int) Declaration public ConversationFields(int id) Parameters Type Name Description int id Properties | Improve this Doc View Source PlayOnce Declaration public bool PlayOnce { get; } Property Value Type Description bool | Improve this Doc View Source Priority Declaration public int Priority { get; } Property Value Type Description int | Improve this Doc View Source RequiredAnyEncounters Declaration public List<string> RequiredAnyEncounters { get; } Property Value Type Description List string | Improve this Doc View Source RequiredAnyEncountersLastRun Declaration public List<string> RequiredAnyEncountersLastRun { get; } Property Value Type Description List string | Improve this Doc View Source RequiredAnyEncountersThisRun Declaration public List<string> RequiredAnyEncountersThisRun { get; } Property Value Type Description List string | Improve this Doc View Source RequiredConversations Declaration public List<string> RequiredConversations { get; } Property Value Type Description List string | Improve this Doc View Source RequiredEncounters Declaration public List<string> RequiredEncounters { get; } Property Value Type Description List string | Improve this Doc View Source RequiredEncountersLastRun Declaration public List<string> RequiredEncountersLastRun { get; } Property Value Type Description List string | Improve this Doc View Source RequiredEncountersThisRun Declaration public List<string> RequiredEncountersThisRun { get; } Property Value Type Description List string | Improve this Doc View Source RequiredFalseConversations Declaration public List<string> RequiredFalseConversations { get; } Property Value Type Description List string | Improve this Doc View Source RequiredMinNPCInteractions Declaration public int RequiredMinNPCInteractions { get; } Property Value Type Description int | Improve this Doc View Source RequiresLastRunCleared Declaration public bool RequiresLastRunCleared { get; } Property Value Type Description bool | Improve this Doc View Source RequiresLastRunNotCleared Declaration public bool RequiresLastRunNotCleared { get; } Property Value Type Description bool | Improve this Doc View Source RequiresRunCleared Declaration public bool RequiresRunCleared { get; } Property Value Type Description bool | Improve this Doc View Source RequiresRunNotCleared Declaration public bool RequiresRunNotCleared { get; } Property Value Type Description bool | Improve this Doc View Source SuperPriority Declaration public bool SuperPriority { get; } Property Value Type Description bool"
  },
  "api/Global.CustomPath.html": {
    "href": "api/Global.CustomPath.html",
    "title": "Class CustomPath | Roguelite documentation",
    "keywords": "Class CustomPath Inheritance object Object Component Behaviour MonoBehaviour CustomPath Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class CustomPath : MonoBehaviour Fields | Improve this Doc View Source nextWaypointDistance Declaration public float nextWaypointDistance Field Value Type Description float | Improve this Doc View Source rb Declaration public Rigidbody rb Field Value Type Description Rigidbody | Improve this Doc View Source seeker Declaration public Seeker seeker Field Value Type Description Pathfinding.Seeker | Improve this Doc View Source speed Declaration public float speed Field Value Type Description float | Improve this Doc View Source target Declaration public Transform target Field Value Type Description Transform"
  },
  "api/Global.DeleteAfterTime.html": {
    "href": "api/Global.DeleteAfterTime.html",
    "title": "Class DeleteAfterTime | Roguelite documentation",
    "keywords": "Class DeleteAfterTime Inheritance object Object Component Behaviour MonoBehaviour DeleteAfterTime Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class DeleteAfterTime : MonoBehaviour Fields | Improve this Doc View Source destroy Declaration public bool destroy Field Value Type Description bool | Improve this Doc View Source time Declaration public float time Field Value Type Description float"
  },
  "api/Global.DescriptionBaseSO.html": {
    "href": "api/Global.DescriptionBaseSO.html",
    "title": "Class DescriptionBaseSO | Roguelite documentation",
    "keywords": "Class DescriptionBaseSO Base class for ScriptableObjects which need a public description field. Inheritance object Object ScriptableObject SerializableScriptableObject DescriptionBaseSO BoolEventChannelSO GameSceneSO InputReader LoadEventChannelSO PlayerProjectileEffectSO RuntimeAnchorBase<T> TransformEventChannelSO TransitionChannelSO VoidEventChannelSO Inherited Members SerializableScriptableObject.Guid Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class DescriptionBaseSO : SerializableScriptableObject Fields | Improve this Doc View Source description Declaration [TextArea] public string description Field Value Type Description string"
  },
  "api/Global.DestoryTram.html": {
    "href": "api/Global.DestoryTram.html",
    "title": "Class DestoryTram | Roguelite documentation",
    "keywords": "Class DestoryTram Inheritance object Object Component Behaviour MonoBehaviour DestoryTram Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class DestoryTram : MonoBehaviour Fields | Improve this Doc View Source sideBound Declaration public float sideBound Field Value Type Description float"
  },
  "api/Global.DialogueManagerAnchorProvider.html": {
    "href": "api/Global.DialogueManagerAnchorProvider.html",
    "title": "Class DialogueManagerAnchorProvider | Roguelite documentation",
    "keywords": "Class DialogueManagerAnchorProvider Inheritance object Object Component Behaviour MonoBehaviour DialogueManagerAnchorProvider Namespace : Global Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(DialogueSystemEvents))] public class DialogueManagerAnchorProvider : MonoBehaviour"
  },
  "api/Global.DialogueSystemEventsAnchor.html": {
    "href": "api/Global.DialogueSystemEventsAnchor.html",
    "title": "Class DialogueSystemEventsAnchor | Roguelite documentation",
    "keywords": "Class DialogueSystemEventsAnchor Inheritance object Object ScriptableObject SerializableScriptableObject DescriptionBaseSO RuntimeAnchorBase PixelCrushers.DialogueSystem.DialogueSystemEvents DialogueSystemEventsAnchor Inherited Members RuntimeAnchorBase<DialogueSystemEvents>.OnAnchorProvided RuntimeAnchorBase<DialogueSystemEvents>.isSet RuntimeAnchorBase<DialogueSystemEvents>.Value RuntimeAnchorBase<DialogueSystemEvents>.Provide(DialogueSystemEvents) RuntimeAnchorBase<DialogueSystemEvents>.Unset() DescriptionBaseSO.description SerializableScriptableObject.Guid Namespace : Global Assembly : Assembly-CSharp.dll Syntax [CreateAssetMenu(menuName = \"Runtime Anchors/DialogueSystemEvents\")] public class DialogueSystemEventsAnchor : RuntimeAnchorBase<DialogueSystemEvents>"
  },
  "api/Global.DropdownSample.html": {
    "href": "api/Global.DropdownSample.html",
    "title": "Class DropdownSample | Roguelite documentation",
    "keywords": "Class DropdownSample Inheritance object Object Component Behaviour MonoBehaviour DropdownSample Namespace : Global Assembly : Assembly-CSharp-firstpass.dll Syntax public class DropdownSample : MonoBehaviour Methods | Improve this Doc View Source OnButtonClick() Declaration public void OnButtonClick()"
  },
  "api/Global.EditorColdStartup.html": {
    "href": "api/Global.EditorColdStartup.html",
    "title": "Class EditorColdStartup | Roguelite documentation",
    "keywords": "Class EditorColdStartup Inheritance object Object Component Behaviour MonoBehaviour EditorColdStartup Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class EditorColdStartup : MonoBehaviour"
  },
  "api/Global.EnemySpawnManager.html": {
    "href": "api/Global.EnemySpawnManager.html",
    "title": "Class EnemySpawnManager | Roguelite documentation",
    "keywords": "Class EnemySpawnManager Inheritance object Object Component Behaviour MonoBehaviour EnemySpawnManager Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class EnemySpawnManager : MonoBehaviour Fields | Improve this Doc View Source currentWave Declaration public float currentWave Field Value Type Description float | Improve this Doc View Source playerExit Declaration public Exit playerExit Field Value Type Description Exit | Improve this Doc View Source waves Declaration [Reorderable] public ListOfEnemySpawnWaves waves Field Value Type Description ListOfEnemySpawnWaves"
  },
  "api/Global.EnemySpawnWave.html": {
    "href": "api/Global.EnemySpawnWave.html",
    "title": "Class EnemySpawnWave | Roguelite documentation",
    "keywords": "Class EnemySpawnWave Inheritance object EnemySpawnWave Namespace : Global Assembly : Assembly-CSharp.dll Syntax [Serializable] public class EnemySpawnWave Fields | Improve this Doc View Source currentEnemies Declaration [HideInInspector] public int currentEnemies Field Value Type Description int | Improve this Doc View Source enemiesToSpawn Declaration public BasicEnemy[] enemiesToSpawn Field Value Type Description BasicEnemy | Improve this Doc View Source mustKillAllEnemiesToCompleteWave Declaration public bool mustKillAllEnemiesToCompleteWave Field Value Type Description bool | Improve this Doc View Source name Declaration public string name Field Value Type Description string | Improve this Doc View Source nextWaveSpawnTrigger Declaration [Tooltip(\"If assigned, wave will require the player to activate the trigger to complete the wave.\\n If left unassigned, will ignore the requirement\")] public SpawnWaveTrigger nextWaveSpawnTrigger Field Value Type Description SpawnWaveTrigger | Improve this Doc View Source spawnRadius Declaration [Header(\"Wave Details\")] public float spawnRadius Field Value Type Description float | Improve this Doc View Source waveCompleteDelay Declaration [Header(\"Complete Conditions\")] public float waveCompleteDelay Field Value Type Description float | Improve this Doc View Source waveInitialSpawnDelay Declaration [Header(\"Preconditions\")] public float waveInitialSpawnDelay Field Value Type Description float Methods | Improve this Doc View Source IsWaveComplete() Declaration public bool IsWaveComplete() Returns Type Description bool | Improve this Doc View Source SpawnWave() Declaration public IEnumerator SpawnWave() Returns Type Description IEnumerator"
  },
  "api/Global.EnvMapAnimator.html": {
    "href": "api/Global.EnvMapAnimator.html",
    "title": "Class EnvMapAnimator | Roguelite documentation",
    "keywords": "Class EnvMapAnimator Inheritance object Object Component Behaviour MonoBehaviour EnvMapAnimator Namespace : Global Assembly : Assembly-CSharp-firstpass.dll Syntax public class EnvMapAnimator : MonoBehaviour Fields | Improve this Doc View Source RotationSpeeds Declaration public Vector3 RotationSpeeds Field Value Type Description Vector3"
  },
  "api/Global.Exit.html": {
    "href": "api/Global.Exit.html",
    "title": "Class Exit | Roguelite documentation",
    "keywords": "Class Exit Inheritance object Object Component Behaviour MonoBehaviour Exit HubExit PlayerExit Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class Exit : MonoBehaviour Fields | Improve this Doc View Source loadsSceneByName Declaration [HideInInspector] public bool loadsSceneByName Field Value Type Description bool | Improve this Doc View Source locked Declaration public bool locked Field Value Type Description bool | Improve this Doc View Source nextSceneName Declaration [HideInInspector] public string nextSceneName Field Value Type Description string | Improve this Doc View Source PlayerEnteredExit Declaration public UnityEvent PlayerEnteredExit Field Value Type Description UnityEvent Methods | Improve this Doc View Source ExitTriggered(Collider) Declaration public virtual void ExitTriggered(Collider other) Parameters Type Name Description Collider other"
  },
  "api/Global.FrozenTrap.html": {
    "href": "api/Global.FrozenTrap.html",
    "title": "Class FrozenTrap | Roguelite documentation",
    "keywords": "Class FrozenTrap Inheritance object Object Component Behaviour MonoBehaviour FrozenTrap Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class FrozenTrap : MonoBehaviour Fields | Improve this Doc View Source time Declaration public float time Field Value Type Description float"
  },
  "api/Global.GameSceneSO.GameSceneType.html": {
    "href": "api/Global.GameSceneSO.GameSceneType.html",
    "title": "Enum GameSceneSO.GameSceneType | Roguelite documentation",
    "keywords": "Enum GameSceneSO.GameSceneType Used by the SceneSelector tool to discern what type of scene it needs to load. Namespace : Global Assembly : Assembly-CSharp.dll Syntax public enum GameSceneSO.GameSceneType Fields Name Description Editor Gameplay Initialisation Location Menu PersistentManagers"
  },
  "api/Global.GameSceneSO.html": {
    "href": "api/Global.GameSceneSO.html",
    "title": "Class GameSceneSO | Roguelite documentation",
    "keywords": "Class GameSceneSO A ScriptableObject template which contains necessary data that is common in all game scenes (Locations, Managers, Menus, (music?)), and acts as an addressable identifier. Inheritance object Object ScriptableObject SerializableScriptableObject DescriptionBaseSO GameSceneSO LocationSceneSO MenuSceneSO PersistentManagerSceneSO Inherited Members DescriptionBaseSO.description SerializableScriptableObject.Guid Namespace : Global Assembly : Assembly-CSharp.dll Syntax [CreateAssetMenu(fileName = \"NewGameplayScene\", menuName = \"Scene Data/Gameplay\")] public class GameSceneSO : DescriptionBaseSO Fields | Improve this Doc View Source sceneReference Declaration public AssetReference sceneReference Field Value Type Description UnityEngine.AddressableAssets.AssetReference | Improve this Doc View Source sceneType Declaration public GameSceneSO.GameSceneType sceneType Field Value Type Description GameSceneSO GameSceneType"
  },
  "api/Global.HitMarker.html": {
    "href": "api/Global.HitMarker.html",
    "title": "Class HitMarker | Roguelite documentation",
    "keywords": "Class HitMarker Inheritance object Object Component Behaviour MonoBehaviour HitMarker Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class HitMarker : MonoBehaviour Fields | Improve this Doc View Source damage Declaration public float damage Field Value Type Description float | Improve this Doc View Source rb Declaration public Rigidbody rb Field Value Type Description Rigidbody | Improve this Doc View Source rotHandler Declaration public Transform rotHandler Field Value Type Description Transform | Improve this Doc View Source text Declaration public Text text Field Value Type Description UnityEngine.UI.Text | Improve this Doc View Source text2 Declaration public Text text2 Field Value Type Description UnityEngine.UI.Text Methods | Improve this Doc View Source OnObjectSpawn() Declaration public void OnObjectSpawn()"
  },
  "api/Global.Hittable.html": {
    "href": "api/Global.Hittable.html",
    "title": "Class Hittable | Roguelite documentation",
    "keywords": "Class Hittable Inheritance object Object Component Behaviour MonoBehaviour Hittable BasicEnemy Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class Hittable : MonoBehaviour Fields | Improve this Doc View Source camShake Declaration public CameraShake camShake Field Value Type Description CameraShake | Improve this Doc View Source duration Declaration public float duration Field Value Type Description float | Improve this Doc View Source health Declaration public float health Field Value Type Description float | Improve this Doc View Source intensity Declaration public float intensity Field Value Type Description float | Improve this Doc View Source objectPooler Declaration public ObjectPooler objectPooler Field Value Type Description ObjectPooler | Improve this Doc View Source OnHit Declaration public UnityEvent OnHit Field Value Type Description UnityEvent | Improve this Doc View Source poisonDamage Declaration public int poisonDamage Field Value Type Description int Methods | Improve this Doc View Source Hit(float, Vector3) Declaration public virtual void Hit(float knockback, Vector3 direction) Parameters Type Name Description float knockback Vector3 direction | Improve this Doc View Source Start() Declaration public virtual void Start()"
  },
  "api/Global.HSVChangedEvent.html": {
    "href": "api/Global.HSVChangedEvent.html",
    "title": "Class HSVChangedEvent | Roguelite documentation",
    "keywords": "Class HSVChangedEvent Inheritance object UnityEventBase UnityEvent float float float HSVChangedEvent Namespace : Global Assembly : Assembly-CSharp-firstpass.dll Syntax public class HSVChangedEvent : UnityEvent<float, float, float>"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace | Roguelite documentation",
    "keywords": "Namespace Classes Actor AstarPath AttackObject AttackTemplate BasicEnemy BoolEventChannelSO This class is used for Events that have a bool argument. Example: An event to toggle a UI interface CameraAnchor CameraFollow CameraManager CameraShake ChatController ColorChangedEvent Controls CustomPath DeleteAfterTime DescriptionBaseSO Base class for ScriptableObjects which need a public description field. DestoryTram DialogueManagerAnchorProvider DialogueSystemEventsAnchor DropdownSample EditorColdStartup EnemySpawnManager EnemySpawnWave EnvMapAnimator Exit FrozenTrap GameSceneSO A ScriptableObject template which contains necessary data that is common in all game scenes (Locations, Managers, Menus, (music?)), and acts as an addressable identifier. HitMarker Hittable HSVChangedEvent HubExit HubNPC HubNPCManager Initializer This class is responsible for starting the game by loading the persistent managers scene and raising the event to load the Main Menu InputReader LEGACY_UILineRenderer ListOfEnemySpawnWaves LoadEventChannelSO This class is used for scene-loading events. Takes a GameSceneSO of the location or menu that needs to be loaded, and a bool to specify if a loading screen needs to display. LocationSceneSO This class contains Settings specific to Locations only MenuSceneSO This class contains Settings specific to Menus only MoveForward ObjectPooler ObjectPooler.Pool PersistentManagerSceneSO PlayerBufferPoint PlayerExit PlayerManager PlayerProjectile PlayerProjectileEffectDefaultSO PlayerProjectileEffectSO PlayerProjectilePickup PlayerProjectileReceiver PlayerSpawn PlayerSpawnSystem PlayerWeaponController ProjectileEffectExtraDamageSO Run RunManager RunManagerAnchor RuntimeAnchorBase<T> SceneLoader This class manages the scene loading and unloading. It is generally placed in the PersistentManagers scene and acts as a singleton (through SO event channels) SerializableScriptableObject SerializerUtility SpawnWaveTrigger StartGame TestCompression TramDeltDamage TramSpawn TransformAnchor TransformEventChannelSO This class is used for Events that have one transform argument. Example: Spawn system initializes player and fire event, where the transform is the position of player. TransitionChannelSO Trap UIGridRenderer VoidEventChannelSO This class is used for Events that have no arguments (Example: Exit game event) Structs Controls.PlayerActions Controls.UIActions ConversationFields RunStatistics Interfaces Controls.IPlayerActions Controls.IUIActions IPooledObject Enums AstarPath.AstarDistribution Information about where the package was downloaded GameSceneSO.GameSceneType Used by the SceneSelector tool to discern what type of scene it needs to load. UIVisibility WaveSpawnType WaveTriggerType"
  },
  "api/Global.HubExit.html": {
    "href": "api/Global.HubExit.html",
    "title": "Class HubExit | Roguelite documentation",
    "keywords": "Class HubExit Inheritance object Object Component Behaviour MonoBehaviour Exit HubExit Inherited Members Exit.loadsSceneByName Exit.nextSceneName Exit.locked Exit.PlayerEnteredExit Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class HubExit : Exit Methods | Improve this Doc View Source ExitTriggered(Collider) Declaration public override void ExitTriggered(Collider other) Parameters Type Name Description Collider other Overrides Exit.ExitTriggered(Collider)"
  },
  "api/Global.HubNPC.html": {
    "href": "api/Global.HubNPC.html",
    "title": "Class HubNPC | Roguelite documentation",
    "keywords": "Class HubNPC Inheritance object Object Component Behaviour MonoBehaviour HubNPC Namespace : Global Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(DialogueSystemTrigger))] public class HubNPC : MonoBehaviour Fields | Improve this Doc View Source ActorID Declaration public int ActorID Field Value Type Description int Methods | Improve this Doc View Source AssignConversation(string) Declaration public void AssignConversation(string conversationTitle) Parameters Type Name Description string conversationTitle | Improve this Doc View Source OnConversationEnd() Declaration public void OnConversationEnd()"
  },
  "api/Global.HubNPCManager.html": {
    "href": "api/Global.HubNPCManager.html",
    "title": "Class HubNPCManager | Roguelite documentation",
    "keywords": "Class HubNPCManager Inheritance object Object Component Behaviour MonoBehaviour HubNPCManager Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class HubNPCManager : MonoBehaviour Fields | Improve this Doc View Source Actors Declaration public HubNPC[] Actors Field Value Type Description HubNPC Methods | Improve this Doc View Source ActivateNPCs() Declaration public void ActivateNPCs() | Improve this Doc View Source DeactivateNPCs() Declaration public void DeactivateNPCs()"
  },
  "api/Global.Initializer.html": {
    "href": "api/Global.Initializer.html",
    "title": "Class Initializer | Roguelite documentation",
    "keywords": "Class Initializer This class is responsible for starting the game by loading the persistent managers scene and raising the event to load the Main Menu Inheritance object Object Component Behaviour MonoBehaviour Initializer Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class Initializer : MonoBehaviour"
  },
  "api/Global.InputReader.html": {
    "href": "api/Global.InputReader.html",
    "title": "Class InputReader | Roguelite documentation",
    "keywords": "Class InputReader Inheritance object Object ScriptableObject SerializableScriptableObject DescriptionBaseSO InputReader Implements Controls IPlayerActions Inherited Members DescriptionBaseSO.description SerializableScriptableObject.Guid Namespace : Global Assembly : Assembly-CSharp.dll Syntax [CreateAssetMenu(fileName = \"InputReader\", menuName = \"Game/Input Reader\")] public class InputReader : DescriptionBaseSO, Controls.IPlayerActions Fields | Improve this Doc View Source controls Declaration public Controls controls Field Value Type Description Controls | Improve this Doc View Source Look Declaration public Vector2 Look Field Value Type Description Vector2 | Improve this Doc View Source MousePosition Declaration public Vector2 MousePosition Field Value Type Description Vector2 | Improve this Doc View Source MoveComposite Declaration public Vector2 MoveComposite Field Value Type Description Vector2 | Improve this Doc View Source OnAttack1Performed Declaration public Action OnAttack1Performed Field Value Type Description Action | Improve this Doc View Source OnAttack2Performed Declaration public Action OnAttack2Performed Field Value Type Description Action | Improve this Doc View Source OnDashPerformed Declaration public Action OnDashPerformed Field Value Type Description Action | Improve this Doc View Source OnDigPerformed Declaration public Action OnDigPerformed Field Value Type Description Action | Improve this Doc View Source OnJumpPerformed Declaration public Action OnJumpPerformed Field Value Type Description Action | Improve this Doc View Source OnRestartPerformed Declaration public Action OnRestartPerformed Field Value Type Description Action Methods | Improve this Doc View Source OnAttack1(CallbackContext) Declaration public void OnAttack1(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnAttack2(CallbackContext) Declaration public void OnAttack2(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnDash(CallbackContext) Declaration public void OnDash(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnDig(CallbackContext) Declaration public void OnDig(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnDisable() Declaration public void OnDisable() | Improve this Doc View Source OnEnable() Declaration public void OnEnable() | Improve this Doc View Source OnJump(CallbackContext) Declaration public void OnJump(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnLook(CallbackContext) Declaration public void OnLook(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnMousePosition(CallbackContext) Declaration public void OnMousePosition(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnMove(CallbackContext) Declaration public void OnMove(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnRestart(CallbackContext) Declaration public void OnRestart(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction UnityEngine.InputSystem.InputAction.CallbackContext context Implements Controls.IPlayerActions"
  },
  "api/Global.IPooledObject.html": {
    "href": "api/Global.IPooledObject.html",
    "title": "Interface IPooledObject | Roguelite documentation",
    "keywords": "Interface IPooledObject Namespace : Global Assembly : Assembly-CSharp.dll Syntax public interface IPooledObject Methods | Improve this Doc View Source OnObjectSpawn() Declaration void OnObjectSpawn()"
  },
  "api/Global.LEGACY_UILineRenderer.html": {
    "href": "api/Global.LEGACY_UILineRenderer.html",
    "title": "Class LEGACY_UILineRenderer | Roguelite documentation",
    "keywords": "Class LEGACY_UILineRenderer Inheritance object Object Component Behaviour MonoBehaviour UnityEngine.EventSystems.UIBehaviour UnityEngine.UI.Graphic LEGACY_UILineRenderer Namespace : Global Assembly : Assembly-CSharp-firstpass.dll Syntax public class LEGACY_UILineRenderer : Graphic Fields | Improve this Doc View Source gridSize Declaration public Vector2Int gridSize Field Value Type Description Vector2Int | Improve this Doc View Source points Declaration public List<Vector2> points Field Value Type Description List Vector2 | Improve this Doc View Source thickness Declaration public float thickness Field Value Type Description float Methods | Improve this Doc View Source OnPopulateMesh(VertexHelper) Declaration protected override void OnPopulateMesh(VertexHelper vh) Parameters Type Name Description UnityEngine.UI.VertexHelper vh Overrides UnityEngine.UI.Graphic.OnPopulateMesh(UnityEngine.UI.VertexHelper)"
  },
  "api/Global.ListOfEnemySpawnWaves.html": {
    "href": "api/Global.ListOfEnemySpawnWaves.html",
    "title": "Class ListOfEnemySpawnWaves | Roguelite documentation",
    "keywords": "Class ListOfEnemySpawnWaves Inheritance object Malee.List.ReorderableArray<T> EnemySpawnWave ListOfEnemySpawnWaves Namespace : Global Assembly : Assembly-CSharp.dll Syntax [Serializable] public class ListOfEnemySpawnWaves : ReorderableArray<EnemySpawnWave>"
  },
  "api/Global.LoadEventChannelSO.html": {
    "href": "api/Global.LoadEventChannelSO.html",
    "title": "Class LoadEventChannelSO | Roguelite documentation",
    "keywords": "Class LoadEventChannelSO This class is used for scene-loading events. Takes a GameSceneSO of the location or menu that needs to be loaded, and a bool to specify if a loading screen needs to display. Inheritance object Object ScriptableObject SerializableScriptableObject DescriptionBaseSO LoadEventChannelSO Inherited Members DescriptionBaseSO.description SerializableScriptableObject.Guid Namespace : Global Assembly : Assembly-CSharp.dll Syntax [CreateAssetMenu(menuName = \"Events/Load Event Channel\")] public class LoadEventChannelSO : DescriptionBaseSO Fields | Improve this Doc View Source OnLoadingRequested Declaration public UnityAction<GameSceneSO, bool, bool> OnLoadingRequested Field Value Type Description UnityAction GameSceneSO bool bool Methods | Improve this Doc View Source RaiseEvent(GameSceneSO, bool, bool) Declaration public void RaiseEvent(GameSceneSO locationToLoad, bool showLoadingScreen = false, bool fadeScreen = false) Parameters Type Name Description GameSceneSO locationToLoad bool showLoadingScreen bool fadeScreen"
  },
  "api/Global.LocationSceneSO.html": {
    "href": "api/Global.LocationSceneSO.html",
    "title": "Class LocationSceneSO | Roguelite documentation",
    "keywords": "Class LocationSceneSO This class contains Settings specific to Locations only Inheritance object Object ScriptableObject SerializableScriptableObject DescriptionBaseSO GameSceneSO LocationSceneSO Inherited Members GameSceneSO.sceneType GameSceneSO.sceneReference DescriptionBaseSO.description SerializableScriptableObject.Guid Namespace : Global Assembly : Assembly-CSharp.dll Syntax [CreateAssetMenu(fileName = \"NewLocation\", menuName = \"Scene Data/Location\")] public class LocationSceneSO : GameSceneSO Fields | Improve this Doc View Source locationName Declaration public string locationName Field Value Type Description string"
  },
  "api/Global.MenuSceneSO.html": {
    "href": "api/Global.MenuSceneSO.html",
    "title": "Class MenuSceneSO | Roguelite documentation",
    "keywords": "Class MenuSceneSO This class contains Settings specific to Menus only Inheritance object Object ScriptableObject SerializableScriptableObject DescriptionBaseSO GameSceneSO MenuSceneSO Inherited Members GameSceneSO.sceneType GameSceneSO.sceneReference DescriptionBaseSO.description SerializableScriptableObject.Guid Namespace : Global Assembly : Assembly-CSharp.dll Syntax [CreateAssetMenu(fileName = \"NewMenu\", menuName = \"Scene Data/Menu\")] public class MenuSceneSO : GameSceneSO"
  },
  "api/Global.MoveForward.html": {
    "href": "api/Global.MoveForward.html",
    "title": "Class MoveForward | Roguelite documentation",
    "keywords": "Class MoveForward Inheritance object Object Component Behaviour MonoBehaviour MoveForward Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class MoveForward : MonoBehaviour Fields | Improve this Doc View Source speed Declaration public float speed Field Value Type Description float"
  },
  "api/Global.ObjectPooler.html": {
    "href": "api/Global.ObjectPooler.html",
    "title": "Class ObjectPooler | Roguelite documentation",
    "keywords": "Class ObjectPooler Inheritance object Object Component Behaviour MonoBehaviour ObjectPooler Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class ObjectPooler : MonoBehaviour Fields | Improve this Doc View Source Instance Declaration public static ObjectPooler Instance Field Value Type Description ObjectPooler | Improve this Doc View Source poolDictionary Declaration public Dictionary<string, Queue<GameObject>> poolDictionary Field Value Type Description Dictionary string Queue GameObject | Improve this Doc View Source pools Declaration public List<ObjectPooler.Pool> pools Field Value Type Description List ObjectPooler Pool Methods | Improve this Doc View Source SpawnFromPool(string, Vector3, Quaternion) Declaration public GameObject SpawnFromPool(string tag, Vector3 position, Quaternion rotation) Parameters Type Name Description string tag Vector3 position Quaternion rotation Returns Type Description GameObject | Improve this Doc View Source SpawnMarkerFromPool(string, Vector3, float) Declaration public GameObject SpawnMarkerFromPool(string tag, Vector3 position, float damage) Parameters Type Name Description string tag Vector3 position float damage Returns Type Description GameObject"
  },
  "api/Global.ObjectPooler.Pool.html": {
    "href": "api/Global.ObjectPooler.Pool.html",
    "title": "Class ObjectPooler.Pool | Roguelite documentation",
    "keywords": "Class ObjectPooler.Pool Inheritance object ObjectPooler.Pool Namespace : Global Assembly : Assembly-CSharp.dll Syntax [Serializable] public class ObjectPooler.Pool Fields | Improve this Doc View Source prefab Declaration public GameObject prefab Field Value Type Description GameObject | Improve this Doc View Source size Declaration public int size Field Value Type Description int | Improve this Doc View Source tag Declaration public string tag Field Value Type Description string"
  },
  "api/Global.PersistentManagerSceneSO.html": {
    "href": "api/Global.PersistentManagerSceneSO.html",
    "title": "Class PersistentManagerSceneSO | Roguelite documentation",
    "keywords": "Class PersistentManagerSceneSO Inheritance object Object ScriptableObject SerializableScriptableObject DescriptionBaseSO GameSceneSO PersistentManagerSceneSO Inherited Members GameSceneSO.sceneType GameSceneSO.sceneReference DescriptionBaseSO.description SerializableScriptableObject.Guid Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class PersistentManagerSceneSO : GameSceneSO"
  },
  "api/Global.PlayerBufferPoint.html": {
    "href": "api/Global.PlayerBufferPoint.html",
    "title": "Class PlayerBufferPoint | Roguelite documentation",
    "keywords": "Class PlayerBufferPoint Inheritance object Object Component Behaviour MonoBehaviour PlayerBufferPoint Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class PlayerBufferPoint : MonoBehaviour Fields | Improve this Doc View Source debugMaterial Declaration public Material debugMaterial Field Value Type Description Material | Improve this Doc View Source groundCollider Declaration public Collider groundCollider Field Value Type Description Collider | Improve this Doc View Source playerBuffer Declaration public Transform playerBuffer Field Value Type Description Transform | Improve this Doc View Source showDebug Declaration public bool showDebug Field Value Type Description bool"
  },
  "api/Global.PlayerExit.html": {
    "href": "api/Global.PlayerExit.html",
    "title": "Class PlayerExit | Roguelite documentation",
    "keywords": "Class PlayerExit Inheritance object Object Component Behaviour MonoBehaviour Exit PlayerExit Inherited Members Exit.loadsSceneByName Exit.nextSceneName Exit.locked Exit.PlayerEnteredExit Exit.ExitTriggered(Collider) Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class PlayerExit : Exit"
  },
  "api/Global.PlayerManager.html": {
    "href": "api/Global.PlayerManager.html",
    "title": "Class PlayerManager | Roguelite documentation",
    "keywords": "Class PlayerManager Inheritance object Object Component Behaviour MonoBehaviour PlayerManager Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class PlayerManager : MonoBehaviour"
  },
  "api/Global.PlayerProjectile.html": {
    "href": "api/Global.PlayerProjectile.html",
    "title": "Class PlayerProjectile | Roguelite documentation",
    "keywords": "Class PlayerProjectile Inheritance object Object Component Behaviour MonoBehaviour PlayerProjectile Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class PlayerProjectile : MonoBehaviour Fields | Improve this Doc View Source critChance Declaration public float critChance Field Value Type Description float | Improve this Doc View Source critMarker Declaration public GameObject critMarker Field Value Type Description GameObject | Improve this Doc View Source critMultiplier Declaration public float critMultiplier Field Value Type Description float | Improve this Doc View Source damage Declaration public float damage Field Value Type Description float | Improve this Doc View Source gravityAcceleration Declaration public float gravityAcceleration Field Value Type Description float | Improve this Doc View Source hitMarker Declaration public GameObject hitMarker Field Value Type Description GameObject | Improve this Doc View Source hittableLayers Declaration public LayerMask hittableLayers Field Value Type Description LayerMask | Improve this Doc View Source ignoreCrit Declaration public bool ignoreCrit Field Value Type Description bool | Improve this Doc View Source impactVFX Declaration public GameObject impactVFX Field Value Type Description GameObject | Improve this Doc View Source inheritWeaponVelocity Declaration public bool inheritWeaponVelocity Field Value Type Description bool | Improve this Doc View Source knockback Declaration public float knockback Field Value Type Description float | Improve this Doc View Source maxLifeTime Declaration public float maxLifeTime Field Value Type Description float | Improve this Doc View Source pickup Declaration public GameObject pickup Field Value Type Description GameObject | Improve this Doc View Source radius Declaration public float radius Field Value Type Description float | Improve this Doc View Source root Declaration public Transform root Field Value Type Description Transform | Improve this Doc View Source speed Declaration public float speed Field Value Type Description float | Improve this Doc View Source tip Declaration public Transform tip Field Value Type Description Transform Methods | Improve this Doc View Source InitialiseProjectile(PlayerWeaponController, PlayerProjectileEffectSO) Declaration public void InitialiseProjectile(PlayerWeaponController controller, PlayerProjectileEffectSO effect) Parameters Type Name Description PlayerWeaponController controller PlayerProjectileEffectSO effect"
  },
  "api/Global.PlayerProjectileEffectDefaultSO.html": {
    "href": "api/Global.PlayerProjectileEffectDefaultSO.html",
    "title": "Class PlayerProjectileEffectDefaultSO | Roguelite documentation",
    "keywords": "Class PlayerProjectileEffectDefaultSO Inheritance object Object ScriptableObject SerializableScriptableObject DescriptionBaseSO PlayerProjectileEffectSO PlayerProjectileEffectDefaultSO Inherited Members DescriptionBaseSO.description SerializableScriptableObject.Guid Namespace : Global Assembly : Assembly-CSharp.dll Syntax [CreateAssetMenu(fileName = \"DefaultEffect\", menuName = \"Player/ProjectileEffect/DefaultEffect\")] public class PlayerProjectileEffectDefaultSO : PlayerProjectileEffectSO Methods | Improve this Doc View Source Initialise(GameObject) Declaration public override void Initialise(GameObject target) Parameters Type Name Description GameObject target Overrides PlayerProjectileEffectSO.Initialise(GameObject)"
  },
  "api/Global.PlayerProjectileEffectSO.html": {
    "href": "api/Global.PlayerProjectileEffectSO.html",
    "title": "Class PlayerProjectileEffectSO | Roguelite documentation",
    "keywords": "Class PlayerProjectileEffectSO Inheritance object Object ScriptableObject SerializableScriptableObject DescriptionBaseSO PlayerProjectileEffectSO PlayerProjectileEffectDefaultSO ProjectileEffectExtraDamageSO Inherited Members DescriptionBaseSO.description SerializableScriptableObject.Guid Namespace : Global Assembly : Assembly-CSharp.dll Syntax public abstract class PlayerProjectileEffectSO : DescriptionBaseSO Methods | Improve this Doc View Source Initialise(GameObject) Declaration public abstract void Initialise(GameObject target) Parameters Type Name Description GameObject target"
  },
  "api/Global.PlayerProjectilePickup.html": {
    "href": "api/Global.PlayerProjectilePickup.html",
    "title": "Class PlayerProjectilePickup | Roguelite documentation",
    "keywords": "Class PlayerProjectilePickup Inheritance object Object Component Behaviour MonoBehaviour PlayerProjectilePickup Namespace : Global Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(Hittable))] public class PlayerProjectilePickup : MonoBehaviour Fields | Improve this Doc View Source maxLifeTime Declaration public float maxLifeTime Field Value Type Description float"
  },
  "api/Global.PlayerProjectileReceiver.html": {
    "href": "api/Global.PlayerProjectileReceiver.html",
    "title": "Class PlayerProjectileReceiver | Roguelite documentation",
    "keywords": "Class PlayerProjectileReceiver Inheritance object Object Component Behaviour MonoBehaviour PlayerProjectileReceiver Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class PlayerProjectileReceiver : MonoBehaviour Fields | Improve this Doc View Source effectSOs Declaration public List<PlayerProjectileEffectSO> effectSOs Field Value Type Description List PlayerProjectileEffectSO | Improve this Doc View Source pickup Declaration public GameObject pickup Field Value Type Description GameObject | Improve this Doc View Source projectileCount Declaration public int projectileCount Field Value Type Description int Methods | Improve this Doc View Source AddProjectile(PlayerProjectileEffectSO) Declaration public void AddProjectile(PlayerProjectileEffectSO projectileEffect) Parameters Type Name Description PlayerProjectileEffectSO projectileEffect | Improve this Doc View Source DropProjectiles(BasicEnemy) Declaration public void DropProjectiles(BasicEnemy enemy) Parameters Type Name Description BasicEnemy enemy | Improve this Doc View Source Start() Declaration public void Start()"
  },
  "api/Global.PlayerSpawn.html": {
    "href": "api/Global.PlayerSpawn.html",
    "title": "Class PlayerSpawn | Roguelite documentation",
    "keywords": "Class PlayerSpawn Inheritance object Object Component Behaviour MonoBehaviour PlayerSpawn Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class PlayerSpawn : MonoBehaviour"
  },
  "api/Global.PlayerSpawnSystem.html": {
    "href": "api/Global.PlayerSpawnSystem.html",
    "title": "Class PlayerSpawnSystem | Roguelite documentation",
    "keywords": "Class PlayerSpawnSystem Inheritance object Object Component Behaviour MonoBehaviour PlayerSpawnSystem Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class PlayerSpawnSystem : MonoBehaviour"
  },
  "api/Global.PlayerWeaponController.html": {
    "href": "api/Global.PlayerWeaponController.html",
    "title": "Class PlayerWeaponController | Roguelite documentation",
    "keywords": "Class PlayerWeaponController Inheritance object Object Component Behaviour MonoBehaviour PlayerWeaponController Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class PlayerWeaponController : MonoBehaviour Fields | Improve this Doc View Source bulletsPerShot Declaration public int bulletsPerShot Field Value Type Description int | Improve this Doc View Source currentMagazineAmount Declaration public int currentMagazineAmount Field Value Type Description int | Improve this Doc View Source effects Declaration public List<PlayerProjectileEffectSO> effects Field Value Type Description List PlayerProjectileEffectSO | Improve this Doc View Source effectTemplates Declaration public List<PlayerProjectileEffectSO> effectTemplates Field Value Type Description List PlayerProjectileEffectSO | Improve this Doc View Source fireRate Declaration public float fireRate Field Value Type Description float | Improve this Doc View Source magazineSize Declaration public int magazineSize Field Value Type Description int | Improve this Doc View Source muzzle Declaration public Transform muzzle Field Value Type Description Transform | Improve this Doc View Source muzzleFlash Declaration public ParticleSystem muzzleFlash Field Value Type Description ParticleSystem | Improve this Doc View Source muzzleWorldVelocity Declaration public Vector3 muzzleWorldVelocity Field Value Type Description Vector3 | Improve this Doc View Source projectilePrefab Declaration public GameObject projectilePrefab Field Value Type Description GameObject | Improve this Doc View Source spreadAngle Declaration public float spreadAngle Field Value Type Description float | Improve this Doc View Source turnSpeedMultiplier Declaration public float turnSpeedMultiplier Field Value Type Description float Methods | Improve this Doc View Source AddToCurrentMagazine(int) Declaration public void AddToCurrentMagazine(int count) Parameters Type Name Description int count | Improve this Doc View Source FireWeapon() Declaration public bool FireWeapon() Returns Type Description bool | Improve this Doc View Source GetShotDirectionWithinSpread(Transform) Declaration public Vector3 GetShotDirectionWithinSpread(Transform origin) Parameters Type Name Description Transform origin Returns Type Description Vector3 | Improve this Doc View Source TryAttack() Declaration public void TryAttack()"
  },
  "api/Global.ProjectileEffectExtraDamageSO.html": {
    "href": "api/Global.ProjectileEffectExtraDamageSO.html",
    "title": "Class ProjectileEffectExtraDamageSO | Roguelite documentation",
    "keywords": "Class ProjectileEffectExtraDamageSO Inheritance object Object ScriptableObject SerializableScriptableObject DescriptionBaseSO PlayerProjectileEffectSO ProjectileEffectExtraDamageSO Inherited Members DescriptionBaseSO.description SerializableScriptableObject.Guid Namespace : Global Assembly : Assembly-CSharp.dll Syntax [CreateAssetMenu(fileName = \"ExtraDamageEffect\", menuName = \"Player/ProjectileEffect/ExtraDamageEffect\")] public class ProjectileEffectExtraDamageSO : PlayerProjectileEffectSO Fields | Improve this Doc View Source extraDamage Declaration public float extraDamage Field Value Type Description float Methods | Improve this Doc View Source Initialise(GameObject) Declaration public override void Initialise(GameObject target) Parameters Type Name Description GameObject target Overrides PlayerProjectileEffectSO.Initialise(GameObject) | Improve this Doc View Source OnHitPerformed() Declaration public void OnHitPerformed()"
  },
  "api/Global.Run.html": {
    "href": "api/Global.Run.html",
    "title": "Class Run | Roguelite documentation",
    "keywords": "Class Run Inheritance object Run Namespace : Global Assembly : Assembly-CSharp.dll Syntax [Serializable] public class Run Fields | Improve this Doc View Source runStatistics Declaration [SerializeField] public RunStatistics runStatistics Field Value Type Description RunStatistics"
  },
  "api/Global.RunManager.html": {
    "href": "api/Global.RunManager.html",
    "title": "Class RunManager | Roguelite documentation",
    "keywords": "Class RunManager Inheritance object Object Component Behaviour MonoBehaviour RunManager Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class RunManager : MonoBehaviour Fields | Improve this Doc View Source currentRun Declaration public Run currentRun Field Value Type Description Run | Improve this Doc View Source hubSceneSO Declaration public GameSceneSO hubSceneSO Field Value Type Description GameSceneSO | Improve this Doc View Source lastRun Declaration public Run lastRun Field Value Type Description Run | Improve this Doc View Source loadLocation Declaration public LoadEventChannelSO loadLocation Field Value Type Description LoadEventChannelSO | Improve this Doc View Source mapCanvas Declaration public GameObject mapCanvas Field Value Type Description GameObject | Improve this Doc View Source mapManager Declaration public MapManagerSO mapManager Field Value Type Description Map.MapManagerSO | Improve this Doc View Source playerExit Declaration public Exit playerExit Field Value Type Description Exit | Improve this Doc View Source runManagerAnchor Declaration public RunManagerAnchor runManagerAnchor Field Value Type Description RunManagerAnchor | Improve this Doc View Source VisitedEncounters Declaration public List<string> VisitedEncounters Field Value Type Description List string Methods | Improve this Doc View Source OnPlayerEnterExit() Declaration public void OnPlayerEnterExit() | Improve this Doc View Source ReturnToHub() Declaration public void ReturnToHub() | Improve this Doc View Source StartNewRun() Declaration public void StartNewRun()"
  },
  "api/Global.RunManagerAnchor.html": {
    "href": "api/Global.RunManagerAnchor.html",
    "title": "Class RunManagerAnchor | Roguelite documentation",
    "keywords": "Class RunManagerAnchor Inheritance object Object ScriptableObject SerializableScriptableObject DescriptionBaseSO RuntimeAnchorBase RunManager RunManagerAnchor Inherited Members RuntimeAnchorBase<RunManager>.OnAnchorProvided RuntimeAnchorBase<RunManager>.isSet RuntimeAnchorBase<RunManager>.Value RuntimeAnchorBase<RunManager>.Provide(RunManager) RuntimeAnchorBase<RunManager>.Unset() DescriptionBaseSO.description SerializableScriptableObject.Guid Namespace : Global Assembly : Assembly-CSharp.dll Syntax [CreateAssetMenu(menuName = \"Runtime Anchors/RunManager\")] public class RunManagerAnchor : RuntimeAnchorBase<RunManager>"
  },
  "api/Global.RunStatistics.html": {
    "href": "api/Global.RunStatistics.html",
    "title": "Struct RunStatistics | Roguelite documentation",
    "keywords": "Struct RunStatistics Namespace : Global Assembly : Assembly-CSharp.dll Syntax [Serializable] public struct RunStatistics Fields | Improve this Doc View Source boonsGained Declaration public int boonsGained Field Value Type Description int | Improve this Doc View Source bossNodesTravelled Declaration public int bossNodesTravelled Field Value Type Description int | Improve this Doc View Source characterBoons Declaration public Dictionary<string, int> characterBoons Field Value Type Description Dictionary string int | Improve this Doc View Source currencyGained Declaration public int currencyGained Field Value Type Description int | Improve this Doc View Source currencySpent Declaration public int currencySpent Field Value Type Description int | Improve this Doc View Source diedTo Declaration public string diedTo Field Value Type Description string | Improve this Doc View Source enemiesDefeated Declaration public Dictionary<string, int> enemiesDefeated Field Value Type Description Dictionary string int | Improve this Doc View Source nodesTravelled Declaration public int nodesTravelled Field Value Type Description int | Improve this Doc View Source VisitedEncounters Declaration public List<string> VisitedEncounters Field Value Type Description List string"
  },
  "api/Global.RuntimeAnchorBase-1.html": {
    "href": "api/Global.RuntimeAnchorBase-1.html",
    "title": "Class RuntimeAnchorBase<T> | Roguelite documentation",
    "keywords": "Class RuntimeAnchorBase<T> Inheritance object Object ScriptableObject SerializableScriptableObject DescriptionBaseSO RuntimeAnchorBase<T> CameraAnchor DialogueSystemEventsAnchor RunManagerAnchor TransformAnchor Inherited Members DescriptionBaseSO.description SerializableScriptableObject.Guid Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class RuntimeAnchorBase<T> : DescriptionBaseSO where T : Object Type Parameters Name Description T Fields | Improve this Doc View Source isSet Declaration [Header(\"Debug\")] public bool isSet Field Value Type Description bool | Improve this Doc View Source OnAnchorProvided Declaration public UnityAction OnAnchorProvided Field Value Type Description UnityAction Properties | Improve this Doc View Source Value Declaration public T Value { get; } Property Value Type Description T Methods | Improve this Doc View Source Provide(T) Declaration public void Provide(T value) Parameters Type Name Description T value | Improve this Doc View Source Unset() Declaration public void Unset()"
  },
  "api/Global.SceneLoader.html": {
    "href": "api/Global.SceneLoader.html",
    "title": "Class SceneLoader | Roguelite documentation",
    "keywords": "Class SceneLoader This class manages the scene loading and unloading. It is generally placed in the PersistentManagers scene and acts as a singleton (through SO event channels) Inheritance object Object Component Behaviour MonoBehaviour SceneLoader Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class SceneLoader : MonoBehaviour"
  },
  "api/Global.SerializableScriptableObject.html": {
    "href": "api/Global.SerializableScriptableObject.html",
    "title": "Class SerializableScriptableObject | Roguelite documentation",
    "keywords": "Class SerializableScriptableObject Inheritance object Object ScriptableObject SerializableScriptableObject DescriptionBaseSO Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class SerializableScriptableObject : ScriptableObject Properties | Improve this Doc View Source Guid Declaration public string Guid { get; } Property Value Type Description string"
  },
  "api/Global.SerializerUtility.html": {
    "href": "api/Global.SerializerUtility.html",
    "title": "Class SerializerUtility | Roguelite documentation",
    "keywords": "Class SerializerUtility Inheritance object SerializerUtility Namespace : Global Assembly : Assembly-CSharp.dll Syntax public static class SerializerUtility Methods | Improve this Doc View Source ListToString(List<string>) Declaration public static string ListToString(List<string> list) Parameters Type Name Description List string list Returns Type Description string | Improve this Doc View Source StringToDictionary(string) Declaration public static Dictionary<string, int> StringToDictionary(string field) Parameters Type Name Description string field Returns Type Description Dictionary string int | Improve this Doc View Source StringToList(string) Declaration public static List<string> StringToList(string field) Parameters Type Name Description string field Returns Type Description List string"
  },
  "api/Global.SpawnWaveTrigger.html": {
    "href": "api/Global.SpawnWaveTrigger.html",
    "title": "Class SpawnWaveTrigger | Roguelite documentation",
    "keywords": "Class SpawnWaveTrigger Inheritance object Object Component Behaviour MonoBehaviour SpawnWaveTrigger Namespace : Global Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(Collider))] [RequireComponent(typeof(Rigidbody))] public class SpawnWaveTrigger : MonoBehaviour Fields | Improve this Doc View Source playerEnteredTrigger Declaration public UnityEvent<Collider> playerEnteredTrigger Field Value Type Description UnityEvent Collider Methods | Improve this Doc View Source OnEnable() Declaration public void OnEnable() | Improve this Doc View Source OnTriggerEnter(Collider) Declaration public void OnTriggerEnter(Collider col) Parameters Type Name Description Collider col"
  },
  "api/Global.StartGame.html": {
    "href": "api/Global.StartGame.html",
    "title": "Class StartGame | Roguelite documentation",
    "keywords": "Class StartGame Inheritance object Object Component Behaviour MonoBehaviour StartGame Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class StartGame : MonoBehaviour Methods | Improve this Doc View Source StartNewGame() Declaration public void StartNewGame()"
  },
  "api/Global.TestCompression.html": {
    "href": "api/Global.TestCompression.html",
    "title": "Class TestCompression | Roguelite documentation",
    "keywords": "Class TestCompression Inheritance object Object Component Behaviour MonoBehaviour TestCompression Namespace : Global Assembly : Assembly-CSharp-firstpass.dll Syntax public class TestCompression : MonoBehaviour"
  },
  "api/Global.TramDeltDamage.html": {
    "href": "api/Global.TramDeltDamage.html",
    "title": "Class TramDeltDamage | Roguelite documentation",
    "keywords": "Class TramDeltDamage Inheritance object Object Component Behaviour MonoBehaviour TramDeltDamage Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class TramDeltDamage : MonoBehaviour Fields | Improve this Doc View Source damage Declaration public float damage Field Value Type Description float"
  },
  "api/Global.TramSpawn.html": {
    "href": "api/Global.TramSpawn.html",
    "title": "Class TramSpawn | Roguelite documentation",
    "keywords": "Class TramSpawn Inheritance object Object Component Behaviour MonoBehaviour TramSpawn Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class TramSpawn : MonoBehaviour Fields | Improve this Doc View Source tram Declaration public GameObject tram Field Value Type Description GameObject Methods | Improve this Doc View Source spawnTram() Declaration public void spawnTram()"
  },
  "api/Global.TransformAnchor.html": {
    "href": "api/Global.TransformAnchor.html",
    "title": "Class TransformAnchor | Roguelite documentation",
    "keywords": "Class TransformAnchor Inheritance object Object ScriptableObject SerializableScriptableObject DescriptionBaseSO RuntimeAnchorBase Transform TransformAnchor Inherited Members RuntimeAnchorBase<Transform>.OnAnchorProvided RuntimeAnchorBase<Transform>.isSet RuntimeAnchorBase<Transform>.Value RuntimeAnchorBase<Transform>.Provide(Transform) RuntimeAnchorBase<Transform>.Unset() DescriptionBaseSO.description SerializableScriptableObject.Guid Namespace : Global Assembly : Assembly-CSharp.dll Syntax [CreateAssetMenu(menuName = \"Runtime Anchors/Transform\")] public class TransformAnchor : RuntimeAnchorBase<Transform>"
  },
  "api/Global.TransformEventChannelSO.html": {
    "href": "api/Global.TransformEventChannelSO.html",
    "title": "Class TransformEventChannelSO | Roguelite documentation",
    "keywords": "Class TransformEventChannelSO This class is used for Events that have one transform argument. Example: Spawn system initializes player and fire event, where the transform is the position of player. Inheritance object Object ScriptableObject SerializableScriptableObject DescriptionBaseSO TransformEventChannelSO Inherited Members DescriptionBaseSO.description SerializableScriptableObject.Guid Namespace : Global Assembly : Assembly-CSharp.dll Syntax [CreateAssetMenu(menuName = \"Events/Transform Event Channel\")] public class TransformEventChannelSO : DescriptionBaseSO Fields | Improve this Doc View Source OnEventRaised Declaration public UnityAction<Transform> OnEventRaised Field Value Type Description UnityAction Transform Methods | Improve this Doc View Source RaiseEvent(Transform) Declaration public void RaiseEvent(Transform value) Parameters Type Name Description Transform value"
  },
  "api/Global.TransitionChannelSO.html": {
    "href": "api/Global.TransitionChannelSO.html",
    "title": "Class TransitionChannelSO | Roguelite documentation",
    "keywords": "Class TransitionChannelSO Inheritance object Object ScriptableObject SerializableScriptableObject DescriptionBaseSO TransitionChannelSO Inherited Members DescriptionBaseSO.description SerializableScriptableObject.Guid Namespace : Global Assembly : Assembly-CSharp.dll Syntax [CreateAssetMenu(menuName = \"Events/UI/Transition Channel\")] public class TransitionChannelSO : DescriptionBaseSO Fields | Improve this Doc View Source OnEventRaised Declaration public UnityAction<bool, float, Color> OnEventRaised Field Value Type Description UnityAction bool float Color Methods | Improve this Doc View Source FadeIn(float) Fade helper function to simplify usage. Fades the screen in to gameplay. Declaration public void FadeIn(float duration) Parameters Type Name Description float duration How long it takes to the image to fade in. | Improve this Doc View Source FadeOut(float) Fade helper function to simplify usage. Fades the screen out to black. Declaration public void FadeOut(float duration) Parameters Type Name Description float duration How long it takes to the image to fade out."
  },
  "api/Global.Trap.html": {
    "href": "api/Global.Trap.html",
    "title": "Class Trap | Roguelite documentation",
    "keywords": "Class Trap Inheritance object Object Component Behaviour MonoBehaviour Trap Namespace : Global Assembly : Assembly-CSharp.dll Syntax public class Trap : MonoBehaviour Fields | Improve this Doc View Source damage Declaration public float damage Field Value Type Description float"
  },
  "api/Global.UIGridRenderer.html": {
    "href": "api/Global.UIGridRenderer.html",
    "title": "Class UIGridRenderer | Roguelite documentation",
    "keywords": "Class UIGridRenderer Inheritance object Object Component Behaviour MonoBehaviour UnityEngine.EventSystems.UIBehaviour UnityEngine.UI.Graphic UIGridRenderer Namespace : Global Assembly : Assembly-CSharp-firstpass.dll Syntax public class UIGridRenderer : Graphic Fields | Improve this Doc View Source gridSize Declaration public Vector2Int gridSize Field Value Type Description Vector2Int | Improve this Doc View Source thickness Declaration public float thickness Field Value Type Description float Methods | Improve this Doc View Source OnPopulateMesh(VertexHelper) Declaration protected override void OnPopulateMesh(VertexHelper vh) Parameters Type Name Description UnityEngine.UI.VertexHelper vh Overrides UnityEngine.UI.Graphic.OnPopulateMesh(UnityEngine.UI.VertexHelper)"
  },
  "api/Global.UIVisibility.html": {
    "href": "api/Global.UIVisibility.html",
    "title": "Enum UIVisibility | Roguelite documentation",
    "keywords": "Enum UIVisibility Namespace : Global Assembly : Assembly-CSharp-firstpass.dll Syntax public enum UIVisibility Fields Name Description AlwaysFromStart Appears when dialogue UI opens. Also sets portrait names and images. AlwaysOnceShown Appears when showing first content. Never hidden after that. OnlyDuringContent Only visible when actively showing content (e.g., ShowSubtitle). Hidden when done (e.g., HideSubtitle). UntilSuperceded Appears when showing content (e.g., NPC.ShowSubtitle). Hidden only when content is shown in a different UI section (e.g., PC.ShowSubtitle). UntilSupercededOrActorChange Like UntilSuperceded, but will also hide and re-show if actor changes but wants to use same panel."
  },
  "api/Global.VoidEventChannelSO.html": {
    "href": "api/Global.VoidEventChannelSO.html",
    "title": "Class VoidEventChannelSO | Roguelite documentation",
    "keywords": "Class VoidEventChannelSO This class is used for Events that have no arguments (Example: Exit game event) Inheritance object Object ScriptableObject SerializableScriptableObject DescriptionBaseSO VoidEventChannelSO Inherited Members DescriptionBaseSO.description SerializableScriptableObject.Guid Namespace : Global Assembly : Assembly-CSharp.dll Syntax [CreateAssetMenu(menuName = \"Events/Void Event Channel\")] public class VoidEventChannelSO : DescriptionBaseSO Fields | Improve this Doc View Source OnEventRaised Declaration public UnityAction OnEventRaised Field Value Type Description UnityAction Methods | Improve this Doc View Source RaiseEvent() Declaration public void RaiseEvent()"
  },
  "api/Global.WaveSpawnType.html": {
    "href": "api/Global.WaveSpawnType.html",
    "title": "Enum WaveSpawnType | Roguelite documentation",
    "keywords": "Enum WaveSpawnType Namespace : Global Assembly : Assembly-CSharp.dll Syntax public enum WaveSpawnType Fields Name Description All OneByOne Random"
  },
  "api/Global.WaveTriggerType.html": {
    "href": "api/Global.WaveTriggerType.html",
    "title": "Enum WaveTriggerType | Roguelite documentation",
    "keywords": "Enum WaveTriggerType Namespace : Global Assembly : Assembly-CSharp.dll Syntax public enum WaveTriggerType Fields Name Description EliminateLastWave Timer TriggerCollider"
  },
  "index.html": {
    "href": "index.html",
    "title": "Kitsune Corner (Working title) | Roguelite documentation",
    "keywords": "Kitsune Corner (Working title) Narrative focussed roguelite with store management. This is the birds-eye-view Design Documentation for Kitsune Corner (Working title). For more in-depth or implementation specific documentation, see the Manual (also in the navbar above) for details. To edit this document please only edit the README.md file, the github-pages will be updated automatically after you commit README.md, and use Github Flavored Markdown (GFM) Overview Provisional logo and top-line description of the game. Keep narrative content to a minimum Index of pages in the wiki broken down into sub-sections as follows Team Writer/Producer: Audrey He 103597518 Programmer: Peamawat Muenjohn 102326287 Programmer: Ricky Huo 101453511 Artist 2D/3D: Brittany Holmes 101116966 Designer: Ethan Babatsikos 103619218 Platforms The game will be built for PC to be played on mouse and keyboard, however the controls are designed to easily map and copy onto a controller for players who prefer a hand held experience.\\ Various successful roguelikes have been released and made available on PC and the Nintendo Switch.\\ These include The Binding of Isaac, Hades, Risk of Rain 2, Enter The Gungeon. The controls in the game will be programmed onto mouse and keyboard giving players easy and comfortable ergonomic access to use all available abilities without straining their hands. In a research report done by DFC Intelligence, it is found that approximately 48% of all gaming happens on PC. Releasing this game on PC gives access to a wider player base. Machinery What are the mechanics, rules and economies you’re basing your project around? What are the larger meta-structures? Comprehensively detail these core mechanics and features of your game individually (separate the Power Pellets, Ghosts and Cherries!), and cross link them to one another. Present as a clearly and consistently formatted combination of images, diagrams and text. Sometimes a diagram or flowchart can more quickly communicate mechanical ideas than words alone. Consider also using Finite State Machines (FSMs) in these cases. Link these pages to and from relevant Trello cards in your team's board, so that team members working on tasks can refer easily to the documentation. Players will play as a Kitsune known as Kit who is human-like during the day time and a fully transformed nine-tailed fox at night who goes out to hunt.\\ During the day, players run a pen shop where NPC customers arrive to purchase writing goods. The gameplay during this time will mainly revolve around making pens for the customers based on their preferences.\\ This includes using various components of a pen such as ink colour, body build and thin/thickness to create the pen of the customer's desires. Players also interact with the customer learning around their own stories as the game progresses. The relationship and story you build with the customer may be affected by your choices as well as fulfilling their needs.\\ Building a strong relationship with the customer can benefit the player's combat and stats at night. Customers will pay with the in-game world currency known as Modulars. Modular coins can be used to upgrade the shop game-play wise or simply its appearance. To activate night-time, players can close their shop to time-skip to night which generates the roguelike gameplay. The levels are all randomly generated based on locations of Melbourne. There is no set order that the level come and go. (Insert Kit's abilities, mechanics, movesets here) (Insert enemy movement, attacks and abilities here) Enemies will drop items that can be brought back to the shop and used as equipment and ingredients for the pens. For example, blue enemies will drop blue pigmentation that can be used for blue ink. After each level is completed, random drops will occur. This can include Modulars, fish and power-ups. Fish can be used to exchange goods with Hebert the bear, who is a lonely shop keeper. Herbert randomly spawns in between levels and has a small stall where goods can be exchanged given the player has enough fish. Power-ups can also randomly drop which powers up Kit's abilties and movesets. Brand Identity Kitsune Corner is fully designed and produced in the heart of Melbourne. Therefore, the setting of the game is also fully based in a cyberpunk, synthwave futuristic fantasy version of Melbourne Victoria.\\ Unlike other Melbourne based games, Kitsune Corner aims to integrate various Melbourne street culture and location within the game. All the levels in the game will be various locations of the Melbourne CBD including famous iconic spaces such as Federation Square, Southbank Walk and Hozier Lane. There will also be less known locations that are still a symbol of Melbourne such as The Block Arcade. According to the UNESCO Institute for Statistics, in 2018 the United States of America accounted for 24% of global cultural creative export. This includes many forms of entertainment like Films, video games, music and other media items. This means that various of these contents display American landmarks and locations. Australia is only known for 6.5% of contribution in the creative and cultural industries in 2019. The game will also comprise characters from different cultural folklore. Melbourne is a very diverse and multicultural city with a significant population of people from different cultural backgrounds. In fact, almost half of the population in Melbourne are either born overseas or have at least one parent who was born overseas (Australian Bureau of Statistics 2016 Census). Having these different cultural characters will highlight the city's multiculturalism. Kitsune Corner aims to impress players with the games take on the cyberpunk aesthetic and its hand drawn 2D illustrations. The game also aims to generate connectivity within Australian players, particularly those who reside in Melbourne and display the identical levels to the locations of Melbourne. Schedule Detailed schedule broken down into tasks, milestones, deliverables and dependencies across the remaining weeks of Semester The Design doc may also include sections for additional or archival project reference / details, such as: Narrative: synopsis / back-story / characters / settings Paper design of game-play mechanics Draft level design Functional specification of key features Concept art and visual reference"
  },
  "manual/documentation.html": {
    "href": "manual/documentation.html",
    "title": "Documentation | Roguelite documentation",
    "keywords": "Documentation Docfx for Unity This project uses Docfx for Unity to automatically build code documentation using XML comments. It is also used to format and host the website, design documentation, and manuals for implementation of mechanics within this game. Every article uses Github Flavored Markdown (GFM) to format. Editing Online To edit an article: Click the Improve this Doc hyperlink on the right side of the page you wish to edit. Log in to a GitHub account with edit access to the pmuenjohn/roguelite repository. Click the edit icon to edit each article using the GitHub text editor. Clicking on the Preview tab of the GitHub editor allows you to preview your work. Offline All files should be in your local repository under Documentation/manual , edit using a text editor like VSCode with an extension that allows GFM style Markdown previews. To preview your work locally: Install DocFX On a command line open in your repository root directory, run: bash cp README.md Documentation/index.md docfx Documentation/docfx.json --serve The generated website will be visible at http://localhost:8080 . Add new Manual entry To add an article to the Manual, add a new Markdown file to the Documentation/manual folder in the repository and give it the .md extension. (You can do this in both the github repository or your local repository) Do not forget to add the file you created into an entry in the toc.yml file, otherwise it will not be visually accessible."
  },
  "manual/overview.html": {
    "href": "manual/overview.html",
    "title": "Overview | Roguelite documentation",
    "keywords": "Overview Hack and Slash Combat Store and Resource Management Characters and Relationships"
  },
  "manual/SpawningEnemies.html": {
    "href": "manual/SpawningEnemies.html",
    "title": "Spawning Enemies | Roguelite documentation",
    "keywords": "Spawning Enemies When entering a Location , the EnemySpawnManager (if present) will lock the PlayerExit (if present) and prepare to spawn the first wave of enemies. Each wave has its own preconditions for spawning and conditions to be considered complete. When all waves have been considered complete, the EnemySpawnManager will unlock the PlayerExit. Prerequisites To start using the EnemySpawnManager, there needs to be: Within the Scene: 1) An A* prefab object (this is the navmesh that the enemies will use to spawn and walk upon). 2) EnemySpawnManager prefab (this comes with mostly empty values and should be set up manually). Outside of the Scene: 1) The PersistentManagers scene needs to be additively loaded alongside the current scene (This should be done automatically). The EnemySpawnManager listens and waits upon the OnSceneReady channel to start spawning enemies. Optionally, you might also need: 1) PlayerExit prefab (with the \"PlayerExit\" tag). All of these can be found in the Assets/Prefabs folder. Assigning enemies to spawn Waves will not spawn until the previous wave has been cleared. Under waves, click the plus button to add a new wave. Wave details Populate the enemiesToSpawn array with enemy prefabs under Assets/Prefabs/Enemies. Feel free to use duplicate entries in order to spawn more than one of the same type of enemy. Preconditions Preconditions dictate what needs to happen before spawning in the wave. waveInitialSpawnDelay : If assigned to the first wave, it will spawn n seconds after OnSceneReady.\\ Subsequent waves will spawn n seconds after the previous wave has been considered Complete.\\ Good to keep this >0.5 in order to give the player some time to breathe when entering a location or after a wave. Complete Conditions Complete conditions dictate what needs to happen for the wave to be considered complete, so the EnemySpawnManager can consider the next wave, or to unlock the PlayerExit if this is the last wave.\\ Each of these is completely optional, and if left unassigned or set to 0 will not be calculated. waveCompleteDelay : Will allow the wave to complete n seconds after spawning nextWaveSpawnTrigger : If assigned a SpawnWaveTrigger, it will not consider the current wave complete until the player walks through the SpawnWaveTrigger. mustKillAllEnemiesToCompleteWave : Self explanatory Example The following example will has three \"Waves\", although only two waves actually spawn in enemies. The first \"PreWave Trigger\" is an empty Wave with no enemies assigned, and its nextWaveSpawnTrigger is assigned to a SpawnWaveTrigger somewhere in the map.\\ This will prevent the next wave (the first enemy spawning wave) from activating until the player enters the assigned SpawnWaveTrigger. The second wave \"FirstWave\" is the first wave which will actually spawn in enemies, after 1 second (waveInitialSpawnDelay) of the player \"completing\" the previous wave (Entering the SpawnWaveTrigger). The third wave \"SecondWave\" will activate 1 second (waveInitialSpawnDelay) after the previous wave is completed (\"FirstWave\" requires all enemies in the wave killed to complete (mustKillAllEnemiesToCompleteWave))"
  }
}